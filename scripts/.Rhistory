knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(ggthemes)
library(mcr)
install.packages('mcr')
library(mcr)
lst_insitu_dem <-deming::deming(lst_insitu$surface_temp_mean ~ lst_insitu$avg_temp)
lst_insitu_dem
install.packages('deming')
lst_insitu_dem <-deming::deming(lst_insitu$surface_temp_mean ~ lst_insitu$avg_temp)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(ggthemes)
library(mcr)
library(cowplot)
install.packages('cowplot')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(ggthemes)
library(mcr)
library(cowplot)
final_theme=theme_bw() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
plot.title=element_text(size=16, face='bold', hjust=0.5))
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
dir = 'C:/Users/steeleb/Documents/GitHub/ids-ne-lakes/'
lst_insitu <- read_csv(paste0(dir, 'data/temp_sunapee_paired.csv'),
col_types = c('')) %>%
filter(count>0) %>%
mutate(date =as.Date(substrRight(`system:index`, 8), '%Y%m%d'),
month = as.factor(format(date, '%m')),
year = as.factor(format(date, '%Y')),
doy = as.numeric(format(date, '%j')))
lst_insitu_ls <- lm(lst_insitu$surface_temp_mean ~ lst_insitu$avg_temp)
summary(lst_insitu_ls)
lst_insitu_dem <-deming::deming(lst_insitu$surface_temp_mean ~ lst_insitu$avg_temp)
lst_insitu_dem
ggplot(lst_insitu, aes(x = avg_temp, y = surface_temp_mean)) +
geom_point() +
geom_abline(intercept = lst_insitu_dem$coefficients[1], slope = lst_insitu_dem$coefficients[2], color = 'blue') +
geom_abline(intercept = lst_insitu_dem$ci[1,1], slope = lst_insitu_dem$ci[2,1], color = 'blue', linetype = 2) +
geom_abline(intercept = lst_insitu_dem$ci[1,2], slope = lst_insitu_dem$ci[2,2], color = 'blue', linetype = 2) +
geom_abline(intercept = 0, slope = 1) +
labs(y = 'satellite-derived mean LST (deg C)',
x = 'in-situ mean water temp (deg C)') +
final_theme
ggsave(paste0(dir, 'figures/predicted-observed_v02Mar2021.jpg'), height = 5, width = 5, units = 'in')
#and with error
lst_insitu <- lst_insitu %>%
mutate(insitu_se = t_std_dev/sqrt(count),
lst_se = surface_temp_stdDev/sqrt(pixel_count))
#se too small to see
summary(lst_insitu_dem)
lst_insitu_dem
lst_insitu_dem["model"]
lst_insitu_dem["sigma"]
cor(lst_insitu$surface_temp_mean, lst_insitu$avg_temp)
lst_insitu_dem["se"]
ggplot(lst_insitu, aes(x = opt_resid)) +
geom_qq()
lst_insitu_dem_forresid = mcreg(x = lst_insitu$avg_temp, y = lst_insitu$surface_temp_mean, method.reg = 'Deming')
lst_insitu$opt_resid = MCResult.getResiduals(lst_insitu_dem_forresid)$optimized
ggplot(lst_insitu, aes(x = opt_resid)) +
geom_qq()
ggplot(lst_insitu, aes(sample = opt_resid)) +
geom_qq()
ggplot(lst_insitu, aes(sample = opt_resid)) +
geom_qq() +
goem_qqline()
ggplot(lst_insitu, aes(sample = opt_resid)) +
geom_qq() +
geom_qq_line()
lst_insitu_dem_forresid
lst_insitu_dem_forresid@glob.coef
MCResult.printSummary()
MCResult.printSummary(lst_insitu_dem_forresid)
MCResult.printSummary(lst_insitu_dem_forresid)$
cor_pixel_doy = round(cor(x = lst_insitu$pixel_count, y = lst_insitu$doy), digits = 2)
pixel_doy <- ggplot(lst_insitu, aes(x = pixel_count, y = doy)) +
geom_point() +
geom_text(label = paste0('r = ', cor_pixel_doy), aes(y = 125, x = 8500)) +
labs(x = 'pixel count\ncontributing to mean LST', y='day of year') +
final_theme+
theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))
cor_doy_cloud = round(cor(x = lst_insitu$doy, y = lst_insitu$cloud_cover), digits = 2)
doy_cloud <- ggplot(lst_insitu, aes(x = doy, y = cloud_cover)) +
geom_point() +
geom_text(label = paste0('r = ', cor_doy_cloud), aes(y = 0, x = 275)) +
labs(x = 'day of year\n', y='percent cloud cover\nin Landsat image') +
final_theme+
theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))
ggsave(paste0(dir, 'figures/correlation_plot.png'), width = 12, height = 4)
plot_grid(pixel_doy, pixel_cloud, doy_cloud, labels = c('a', 'b', 'c'), nrow = 1)
pixel_cloud <- ggplot(lst_insitu, aes(x = pixel_count, y = cloud_cover)) +
geom_point() +
geom_text(label = paste0('r = ', cor_pixel_cloud), aes(y = 0, x = 8500)) +
labs(x = 'pixel count\ncontributing to mean LST', y='percent cloud cover\nin Landsat image') +
final_theme+
theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))
cor_pixel_cloud = round(cor(x = lst_insitu$pixel_count, y = lst_insitu$cloud_cover), digits = 2)
cor_pixel_cloud = '-0.50' #save as character for digit resolution
pixel_cloud <- ggplot(lst_insitu, aes(x = pixel_count, y = cloud_cover)) +
geom_point() +
geom_text(label = paste0('r = ', cor_pixel_cloud), aes(y = 0, x = 8500)) +
labs(x = 'pixel count\ncontributing to mean LST', y='percent cloud cover\nin Landsat image') +
final_theme+
theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))
cor_doy_cloud = round(cor(x = lst_insitu$doy, y = lst_insitu$cloud_cover), digits = 2)
doy_cloud <- ggplot(lst_insitu, aes(x = doy, y = cloud_cover)) +
geom_point() +
geom_text(label = paste0('r = ', cor_doy_cloud), aes(y = 0, x = 275)) +
labs(x = 'day of year\n', y='percent cloud cover\nin Landsat image') +
final_theme+
theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))
ggsave(paste0(dir, 'figures/correlation_plot.png'), width = 12, height = 4)
plot_grid(pixel_doy, pixel_cloud, doy_cloud, labels = c('a', 'b', 'c'), nrow = 1)
ggsave(paste0(dir, 'figures/correlation_plot.png'), width = 12, height = 4)
ggplot(lst_insitu, aes(x = avg_temp, y = surface_temp_mean, color = cloud_cover)) +
geom_point()
View(final_theme)
View(lst_insitu)
master_temp <- read_csv(paste0(dir, 'data/sunapee_highfrequency_record_22Jul2019.csv'))
filtered_temp <- master_temp %>%
filter(depth_m <=1.5)
View(filtered_temp)
summarized_temp <- filtered_temp %>%
group_by(datetime, source) %>%
summarize(median_temp_degC = median(temp_degC, na.rm = T),
nobs_median_temp = length(na.omit(temp_degC)))
View(summarized_temp)
filtered_temp <- master_temp %>%
filter(depth_m <=1.5 & date > '2015-01-01')
filtered_temp <- master_temp %>%
filter(depth_m <=1.5 & date > as.Date('2015-01-01'))
master_temp <- read_csv(paste0(dir, 'data/sunapee_highfrequency_record_22Jul2019.csv'))
master_temp <- read_csv(paste0(dir, 'data/sunapee_highfrequency_record_22Jul2019.csv'))
filtered_temp <- master_temp %>%
filter(depth_m <=1.5 & date > as.Date('2015-01-01'))
filtered_temp <- master_temp %>%
filter(depth_m <=1.5 & datetime > as.Date('2015-01-01'))
summarized_temp <- filtered_temp %>%
group_by(datetime, source) %>%
summarize(median_temp_degC = median(temp_degC, na.rm = T),
nobs_median_temp = length(na.omit(temp_degC)))
View(summarized_temp)
filtered_temp %>%
group_by(datetime, source) %>%
arrange(datetime, depth_m)
summarized_temp <- filtered_temp %>%
group_by(datetime, source) %>%
arrange(datetime, depth_m) %>%
summarize(first_temp_degC = first(temp_degC, na.rm = T),
first_depth_m = first(depth_m))
summarized_temp <- filtered_temp %>%
group_by(datetime, source) %>%
arrange(datetime, depth_m) %>%
summarize(first_temp_degC = first(na.omit(temp_degC)),
first_depth_m = first(depth_m))
View(summarized_temp)
filtered_temp <- master_temp %>%
filter(depth_m <=1.5 & datetime > as.Date('2015-01-01')) %>%
filter(!is.na(temp_degC))
summarized_temp <- filtered_temp %>%
group_by(datetime, source) %>%
arrange(datetime, depth_m) %>%
summarize(first_temp_degC = first(temp_degC),
first_depth_m = first(depth_m))
filtered_temp <- master_temp %>%
filter(depth_m <=1.5 & datetime > as.Date('2015-01-01')) %>%
filter(!is.na(temp_degC)) %>%
mutate(month = as.numeric(format(datetime, '%m'))) %>%
filter(month >=5 & month <=10)
summarized_temp <- filtered_temp %>%
group_by(datetime, source) %>%
arrange(datetime, depth_m) %>%
summarize(first_temp_degC = first(temp_degC),
first_depth_m = first(depth_m))
summarized_temp <- filtered_temp %>%
group_by(datetime, source, lat_dd, long_dd) %>%
arrange(datetime, depth_m) %>%
summarize(first_temp_degC = first(temp_degC),
first_depth_m = first(depth_m))
View(summarized_temp)
summarized_temp <- filtered_temp %>%
group_by(datetime, source, lat_dd, long_dd, source) %>%
arrange(datetime, depth_m) %>%
summarize(first_temp_degC = first(temp_degC),
first_depth_m = first(depth_m))
View(summarized_temp)
write_csv(summarized_temp, paste0(dir, 'data/filtered_raw_temp_v25March2021.csv'))
