FigA_b <- ggplot(C2_buoy, aes(x = loon_median, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_buoy_deming$coefficients[1], slope = C2_buoy_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_buoy_deming$ci[1,1], slope = C2_buoy_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_buoy_deming$ci[1,2], slope = C2_buoy_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(buoy_r, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('slope = ', round(buoy_slope, digits = 2)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = 'median Landsat-derived\nsurface temperature (deg C)',
title = 'Collection 2',
subtitle = '`buoy` dataset') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigA_a
FigA_b
FigA_a <- ggplot(C2, aes(x = is_temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_deming$coefficients[1], slope = C2_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_deming$ci[1,1], slope = C2_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_deming$ci[1,2], slope = C2_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(C2_r, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('slope = ', round(C2_slope, digits = 2)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = 'median Landsat-derived\nsurface temperature (deg C)',
title = 'all data') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigA_a
FigA_b <- ggplot(C2_buoy, aes(x = loon_median, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_buoy_deming$coefficients[1], slope = C2_buoy_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_buoy_deming$ci[1,1], slope = C2_buoy_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_buoy_deming$ci[1,2], slope = C2_buoy_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(buoy_r, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('slope = ', round(buoy_slope, digits = 2)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = 'median Landsat-derived\nsurface temperature (deg C)',
title = 'Collection 2',
subtitle = '`buoy` dataset') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigA_b
FigA_c <- ggplot(C2_buoy_2y, aes(x = loon_median, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_2ybuoy_deming$coefficients[1], slope = C2_2ybuoy_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_2ybuoy_deming$ci[1,1], slope = C2_2ybuoy_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_2ybuoy_deming$ci[1,2], slope = C2_2ybuoy_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(buoy2y_r, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('slope = ', round(buoy2y_slope, digits = 2)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = 'median Landsat-derived\nsurface temperature (deg C)',
title = 'Collection 2',
subtitle = '`buoy 2y` dataset') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigA_c
FigA_d <- ggplot(C2_2018, aes(x = is_temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_2018_deming$coefficients[1], slope = C2_2018_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_2018_deming$ci[1,1], slope = C2_2018_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_2018_deming$ci[1,2], slope = C2_2018_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(all2018_r, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('slope = ', round(all2018_slope, digits = 2)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = 'median Landsat-derived\nsurface temperature (deg C)',
title = 'Collection 2',
subtitle = '`2018` dataset') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigA_d
FigA_e <- ggplot(C2_HCS, aes(x = HerrickCoveSouth_median, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_HCS_deming$coefficients[1], slope = C2_HCS_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_HCS_deming$ci[1,1], slope = C2_HCS_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_HCS_deming$ci[1,2], slope = C2_HCS_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(HCS_r, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('slope = ', round(HCS_slope, digits = 2)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = 'median Landsat-derived\nsurface temperature (deg C)',
title = 'Collection 2',
subtitle = '`HCS` dataset') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigA_e
FigA_f <- ggplot(C2_NB, aes(x = Newbury_median, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_NB_deming$coefficients[1], slope = C2_NB_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_NB_deming$ci[1,1], slope = C2_NB_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_NB_deming$ci[1,2], slope = C2_NB_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(NB_r, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('slope = ', round(NB_slope, digits = 2)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = 'median Landsat-derived\nsurface temperature (deg C)',
title = 'Collection 2',
subtitle = '`NB` dataset') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigA_f
plot_grid(FigA_a, FigA_b, FigA_c, FigA_d, FigA_e, FigA_f,
labels = c('a', 'b', 'c', 'd', 'e', 'f'))
FigA_a <- ggplot(C2, aes(x = is_temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_deming$coefficients[1], slope = C2_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_deming$ci[1,1], slope = C2_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_deming$ci[1,2], slope = C2_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(C2_r, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('slope = ', round(C2_slope, digits = 2)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = '',
y = 'median Landsat-derived\nsurface temperature (deg C)',
title = 'all data') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigA_b <- ggplot(C2_buoy, aes(x = loon_median, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_buoy_deming$coefficients[1], slope = C2_buoy_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_buoy_deming$ci[1,1], slope = C2_buoy_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_buoy_deming$ci[1,2], slope = C2_buoy_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(buoy_r, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('slope = ', round(buoy_slope, digits = 2)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = '',
y = '',
title = '`buoy` dataset') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigA_c <- ggplot(C2_buoy_2y, aes(x = loon_median, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_2ybuoy_deming$coefficients[1], slope = C2_2ybuoy_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_2ybuoy_deming$ci[1,1], slope = C2_2ybuoy_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_2ybuoy_deming$ci[1,2], slope = C2_2ybuoy_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(buoy2y_r, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('slope = ', round(buoy2y_slope, digits = 2)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = '',
y = '',
title =  '`buoy 2y` dataset') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigA_d <- ggplot(C2_2018, aes(x = is_temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_2018_deming$coefficients[1], slope = C2_2018_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_2018_deming$ci[1,1], slope = C2_2018_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_2018_deming$ci[1,2], slope = C2_2018_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(all2018_r, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('slope = ', round(all2018_slope, digits = 2)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = '',
y = 'median Landsat-derived\nsurface temperature (deg C)',
title = '`2018` dataset') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigA_e <- ggplot(C2_HCS, aes(x = HerrickCoveSouth_median, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_HCS_deming$coefficients[1], slope = C2_HCS_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_HCS_deming$ci[1,1], slope = C2_HCS_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_HCS_deming$ci[1,2], slope = C2_HCS_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(HCS_r, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('slope = ', round(HCS_slope, digits = 2)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = '',
title = '`HCS` dataset') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigA_f <- ggplot(C2_NB, aes(x = Newbury_median, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_NB_deming$coefficients[1], slope = C2_NB_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_NB_deming$ci[1,1], slope = C2_NB_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_NB_deming$ci[1,2], slope = C2_NB_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(NB_r, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('slope = ', round(NB_slope, digits = 2)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = '',
y = '',
title = '`NB` dataset') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
plot_grid(FigA_a, FigA_b, FigA_c, FigA_d, FigA_e, FigA_f,
labels = c('a', 'b', 'c', 'd', 'e', 'f'))
plot_grid(FigA_a, FigA_b, FigA_c, FigA_d, FigA_e, FigA_f,
labels = c('a', 'b', 'c', 'd', 'e', 'f'),
label_x = 0.1)
nrow(C2)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
source('R_library.R')
# point to directories
C2_datadir <- '~/GitHub/ids-ne-lakes/data/colab-output/C2/'
fig_dir <- '~/GitHub/ids-ne-lakes/figures/'
plot_grid(y_lab, FigA,
NULL, x_lab,
ncol = 2,
rel_widths = c(0.05, 1.1),
rel_heights = c(1.1, 0.05))
FigA_a <- ggplot(C2, aes(x = is_temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_deming$coefficients[1], slope = C2_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_deming$ci[1,1], slope = C2_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_deming$ci[1,2], slope = C2_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(C2_r, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('slope = ', round(C2_slope, digits = 2)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', nrow(C2)),
x = 2,
y = 21,
size = 4,
hjust = 0)+
labs(x = NULL,
y = NULL,
title = 'all data') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigA_b <- ggplot(C2_buoy, aes(x = loon_median, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_buoy_deming$coefficients[1], slope = C2_buoy_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_buoy_deming$ci[1,1], slope = C2_buoy_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_buoy_deming$ci[1,2], slope = C2_buoy_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(buoy_r, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('slope = ', round(buoy_slope, digits = 2)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', nrow(C2_buoy)),
x = 2,
y = 21,
size = 4,
hjust = 0)+
labs(x = NULL,
y = NULL,
title = '`buoy` dataset') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigA_c <- ggplot(C2_buoy_2y, aes(x = loon_median, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_2ybuoy_deming$coefficients[1], slope = C2_2ybuoy_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_2ybuoy_deming$ci[1,1], slope = C2_2ybuoy_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_2ybuoy_deming$ci[1,2], slope = C2_2ybuoy_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(buoy2y_r, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('slope = ', round(buoy2y_slope, digits = 2)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', nrow(C2_buoy_2y)),
x = 2,
y = 21,
size = 4,
hjust = 0)+
labs(x = NULL,
y = NULL,
title =  '`buoy 2y` dataset') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigA_d <- ggplot(C2_2018, aes(x = is_temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_2018_deming$coefficients[1], slope = C2_2018_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_2018_deming$ci[1,1], slope = C2_2018_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_2018_deming$ci[1,2], slope = C2_2018_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(all2018_r, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('slope = ', round(all2018_slope, digits = 2)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', nrow(C2_2018)),
x = 2,
y = 21,
size = 4,
hjust = 0)+
labs(x = NULL,
y = NULL,
title = '`2018` dataset') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigA_e <- ggplot(C2_HCS, aes(x = HerrickCoveSouth_median, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_HCS_deming$coefficients[1], slope = C2_HCS_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_HCS_deming$ci[1,1], slope = C2_HCS_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_HCS_deming$ci[1,2], slope = C2_HCS_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(HCS_r, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('slope = ', round(HCS_slope, digits = 2)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', nrow(C2_HCS)),
x = 2,
y = 21,
size = 4,
hjust = 0)+
labs(x = NULL,
y = NULL,
title = '`HC` dataset') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigA_f <- ggplot(C2_NB, aes(x = Newbury_median, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_NB_deming$coefficients[1], slope = C2_NB_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_NB_deming$ci[1,1], slope = C2_NB_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_NB_deming$ci[1,2], slope = C2_NB_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(NB_r, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('slope = ', round(NB_slope, digits = 2)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', nrow(C2_NB)),
x = 2,
y = 21,
size = 4,
hjust = 0)+
labs(x = NULL,
y = NULL,
title = '`NB` dataset') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigA <- plot_grid(FigA_a, FigA_b, FigA_c, FigA_d, FigA_e, FigA_f,
labels = c('a', 'b', 'c', 'd', 'e', 'f'))
x_lab = ggdraw() + draw_label(label = expression(bold(paste(italic('in-situ'), ' median water temperature (deg C)'))),
fontface = 'bold')
y_lab = ggdraw() + draw_label(label = 'Landsat median water temperature (deg C)',
fontface = 'bold',
angle =90)
plot_grid(y_lab, FigA,
NULL, x_lab,
ncol = 2,
rel_widths = c(0.05, 1.1),
rel_heights = c(1.1, 0.05))
