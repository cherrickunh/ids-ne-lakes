}
print(grom)
}
is_5_gg <- grom_lm(5, 'in-situ')
is_6_gg <- grom_lm(6, 'in-situ')
is_7_gg <- grom_lm(7, 'in-situ')
is_8_gg <- grom_lm(8, 'in-situ')
is_9_gg <- grom_lm(9, 'in-situ')
is_10_gg <- grom_lm(10, 'in-situ')
ls_5_gg <- grom_lm(5, 'landsat')
ls_6_gg <- grom_lm(6, 'landsat')
ls_7_gg <- grom_lm(7, 'landsat')
ls_8_gg <- grom_lm(8, 'landsat')
ls_9_gg <- grom_lm(9, 'landsat')
ls_10_gg <- grom_lm(10, 'landsat')
#set up png device
png(file.path(datadir, 'application_monthly_median_temp.png'),
width=12,height=8, units = 'in', res = 300)
gridExtra::grid.arrange(is_5_gg, is_6_gg, is_7_gg, is_8_gg, is_9_gg, is_10_gg,
ls_5_gg, ls_6_gg, ls_7_gg, ls_8_gg, ls_9_gg, ls_10_gg,
nrow(2))
gridExtra::grid.arrange(is_5_gg, is_6_gg, is_7_gg, is_8_gg, is_9_gg, is_10_gg,
ls_5_gg, ls_6_gg, ls_7_gg, ls_8_gg, ls_9_gg, ls_10_gg,
height=2)
gridExtra::arrangeGrob(is_5_gg, is_6_gg, is_7_gg, is_8_gg, is_9_gg, is_10_gg,
ls_5_gg, ls_6_gg, ls_7_gg, ls_8_gg, ls_9_gg, ls_10_gg)
#set up png device
png(file.path(datadir, 'application_monthly_median_temp.png'),
width=12,height=8, units = 'in', res = 300)
gridExtra::grid.arrange(is_5_gg, is_6_gg, is_7_gg, is_8_gg, is_9_gg, is_10_gg,
ls_5_gg, ls_6_gg, ls_7_gg, ls_8_gg, ls_9_gg, ls_10_gg,
nrow = 2)
#Close pdf graphics device
dev.off()
#set up png device
png(file.path(datadir, 'application_monthly_median_temp.png'),
width=12,height=6, units = 'in', res = 300)
gridExtra::grid.arrange(is_5_gg, is_6_gg, is_7_gg, is_8_gg, is_9_gg, is_10_gg,
ls_5_gg, ls_6_gg, ls_7_gg, ls_8_gg, ls_9_gg, ls_10_gg,
nrow = 2)
#Close pdf graphics device
dev.off()
grom_lm = function(mm, ds){
data <- temp_monthly_median %>%
filter(month == mm & source == ds)
lm_result <- lm(data$value ~ data$year)
if(is.na(summary(lm_result)$coefficients[2,4])) {
grom <- ggplot(data, aes(x = year, y = value)) +
geom_point() +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
labs(x = NULL, y = NULL) +
final_theme
} else {
if(summary(lm_result)$coefficients[2,4] < 0.05){
grom <- ggplot(data, aes(x = year, y = value)) +
geom_point() +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
geom_abline(slope = summary(lm_result)$coefficients[2, 1],
intercept = summary(lm_result)$coefficients[1,1]) +
labs(x = NULL, y = NULL) +
final_theme
} else {
grom <- ggplot(data, aes(x = year, y = value)) +
geom_point() +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
labs(x = NULL, y = NULL) +
final_theme
}
}
print(grom)
}
is_5_gg <- grom_lm(5, 'in-situ')
is_6_gg <- grom_lm(6, 'in-situ')
is_7_gg <- grom_lm(7, 'in-situ')
is_8_gg <- grom_lm(8, 'in-situ')
is_9_gg <- grom_lm(9, 'in-situ')
is_10_gg <- grom_lm(10, 'in-situ')
ls_5_gg <- grom_lm(5, 'landsat')
ls_6_gg <- grom_lm(6, 'landsat')
ls_7_gg <- grom_lm(7, 'landsat')
ls_8_gg <- grom_lm(8, 'landsat')
ls_9_gg <- grom_lm(9, 'landsat')
ls_10_gg <- grom_lm(10, 'landsat')
#set up png device
png(file.path(datadir, 'application_monthly_median_temp.png'),
width=12,height=6, units = 'in', res = 300)
gridExtra::grid.arrange(is_5_gg, is_6_gg, is_7_gg, is_8_gg, is_9_gg, is_10_gg,
ls_5_gg, ls_6_gg, ls_7_gg, ls_8_gg, ls_9_gg, ls_10_gg,
nrow = 2)
#Close pdf graphics device
dev.off()
#set up png device
png(file.path(datadir, 'application_monthly_median_temp.png'),
width=12,height=6, units = 'in', res = 300)
gridExtra::grid.arrange(is_5_gg, is_6_gg, is_7_gg, is_8_gg, is_9_gg, is_10_gg,
ls_5_gg, ls_6_gg, ls_7_gg, ls_8_gg, ls_9_gg, ls_10_gg,
nrow = 2,
left = 'lake surface temperature\ndegrees C',
bottom = 'year')
#Close pdf graphics device
dev.off()
#set up png device
png(file.path(datadir, 'application_monthly_median_temp.png'),
width=16,height=6, units = 'in', res = 300)
gridExtra::grid.arrange(is_5_gg, is_6_gg, is_7_gg, is_8_gg, is_9_gg, is_10_gg,
ls_5_gg, ls_6_gg, ls_7_gg, ls_8_gg, ls_9_gg, ls_10_gg,
nrow = 2,
left = 'lake surface temperature\ndegrees C',
bottom =)
#Close pdf graphics device
dev.off()
#Close pdf graphics device
dev.off()
#set up png device
png(file.path(figdir, 'application_monthly_median_temp_bysource.png'),
width=16,height=6, units = 'in', res = 300)
gridExtra::grid.arrange(is_5_gg, is_6_gg, is_7_gg, is_8_gg, is_9_gg, is_10_gg,
ls_5_gg, ls_6_gg, ls_7_gg, ls_8_gg, ls_9_gg, ls_10_gg,
nrow = 2,
left = 'lake surface temperature\ndegrees C',
bottom =)
#Close pdf graphics device
dev.off()
#### plot on same axes with separate lines ####
may <- temp_monthly_median %>%
filter(month == 5)
View(may)
#### plot on same axes with separate lines ####
may <- temp_monthly_median %>%
filter(month == 5) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
final_theme +
scale_color_colorblind()
#### plot on same axes with separate lines ####
temp_monthly_median %>%
filter(month == 5) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
final_theme +
scale_color_colorblind()
dev.off()
#### plot on same axes with separate lines ####
temp_monthly_median %>%
filter(month == 5) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
final_theme +
scale_color_colorblind()
#### plot on same axes with separate lines ####
temp_monthly_median %>%
filter(month == 5) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind()
#### plot on same axes with separate lines ####
temp_monthly_median %>%
filter(month == 5) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL)
#### plot on same axes with separate lines ####
temp_monthly_median %>%
filter(month == 5) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL) +
theme(legend.position = 'none')
temp_monthly_median %>%
filter(month == 6) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL) +
theme(legend.position = 'none')
temp_monthly_median %>%
filter(month == 7) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
geom_abline(slope = is_7_lm$coefficients[2, 1],
intercept = is_7_lm$coefficients[1,1],
color = 'black') +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL) +
theme(legend.position = 'none')
temp_monthly_median %>%
filter(month == 7) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
geom_abline(slope = is_7_lm$coefficients[2, 1],
intercept = is_7_lm$coefficients[1,1],
color = 'black') +
geom_abline(slope = ls_7_lm$coefficients[2, 1],
intercept = ls_7_lm$coefficients[1,1],
color = 'gold') +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL) +
theme(legend.position = 'none')
temp_monthly_median %>%
filter(month == 7) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
geom_abline(slope = is_7_lm$coefficients[2, 1],
intercept = is_7_lm$coefficients[1,1],
color = 'black') +
geom_abline(slope = ls_7_lm$coefficients[2, 1],
intercept = ls_7_lm$coefficients[1,1],
color = "#E69F00") +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL) +
theme(legend.position = 'none')
temp_monthly_median %>%
filter(month == 8) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
geom_abline(slope = is_8_lm$coefficients[2, 1],
intercept = is_8_lm$coefficients[1,1],
color = 'black') +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL) +
theme(legend.position = 'none')
temp_monthly_median %>%
filter(month == 9) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
geom_abline(slope = ls_9_lm$coefficients[2, 1],
intercept = ls_9_lm$coefficients[1,1],
color = "#E69F00") +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL) +
theme(legend.position = 'none')
temp_monthly_median %>%
filter(month == 10) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
geom_abline(slope = ls_10_lm$coefficients[2, 1],
intercept = ls_10_lm$coefficients[1,1],
color = "#E69F00") +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL) +
theme(legend.position = 'none')
may <- temp_monthly_median %>%
filter(month == 5) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL) +
theme(legend.position = 'none')
june <- temp_monthly_median %>%
filter(month == 6) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL) +
theme(legend.position = 'none')
jul <- temp_monthly_median %>%
filter(month == 7) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
geom_abline(slope = is_7_lm$coefficients[2, 1],
intercept = is_7_lm$coefficients[1,1],
color = 'black') +
geom_abline(slope = ls_7_lm$coefficients[2, 1],
intercept = ls_7_lm$coefficients[1,1],
color = "#E69F00") +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL) +
theme(legend.position = 'none')
aug <- temp_monthly_median %>%
filter(month == 8) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
geom_abline(slope = is_8_lm$coefficients[2, 1],
intercept = is_8_lm$coefficients[1,1],
color = 'black') +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL) +
theme(legend.position = 'none')
sept <- temp_monthly_median %>%
filter(month == 9) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
geom_abline(slope = ls_9_lm$coefficients[2, 1],
intercept = ls_9_lm$coefficients[1,1],
color = "#E69F00") +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL) +
theme(legend.position = 'none')
oct <- temp_monthly_median %>%
filter(month == 10) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
geom_abline(slope = ls_10_lm$coefficients[2, 1],
intercept = ls_10_lm$coefficients[1,1],
color = "#E69F00") +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL) +
theme(legend.position = 'none')
#set up png device
png(file.path(figdir, 'application_monthly_median_temp_together.png'),
width=8,height=6, units = 'in', res = 300)
gridExtra::grid.arrange(may, june, jul, aug, sept, oct,
left = 'lake surface temperature\ndegrees C',
bottom = '    = in-situ        = landsat')
#Close pdf graphics device
dev.off()
#set up png device
png(file.path(figdir, 'application_monthly_median_temp_together.png'),
width=8,height=6, units = 'in', res = 300)
gridExtra::grid.arrange(may, june, jul, aug, sept, oct,
nrow = 1,
left = 'lake surface temperature\ndegrees C',
bottom = '    = in-situ        = landsat')
#Close pdf graphics device
dev.off()
#set up png device
png(file.path(figdir, 'application_monthly_median_temp_together.png'),
width=8,height=3, units = 'in', res = 300)
gridExtra::grid.arrange(may, june, jul, aug, sept, oct,
nrow = 1,
left = 'lake surface temperature\ndegrees C',
bottom = '    = in-situ        = landsat')
#Close pdf graphics device
dev.off()
#set up png device
png(file.path(figdir, 'application_monthly_median_temp_together.png'),
width=12,height=3, units = 'in', res = 300)
gridExtra::grid.arrange(may, june, jul, aug, sept, oct,
nrow = 1,
left = 'lake surface temperature\ndegrees C',
bottom = '    = in-situ        = landsat')
#Close pdf graphics device
dev.off()
#set up png device
png(file.path(figdir, 'application_monthly_median_temp_together.png'),
width=14,height=3, units = 'in', res = 300)
gridExtra::grid.arrange(may, june, jul, aug, sept, oct,
nrow = 1,
left = 'lake surface temperature\ndegrees C',
bottom = '    = in-situ        = landsat')
#Close pdf graphics device
dev.off()
#set up png device
png(file.path(figdir, 'application_monthly_median_temp_together.png'),
width=7,height=6, units = 'in', res = 300)
gridExtra::grid.arrange(may, june, jul, aug, sept, oct,
nrow = 2,
left = 'lake surface temperature\ndegrees C',
bottom = '    = in-situ        = landsat')
#Close pdf graphics device
dev.off()
#set up png device
png(file.path(figdir, 'application_monthly_median_temp_together.png'),
width=8,height=6, units = 'in', res = 300)
gridExtra::grid.arrange(may, june, jul, aug, sept, oct,
nrow = 2,
left = 'lake surface temperature\ndegrees C',
bottom = '    = in-situ        = landsat')
#Close pdf graphics device
dev.off()
#### plot on same axes with separate lines ####
may <- temp_monthly_median %>%
filter(month == 5) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL, title = 'May') +
theme(legend.position = 'none')
june <- temp_monthly_median %>%
filter(month == 6) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL, title = 'June') +
theme(legend.position = 'none')
jul <- temp_monthly_median %>%
filter(month == 7) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
geom_abline(slope = is_7_lm$coefficients[2, 1],
intercept = is_7_lm$coefficients[1,1],
color = 'black') +
geom_abline(slope = ls_7_lm$coefficients[2, 1],
intercept = ls_7_lm$coefficients[1,1],
color = "#E69F00") +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL, title = 'Jul') +
theme(legend.position = 'none')
aug <- temp_monthly_median %>%
filter(month == 8) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
geom_abline(slope = is_8_lm$coefficients[2, 1],
intercept = is_8_lm$coefficients[1,1],
color = 'black') +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL, title = 'August') +
theme(legend.position = 'none')
sept <- temp_monthly_median %>%
filter(month == 9) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
geom_abline(slope = ls_9_lm$coefficients[2, 1],
intercept = ls_9_lm$coefficients[1,1],
color = "#E69F00") +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL, title = 'September') +
theme(legend.position = 'none')
oct <- temp_monthly_median %>%
filter(month == 10) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source)) +
geom_abline(slope = ls_10_lm$coefficients[2, 1],
intercept = ls_10_lm$coefficients[1,1],
color = "#E69F00") +
final_theme +
coord_cartesian(ylim = c(7, 27),
xlim = c(1985, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL, title = 'October') +
theme(legend.position = 'none')
#set up png device
png(file.path(figdir, 'application_monthly_median_temp_together.png'),
width=8,height=6, units = 'in', res = 300)
gridExtra::grid.arrange(may, june, jul, aug, sept, oct,
nrow = 2,
left = 'lake surface temperature\ndegrees C',
bottom = '    = in-situ        = landsat')
#Close pdf graphics device
dev.off()
#set up png device
png(file.path(figdir, 'application_monthly_median_temp_together.png'),
width=8,height=6, units = 'in', res = 300)
gridExtra::grid.arrange(may, june, jul, aug, sept, oct,
nrow = 2,
left = 'lake surface temperature\ndegrees C',
bottom = 'black = in-situ   yellow = landsat')
#Close pdf graphics device
dev.off()
is_7_lm <- linear_analysis(7, 'in-situ')
ls_7_lm <- linear_analysis(7, 'landsat')
is_8_lm <- linear_analysis(8, 'in-situ')
ls_9_lm <- linear_analysis(9, 'landsat')
ls_10_lm <- linear_analysis(10, 'landsat')
