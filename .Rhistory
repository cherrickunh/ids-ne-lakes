tm_borders(lwd = 2) +
tm_scale_bar(position = c('right', 'bottom')) +
tm_shape(bbox_NE) +
tm_borders(lwd = 3, col = 'red')
NA_base
#put it all together
print(NA_base, vp = grid::viewport(0.3, 0.2, width= 0.4))
#put it all together
print(NA_base, vp = grid::viewport(0.3, 0.6, width= 0.4))
#put it all together
print(NA_base, vp = grid::viewport(0.3, 0.7, width= 0.4))
print(NE_base, vp = grid::viewport(0.3, 0.4, width = 0.4))
#put it all together
print(NA_base, vp = grid::viewport(0.3, 0.8, width= 0.4))
print(NE_base, vp = grid::viewport(0.3, 0.3, width = 0.4))
print(sunbase, vp = grid::viewport(0.7, 0.5, height = 1))
# NA with better focus
NE_base = tm_shape(NA_wstates, bbox = bbox_NE) +
tm_polygons() +
tm_shape(northamer) +
tm_borders(lwd = 2)+
tm_scale_bar(position = c('right', 'bottom')) +
tm_shape(bbox_sunapee) +
tm_borders(lwd = 3, col = 'blue')
#put it all together
print(NA_base, vp = grid::viewport(0.3, 0.85, width= 0.4))
print(NE_base, vp = grid::viewport(0.3, 0.35, width = 0.4))
print(sunbase, vp = grid::viewport(0.7, 0.5, height = 1))
tm_layout(frame.lwd = 3, col = 'red')
tm_layout(frame.lwd = 3)
NA_base
# NA with better focus
NA_base = tm_shape(NA_wstates, bbox = bbox_new) +
tm_polygons() +
tm_shape(northamer) +
tm_borders(lwd = 2) +
tm_scale_bar(position = c('right', 'bottom')) +
tm_shape(bbox_NE) +
tm_borders(lwd = 3, col = 'red') +
tm_layout(frame.lwd = 3)
NA_base
# NA with better focus
NA_base = tm_shape(NA_wstates, bbox = bbox_new) +
tm_polygons() +
tm_shape(northamer) +
tm_borders(lwd = 2) +
tm_scale_bar(position = c('right', 'bottom')) +
tm_shape(bbox_NE) +
tm_borders(lwd = 3, col = 'red') +
tm_layout(frame.lwd = 3, frame.col = 'red')
NA_base
# NA with better focus
NA_base = tm_shape(NA_wstates, bbox = bbox_new) +
tm_polygons() +
tm_shape(northamer) +
tm_borders(lwd = 2) +
tm_scale_bar(position = c('right', 'bottom')) +
tm_shape(bbox_NE) +
tm_borders(lwd = 3, col = 'red') +
tm_layout(frame.lwd = 3, frame = 'red')
NA_base
# NA with better focus
NA_base = tm_shape(NA_wstates, bbox = bbox_new) +
tm_polygons() +
tm_shape(northamer) +
tm_borders(lwd = 2) +
tm_scale_bar(position = c('right', 'bottom')) +
tm_shape(bbox_NE) +
tm_borders(lwd = 3, col = 'red')
NA_base
# NA with better focus
NE_base = tm_shape(NA_wstates, bbox = bbox_NE) +
tm_polygons() +
tm_shape(northamer) +
tm_borders(lwd = 2)+
tm_scale_bar(position = c('right', 'bottom')) +
tm_shape(bbox_sunapee) +
tm_borders(lwd = 3, col = 'blue') +
tm_layout(frame.lwd = 3, frame = 'red')
NE_base
#make sunapee basemap
sunbase = tm_shape(sun_bathy) +
tm_raster(palette = 'Blues',
title = 'lake depth\n(meters)') +
tm_shape(sun) +
tm_borders() +
tm_shape(sampling_georef) +
tm_dots(col = 'frequency',
shape = 24,
size = 0.5,
title = 'sampling\nfrequency',
palette = c('black', 'yellow')) +
tm_compass(position = c('left', 'bottom')) +
tm_scale_bar(position = c('left', 'bottom')) +
tm_layout(inner.margins = 0.05, frame.lwd = 3, frame = 'blue')
#put it all together
print(NA_base, vp = grid::viewport(0.3, 0.85, width= 0.4))
print(NE_base, vp = grid::viewport(0.3, 0.35, width = 0.4))
print(sunbase, vp = grid::viewport(0.7, 0.5, height = 1))
#put it all together
print(NA_base, vp = grid::viewport(0.3, 0.853, width= 0.4))
print(NE_base, vp = grid::viewport(0.3, 0.33, width = 0.4))
print(sunbase, vp = grid::viewport(0.7, 0.5, height = 1))
#put it all together
print(NA_base, vp = grid::viewport(0.3, 0.848, width= 0.4))
print(NE_base, vp = grid::viewport(0.3, 0.34, width = 0.4))
#put it all together
print(NA_base, vp = grid::viewport(0.3, 0.847, width= 0.4))
print(NE_base, vp = grid::viewport(0.3, 0.342, width = 0.4))
print(NA_base, vp = grid::viewport(0.3, 0.847, width= 0.4))
print(NE_base, vp = grid::viewport(0.3, 0.342, width = 0.4))
print(sunbase, vp = grid::viewport(0.7, 0.5, height = 1))
fig_dir = 'figures/'
ggsave(file.path(fig_dir, 'Fig2_DataExtent.png'))
tmap_save(file.path(fig_dir, 'Fig2_DataExtent.png'),
width = 1500)
#put it all together
png(file = file.path(fig_dir, 'Fig2_DataExtent.png'),
width = 1500)
print(NA_base, vp = grid::viewport(0.3, 0.847, width= 0.4))
print(NE_base, vp = grid::viewport(0.3, 0.342, width = 0.4))
print(sunbase, vp = grid::viewport(0.7, 0.5, height = 1))
dev.off()
#put it all together
png(file = file.path(fig_dir, 'Fig2_DataExtent.png'),
width = 4*300,
height= 6*300)
print(NA_base, vp = grid::viewport(0.3, 0.847, width= 0.4))
print(NE_base, vp = grid::viewport(0.3, 0.342, width = 0.4))
print(sunbase, vp = grid::viewport(0.7, 0.5, height = 1))
dev.off()
print(NA_base, vp = grid::viewport(0.3, 0.847, width= 0.4))
print(NE_base, vp = grid::viewport(0.3, 0.342, width = 0.4))
print(sunbase, vp = grid::viewport(0.7, 0.5, height = 1))
#make sunapee basemap
sunbase = tm_shape(sun_bathy) +
tm_raster(palette = 'Blues',
title = 'lake depth\n(meters)') +
tm_shape(sun) +
tm_borders() +
tm_shape(sampling_georef) +
tm_dots(col = 'frequency',
shape = 24,
size = 0.5,
title = 'sampling\nfrequency',
palette = c('black', 'yellow')) +
tm_compass(position = c('left', 'bottom')) +
tm_scale_bar(position = c('left', 'bottom')) +
tm_layout(inner.margins = 0.1, frame.lwd = 3, frame = 'blue')
sunbase
#put it all together
png(file = file.path(fig_dir, 'Fig2_DataExtent.png',
width = 4*200,
height = 6*200))
dev.off()
#put it all together
png(file = file.path(fig_dir, 'Fig2_DataExtent.png',
width = 6*200,
height = 6*200))
print(NA_base, vp = grid::viewport(0.3, 0.847, width= 0.4))
print(NE_base, vp = grid::viewport(0.3, 0.342, width = 0.4))
print(sunbase, vp = grid::viewport(0.7, 0.5, height = 1))
dev.off()
dev.off()
sunbase
#create a new one and modify
bbox_sun_new <- st_bbox(sun_bathy)
#create a new one and modify
bbox_sun_new <- st_bbox(sun_bathy)
bbox_sun_new[1] <- bbox_sun_new[1] + (0.1 * xrange) # xmin - left
bbox_sun_new[3] <- bbox_sun_new[3] + (0.1 * xrange) # xmax - right
bbox_sun_new[2] <- bbox_sun_new[2] + (0.1 * yrange) # ymin - bottom
bbox_sun_new[4] <- bbox_sun_new[4] + (0.1 * yrange) # ymax - top
#make sunapee basemap ----
#play with extent for legends to fit
sunbase = tm_shape(sun_bathy, bbox = bbox_sun_new) +
tm_raster(palette = 'Blues',
title = 'lake depth\n(meters)') +
tm_shape(sun) +
tm_borders() +
tm_shape(sampling_georef) +
tm_dots(col = 'frequency',
shape = 24,
size = 0.5,
title = 'sampling\nfrequency',
palette = c('black', 'yellow')) +
tm_compass(position = c('left', 'bottom')) +
tm_scale_bar(position = c('left', 'bottom')) +
tm_layout(frame.lwd = 3, frame = 'blue')
sunbase
#create a new one and modify
bbox_sun_new <- st_bbox(sun_bathy)
bbox_sun_new[1] <- bbox_sun_new[1] - (0.1 * xrange) # xmin - left
bbox_sun_new[3] <- bbox_sun_new[3] + (0.1 * xrange) # xmax - right
bbox_sun_new[2] <- bbox_sun_new[2] - (0.1 * yrange) # ymin - bottom
bbox_sun_new[4] <- bbox_sun_new[4] + (0.1 * yrange) # ymax - top
#make sunapee basemap ----
#play with extent for legends to fit
sunbase = tm_shape(sun_bathy, bbox = bbox_sun_new) +
tm_raster(palette = 'Blues',
title = 'lake depth\n(meters)') +
tm_shape(sun) +
tm_borders() +
tm_shape(sampling_georef) +
tm_dots(col = 'frequency',
shape = 24,
size = 0.5,
title = 'sampling\nfrequency',
palette = c('black', 'yellow')) +
tm_compass(position = c('left', 'bottom')) +
tm_scale_bar(position = c('left', 'bottom')) +
tm_layout(frame.lwd = 3, frame = 'blue')
sunbase
#make sunapee basemap ----
#play with extent for legends to fit
sunbase = tm_shape(sun_bathy) +
tm_raster(palette = 'Blues',
title = 'lake depth\n(meters)') +
tm_shape(sun) +
tm_borders() +
tm_shape(sampling_georef) +
tm_dots(col = 'frequency',
shape = 24,
size = 0.5,
title = 'sampling\nfrequency',
palette = c('black', 'yellow')) +
tm_compass(position = c('left', 'bottom')) +
tm_scale_bar(position = c('left', 'bottom')) +
tm_layout(frame.lwd = 3, frame = 'blue')
sunbase
#create a new one and modify
bbox_sun_new <- st_bbox(sun_bathy)
bbox_sun_new[1] <- bbox_sun_new[1] - (0.2 * xrange) # xmin - left
bbox_sun_new[3] <- bbox_sun_new[3] + (0.2 * xrange) # xmax - right
bbox_sun_new[2] <- bbox_sun_new[2] - (0.2 * yrange) # ymin - bottom
bbox_sun_new[4] <- bbox_sun_new[4] + (0.2 * yrange) # ymax - top
#get bounding box of bathy
bbox_sunapee <- st_bbox(sun_bathy) # current bounding box
xrange <- bbox_sunapee$xmax - bbox_sunapee$xmin # range of x values
yrange <- bbox_sunapee$ymax - bbox_sunapee$ymin # range of y values
#create a new one and modify
bbox_sun_new <- st_bbox(sun_bathy)
bbox_sun_new[1] <- bbox_sun_new[1] - (0.2 * xrange) # xmin - left
bbox_sun_new[3] <- bbox_sun_new[3] + (0.2 * xrange) # xmax - right
bbox_sun_new[2] <- bbox_sun_new[2] - (0.2 * yrange) # ymin - bottom
bbox_sun_new[4] <- bbox_sun_new[4] + (0.2 * yrange) # ymax - top
#make it a sf poly
bbox_sunapee = bbox_sunapee %>%
st_as_sfc()
#make sunapee basemap ----
#play with extent for legends to fit
sunbase = tm_shape(sun_bathy) +
tm_raster(palette = 'Blues',
title = 'lake depth\n(meters)') +
tm_shape(sun) +
tm_borders() +
tm_shape(sampling_georef) +
tm_dots(col = 'frequency',
shape = 24,
size = 0.5,
title = 'sampling\nfrequency',
palette = c('black', 'yellow')) +
tm_compass(position = c('left', 'bottom')) +
tm_scale_bar(position = c('left', 'bottom')) +
tm_layout(frame.lwd = 3, frame = 'blue')
sunbase
#make sunapee basemap ----
#play with extent for legends to fit
sunbase = tm_shape(sun_bathy, bbox = bbox_sun_new) +
tm_raster(palette = 'Blues',
title = 'lake depth\n(meters)') +
tm_shape(sun) +
tm_borders() +
tm_shape(sampling_georef) +
tm_dots(col = 'frequency',
shape = 24,
size = 0.5,
title = 'sampling\nfrequency',
palette = c('black', 'yellow')) +
tm_compass(position = c('left', 'bottom')) +
tm_scale_bar(position = c('left', 'bottom')) +
tm_layout(frame.lwd = 3, frame = 'blue')
sunbase
#get bounding box of bathy
bbox_sunapee <- st_bbox(sun_bathy) # current bounding box
xrange <- bbox_sunapee$xmax - bbox_sunapee$xmin # range of x values
yrange <- bbox_sunapee$ymax - bbox_sunapee$ymin # range of y values
#create a new one and modify
bbox_sun_new <- st_bbox(sun_bathy)
bbox_sun_new[1] <- bbox_sun_new[1] - (0.25 * xrange) # xmin - left
bbox_sun_new[3] <- bbox_sun_new[3] + (0.25 * xrange) # xmax - right
bbox_sun_new[2] <- bbox_sun_new[2] - (0.05 * yrange) # ymin - bottom
bbox_sun_new[4] <- bbox_sun_new[4] + (0.05 * yrange) # ymax - top
#make sunapee basemap ----
#play with extent for legends to fit
sunbase = tm_shape(sun_bathy, bbox = bbox_sun_new) +
tm_raster(palette = 'Blues',
title = 'lake depth\n(meters)') +
tm_shape(sun) +
tm_borders() +
tm_shape(sampling_georef) +
tm_dots(col = 'frequency',
shape = 24,
size = 0.5,
title = 'sampling\nfrequency',
palette = c('black', 'yellow')) +
tm_compass(position = c('left', 'bottom')) +
tm_scale_bar(position = c('left', 'bottom')) +
tm_layout(frame.lwd = 3, frame = 'blue')
sunbase
bbox_sun_new[1] <- bbox_sun_new[1] - (0.30 * xrange) # xmin - left
bbox_sun_new[3] <- bbox_sun_new[3] + (0.30 * xrange) # xmax - right
bbox_sun_new[2] <- bbox_sun_new[2] - (0.05 * yrange) # ymin - bottom
bbox_sun_new[4] <- bbox_sun_new[4] + (0.05 * yrange) # ymax - top
#make sunapee basemap ----
#play with extent for legends to fit
sunbase = tm_shape(sun_bathy, bbox = bbox_sun_new) +
tm_raster(palette = 'Blues',
title = 'lake depth\n(meters)') +
tm_shape(sun) +
tm_borders() +
tm_shape(sampling_georef) +
tm_dots(col = 'frequency',
shape = 24,
size = 0.5,
title = 'sampling\nfrequency',
palette = c('black', 'yellow')) +
tm_compass(position = c('left', 'bottom')) +
tm_scale_bar(position = c('left', 'bottom')) +
tm_layout(frame.lwd = 3, frame = 'blue')
sunbase
#make sunapee basemap ----
#play with extent for legends to fit
sunbase = tm_shape(sun_bathy, bbox = bbox_sun_new) +
tm_raster(palette = 'Blues',
title = 'lake depth\n(meters)') +
tm_shape(sun) +
tm_borders() +
tm_shape(sampling_georef) +
tm_dots(col = 'frequency',
shape = 24,
size = 0.5,
title = 'sampling\nfrequency',
palette = c('black', 'yellow')) +
tm_compass(position = c('right', 'bottom')) +
tm_scale_bar(position = c('right', 'bottom')) +
tm_layout(frame.lwd = 3, frame = 'blue')
sunbase
#make sunapee basemap ----
#play with extent for legends to fit
sunbase = tm_shape(sun_bathy, bbox = bbox_sun_new) +
tm_raster(palette = 'Blues',
title = 'lake depth\n(meters)') +
tm_shape(sun) +
tm_borders() +
tm_shape(sampling_georef) +
tm_dots(col = 'frequency',
shape = 24,
size = 0.5,
title = 'sampling\nfrequency',
palette = c('black', 'yellow'),
position = c('left', 'bottom')) +
tm_compass(position = c('right', 'bottom')) +
tm_scale_bar(position = c('right', 'bottom')) +
tm_layout(frame.lwd = 3, frame = 'blue')
sunbase
#make sunapee basemap ----
#play with extent for legends to fit
sunbase = tm_shape(sun_bathy, bbox = bbox_sun_new) +
tm_raster(palette = 'Blues',
title = 'lake depth\n(meters)',
legend.position = c('left', 'bottom')) +
tm_shape(sun) +
tm_borders() +
tm_shape(sampling_georef) +
tm_dots(col = 'frequency',
shape = 24,
size = 0.5,
title = 'sampling\nfrequency',
palette = c('black', 'yellow')) +
tm_compass(position = c('right', 'bottom')) +
tm_scale_bar(position = c('right', 'bottom')) +
tm_layout(frame.lwd = 3, frame = 'blue')
sunbase
#make sunapee basemap ----
#play with extent for legends to fit
sunbase = tm_shape(sun_bathy, bbox = bbox_sun_new) +
tm_raster(palette = 'Blues',
title = 'lake depth\n(meters)') +
tm_shape(sun) +
tm_borders() +
tm_shape(sampling_georef) +
tm_dots(col = 'frequency',
shape = 24,
size = 0.5,
title = 'sampling\nfrequency',
palette = c('black', 'yellow')) +
tm_compass(position = c('right', 'bottom')) +
tm_scale_bar(position = c('right', 'bottom')) +
tm_layout(frame.lwd = 3, frame = 'blue',
legend.position = c('left', 'bottom'))
sunbase
#create a new one and modify
bbox_sun_new <- st_bbox(sun_bathy)
bbox_sun_new[1] <- bbox_sun_new[1] - (0.25 * xrange) # xmin - left
bbox_sun_new[3] <- bbox_sun_new[3] + (0.25 * xrange) # xmax - right
bbox_sun_new[2] <- bbox_sun_new[2] - (0.05 * yrange) # ymin - bottom
bbox_sun_new[4] <- bbox_sun_new[4] + (0.05 * yrange) # ymax - top
#make sunapee basemap ----
#play with extent for legends to fit
sunbase = tm_shape(sun_bathy, bbox = bbox_sun_new) +
tm_raster(palette = 'Blues',
title = 'lake depth\n(meters)') +
tm_shape(sun) +
tm_borders() +
tm_shape(sampling_georef) +
tm_dots(col = 'frequency',
shape = 24,
size = 0.5,
title = 'sampling\nfrequency',
palette = c('black', 'yellow')) +
tm_compass(position = c('right', 'bottom')) +
tm_scale_bar(position = c('right', 'bottom')) +
tm_layout(frame.lwd = 3, frame = 'blue',
legend.position = c('left', 'bottom'))
sunbase
#create a new one and modify
bbox_sun_new <- st_bbox(sun_bathy)
bbox_sun_new[1] <- bbox_sun_new[1] - (0.25 * xrange) # xmin - left
bbox_sun_new[3] <- bbox_sun_new[3] + (0.25 * xrange) # xmax - right
bbox_sun_new[2] <- bbox_sun_new[2] - (0.075 * yrange) # ymin - bottom
bbox_sun_new[4] <- bbox_sun_new[4] + (0.025 * yrange) # ymax - top
#make sunapee basemap ----
#play with extent for legends to fit
sunbase = tm_shape(sun_bathy, bbox = bbox_sun_new) +
tm_raster(palette = 'Blues',
title = 'lake depth\n(meters)') +
tm_shape(sun) +
tm_borders() +
tm_shape(sampling_georef) +
tm_dots(col = 'frequency',
shape = 24,
size = 0.5,
title = 'sampling\nfrequency',
palette = c('black', 'yellow')) +
tm_compass(position = c('right', 'bottom')) +
tm_scale_bar(position = c('right', 'bottom')) +
tm_layout(frame.lwd = 3, frame = 'blue',
legend.position = c('left', 'bottom'))
sunbase
#put it all together
png(file = file.path(fig_dir, 'Fig2_DataExtent.png',
width = 6*200,
height = 6*200))
#put it all together
png(file = file.path(fig_dir, 'Fig2_DataExtent.png'),
width = 6*200,
height = 6*200))
#put it all together
png(file = file.path(fig_dir, 'Fig2_DataExtent.png'),
width = 6*200,
height = 6*200)
print(NA_base, vp = grid::viewport(0.3, 0.847, width= 0.4))
print(NE_base, vp = grid::viewport(0.3, 0.342, width = 0.4))
print(sunbase, vp = grid::viewport(0.7, 0.5, height = 1))
dev.off()
#put it all together
png(file = file.path(fig_dir, 'Fig2_DataExtent.png'),
width = 6*200,
height = 6*200)
print(NA_base, vp = grid::viewport(0.3, 0.847, width= 0.3))
print(NE_base, vp = grid::viewport(0.3, 0.342, width = 0.3))
print(sunbase, vp = grid::viewport(0.7, 0.5, height = 1))
dev.off()
#put it all together
png(file = file.path(fig_dir, 'Fig2_DataExtent.png'),
width = 6*100,
height = 6*100)
print(NA_base, vp = grid::viewport(0.3, 0.847, width= 0.3))
print(NE_base, vp = grid::viewport(0.3, 0.342, width = 0.3))
print(sunbase, vp = grid::viewport(0.7, 0.5, height = 1))
dev.off()
#put it all together
png(file = file.path(fig_dir, 'Fig2_DataExtent.png'),
width = 6,
height = 6,
units = 'in',
res = 300)
print(NA_base, vp = grid::viewport(0.3, 0.847, width= 0.3))
print(NE_base, vp = grid::viewport(0.3, 0.342, width = 0.3))
print(sunbase, vp = grid::viewport(0.7, 0.5, height = 1))
dev.off()
#put it all together
png(file = file.path(fig_dir, 'Fig2_DataExtent.png'),
width = 6,
height = 6,
units = 'in',
res = 300)
print(NA_base, vp = grid::viewport(0.2, 0.847, width= 0.4))
print(NE_base, vp = grid::viewport(0.0, 0.342, width = 0.4))
print(sunbase, vp = grid::viewport(0.7, 0.5, height = 1))
dev.off()
#put it all together
png(file = file.path(fig_dir, 'Fig2_DataExtent.png'),
width = 6,
height = 6,
units = 'in',
res = 300)
print(NA_base, vp = grid::viewport(0.22, 0.847, width= 0.4))
print(NE_base, vp = grid::viewport(0.22, 0.342, width = 0.4))
print(sunbase, vp = grid::viewport(0.7, 0.5, height = 1))
dev.off()
