label_x = 0.05,
label_y = 0.97,
ncol = 3)
Fig5
Fig5_labels = plot_grid(y_axis_title, Fig5,
NULL, x_axis_title,
ncol = 2,
rel_widths = c(0.05, 0.95),
rel_heights = c(0.95, 0.05))
Fig5_labels
legend = plot_grid(NULL, leg, leg_line, leg_dash, NULL,
align = 'v',
ncol = 1)
Fig5_labels_leg = plot_grid(Fig5_labels, legend,
ncol = 2,
rel_widths = c(0.8, 0.2))
Fig5_labels_leg
for_legdash = temp_monthly_median %>%
filter(month == 9) %>%
ggplot(., aes(x = year, y = value))+
geom_point() +
geom_smooth(method = 'lm', se = F, linetype = 'dashed', aes(color = '#009E73')) +
geom_smooth(method = 'lm', se = F, linetype = 'dashed', aes(color = '#E69F00')) +
geom_smooth(method = 'lm', se = F, linetype = 'dashed', aes(color = '#000000')) +
theme_bw() +
scale_color_identity(guide = 'legend',
name = 'no slope model',
breaks = c('#000000', '#E69F00', '#009E73'),
labels = c(paste(italic('in situ')), 'landsat', paste(italic('in situ'), ' + landsat')))+
theme(legend.key.width = unit(1, 'cm'))
leg_dash = get_legend(for_legdash)
for_legdash = temp_monthly_median %>%
filter(month == 9) %>%
ggplot(., aes(x = year, y = value))+
geom_point() +
geom_smooth(method = 'lm', se = F, linetype = 'dashed', aes(color = '#009E73')) +
geom_smooth(method = 'lm', se = F, linetype = 'dashed', aes(color = '#E69F00')) +
geom_smooth(method = 'lm', se = F, linetype = 'dashed', aes(color = '#000000')) +
theme_bw() +
scale_color_identity(guide = 'legend',
name = 'no slope model',
breaks = c('#000000', '#E69F00', '#009E73'),
labels = c(expression(paste(italic('in situ'))), 'landsat', expression(paste(italic('in situ'), ' + landsat'))))+
theme(legend.key.width = unit(1, 'cm'))
leg_dash = get_legend(for_legdash)
#save title
y_axis_title = ggdraw() + draw_label('median lake surface temperature\n(degrees C)', size = 12, fontface = "bold", angle = 90)
x_axis_title = ggdraw() + draw_label('year', size = 12, fontface = 'bold')
Fig5 = plot_grid(jul, aug, sept,
labels = c('a', 'b', 'c'),
label_size = 10,
label_x = 0.05,
label_y = 0.97,
ncol = 3)
Fig5
Fig5_labels = plot_grid(y_axis_title, Fig5,
NULL, x_axis_title,
ncol = 2,
rel_widths = c(0.05, 0.95),
rel_heights = c(0.95, 0.05))
Fig5_labels
legend = plot_grid(NULL, leg, leg_line, leg_dash, NULL,
align = 'v',
ncol = 1)
Fig5_labels_leg = plot_grid(Fig5_labels, legend,
ncol = 2,
rel_widths = c(0.8, 0.2))
Fig5_labels_leg
slope_table <-slope_table %>%
pivot_longer(cols = alldata_slope:is_slope_upper,
names_to = 'variable',
values_to = 'value') %>%
mutate(dataset = case_when(grepl('all', variable) ~ 'all data',
grepl('ls', variable) ~ 'landast',
grepl('is', variable) ~ expression(italic('in situ')),
TRUE ~ ''),
variable = case_when(grepl('lower', variable) ~ 'lower',
grepl('upper', variable) ~ 'upper',
grepl('slope', variable) ~ 'slope',
grepl('pval', variable) ~ 'p-value',
TRUE ~ ''))
slope_table <- NULL
slope_table$month <- c('July', 'August', 'September')
slope_table$alldata_slope <- c(summary(all_7_lm)$coefficients[2,1],
summary(all_8_lm)$coefficients[2,1],
summary(all_9_lm)$coefficients[2,1])
slope_table$alldata_slope_lower <- c(confint(lm(value~year, data = jul_data),'year',level=0.95)[1],
confint(lm(value~year, data = aug_data),'year',level=0.95)[1],
confint(lm(value~year, data = sep_data),'year',level=0.95)[1])
slope_table$alldata_slope_upper <- c(confint(lm(value~year, data = jul_data),'year',level=0.95)[2],
confint(lm(value~year, data = aug_data),'year',level=0.95)[2],
confint(lm(value~year, data = sep_data),'year',level=0.95)[2])
slope_table$ls_slope <- c(summary(ls_7_lm)$coefficients[2,1],
summary(ls_8_lm)$coefficients[2,1],
summary(ls_9_lm)$coefficients[2,1])
slope_table$ls_slope_lower <- c(confint(lm(value~year, data = jul_data[jul_data$source == 'landsat',]), 'year', level = 0.95)[1],
confint(lm(value~year, data = aug_data[aug_data$source == 'landsat',]), 'year', level = 0.95)[1],
confint(lm(value~year, data = sep_data[sep_data$source == 'landsat',]), 'year', level = 0.95)[1])
slope_table$ls_slope_upper <- c(confint(lm(value~year, data = jul_data[jul_data$source == 'landsat',]), 'year', level = 0.95)[2],
confint(lm(value~year, data = aug_data[aug_data$source == 'landsat',]), 'year', level = 0.95)[2],
confint(lm(value~year, data = sep_data[sep_data$source == 'landsat',]), 'year', level = 0.95)[2])
slope_table$is_slope <- c(summary(is_7_lm)$coefficients[2,1],
summary(is_8_lm)$coefficients[2,1],
summary(is_9_lm)$coefficients[2,1])
slope_table$is_slope_lower <- c(confint(lm(value~year, data = jul_data[jul_data$source == 'in-situ',]), 'year', level = 0.95)[1],
confint(lm(value~year, data = aug_data[aug_data$source == 'in-situ',]), 'year', level = 0.95)[1],
confint(lm(value~year, data = sep_data[sep_data$source == 'in-situ',]), 'year', level = 0.95)[1])
slope_table$is_slope_upper <- c(confint(lm(value~year, data = jul_data[jul_data$source == 'in-situ',]), 'year', level = 0.95)[2],
confint(lm(value~year, data = aug_data[aug_data$source == 'in-situ',]), 'year', level = 0.95)[2],
confint(lm(value~year, data = sep_data[sep_data$source == 'in-situ',]), 'year', level = 0.95)[2])
slope_table <- as.data.frame(slope_table)
slope_table <-slope_table %>%
pivot_longer(cols = alldata_slope:is_slope_upper,
names_to = 'variable',
values_to = 'value') %>%
mutate(dataset = case_when(grepl('all', variable) ~ 'all data',
grepl('ls', variable) ~ 'landast',
grepl('is', variable) ~ expression(italic('in situ')),
TRUE ~ ''),
variable = case_when(grepl('lower', variable) ~ 'lower',
grepl('upper', variable) ~ 'upper',
grepl('slope', variable) ~ 'slope',
grepl('pval', variable) ~ 'p-value',
TRUE ~ ''))
slope_table <-slope_table %>%
pivot_longer(cols = alldata_slope:is_slope_upper,
names_to = 'variable',
values_to = 'value') %>%
mutate(dataset = case_when(grepl('all', variable) ~ 'all data',
grepl('ls', variable) ~ 'landast',
grepl('is', variable) ~ 'in situ',
TRUE ~ ''),
variable = case_when(grepl('lower', variable) ~ 'lower',
grepl('upper', variable) ~ 'upper',
grepl('slope', variable) ~ 'slope',
grepl('pval', variable) ~ 'p-value',
TRUE ~ ''))
slope_table <- slope_table %>%
mutate(value = round(value, digits = 3)) %>%
pivot_wider(names_from = 'variable',
values_from = 'value')
slope_table
jul <- temp_monthly_median %>%
filter(month == 7) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source, shape = source)) +
geom_abline(slope = summary(all_7_lm)$coefficients[2, 1],
intercept = summary(all_7_lm)$coefficients[1,1],
color = '#009E73') +
final_theme +
coord_cartesian(ylim = c(14, 26),
xlim = c(1980, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL, title = 'July') +
theme(legend.position = 'none')
jul
aug <- temp_monthly_median %>%
filter(month == 8) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source, shape = source)) +
geom_abline(slope = summary(all_8_lm)$coefficients[2, 1],
intercept = summary(all_8_lm)$coefficients[1,1],
color = '#009E73') +
final_theme +
coord_cartesian(ylim = c(14, 26),
xlim = c(1980, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL, title = 'August') +
theme(legend.position = 'none')
aug
sept_is <- sep_data %>%
filter(source == 'in-situ')
mean_sept_is = mean(sept_is$value)
sept <- temp_monthly_median %>%
filter(month ==9) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source, shape = source)) +
geom_abline(slope = summary(ls_9_lm)$coefficients[2, 1],
intercept = summary(ls_9_lm)$coefficients[1,1],
color = "#E69F00") +
geom_abline(slope = 0,
intercept = mean_sept_is,
lty = 2) +
final_theme +
coord_cartesian(ylim = c(14, 26),
xlim = c(1980, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL, title = 'September') +
theme(legend.position = 'none')
sept_is <- sep_data %>%
filter(source == 'in situ')
mean_sept_is = mean(sept_is$value)
sept <- temp_monthly_median %>%
filter(month ==9) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source, shape = source)) +
geom_abline(slope = summary(ls_9_lm)$coefficients[2, 1],
intercept = summary(ls_9_lm)$coefficients[1,1],
color = "#E69F00") +
geom_abline(slope = 0,
intercept = mean_sept_is,
lty = 2) +
final_theme +
coord_cartesian(ylim = c(14, 26),
xlim = c(1980, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL, title = 'September') +
theme(legend.position = 'none')
sept
sept_is <- sep_data %>%
filter(source == 'in-situ')
mean_sept_is = mean(sept_is$value)
sept <- temp_monthly_median %>%
filter(month ==9) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source, shape = source)) +
geom_abline(slope = summary(ls_9_lm)$coefficients[2, 1],
intercept = summary(ls_9_lm)$coefficients[1,1],
color = "#E69F00") +
geom_abline(slope = 0,
intercept = mean_sept_is,
lty = 2) +
final_theme +
coord_cartesian(ylim = c(14, 26),
xlim = c(1980, 2020)) +
scale_color_colorblind() +
labs(x = NULL, y = NULL, title = 'September') +
theme(legend.position = 'none')
sept
forlegend <- temp_monthly_median %>%
filter(month == 9) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source, shape = source)) +
final_theme+
labs(color = 'data source', shape = 'data source') +
scale_color_identity(guide = 'legend',
name = 'data source',
breaks = c('#000000', '#E69F00'),
labels = c(expression(paste(italic('in situ'))), 'landsat'))+
theme(legend.key.width = unit(1, 'cm'))
leg <- get_legend(forlegend)
forlegend <- temp_monthly_median %>%
filter(month == 9) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source, shape = source)) +
final_theme+
#  labs(color = 'data source', shape = 'data source') +
scale_color_identity(guide = 'legend',
name = 'data source',
breaks = c('#000000', '#E69F00'),
labels = c(expression(paste(italic('in situ'))), 'landsat', expression(paste(italic('in situ'), ' + landsat'))))+
theme(legend.key.width = unit(1, 'cm'))
leg <- get_legend(forlegend)
View(temp_monthly_median)
forlegend <- temp_monthly_median %>%
filter(month == 9) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source, shape = source)) +
final_theme+
scale_color_identity(name = 'data source',
labels = c(expression(paste(italic('in situ'))), 'landsat', expression(paste(italic('in situ'), ' + landsat'))))+
theme(legend.key.width = unit(1, 'cm'))
leg <- get_legend(forlegend)
forlegend <- temp_monthly_median %>%
filter(month == 9) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source, shape = source)) +
final_theme+
labs(color = 'data source', shape = 'data source') +
scale_color_colorblind(guide = 'legend')+
theme(legend.key.width = unit(1, 'cm'))
leg <- get_legend(forlegend)
forlegend <- temp_monthly_median %>%
filter(month == 9) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source, shape = source)) +
final_theme+
labs(color = 'data source', shape = 'data source') +
scale_color_colorblind(guide = 'legend',
name = 'data source',
labels = c(expression(paste(italic('in situ'))), 'landsat'))+
theme(legend.key.width = unit(1, 'cm'))
leg <- get_legend(forlegend)
for_legline = temp_monthly_median %>%
filter(month == 9) %>%
ggplot(., aes(x = year, y = value))+
geom_point() +
geom_smooth(method = 'lm', se = F, aes(color = '#009E73')) +
geom_smooth(method = 'lm', se = F, aes(color = '#E69F00')) +
geom_smooth(method = 'lm', se = F, aes(color = '#000000')) +
theme_bw() +
scale_color_identity(guide = 'legend',
name = 'trend model',
breaks = c('#000000', '#E69F00', '#009E73'),
labels = c(expression(paste(italic('in situ'))), 'landsat', expression(paste(italic('in situ'), ' + landsat'))))+
theme(legend.key.width = unit(1, 'cm'))
leg_line = get_legend(for_legline)
for_legdash = temp_monthly_median %>%
filter(month == 9) %>%
ggplot(., aes(x = year, y = value))+
geom_point() +
geom_smooth(method = 'lm', se = F, linetype = 'dashed', aes(color = '#009E73')) +
geom_smooth(method = 'lm', se = F, linetype = 'dashed', aes(color = '#E69F00')) +
geom_smooth(method = 'lm', se = F, linetype = 'dashed', aes(color = '#000000')) +
theme_bw() +
scale_color_identity(guide = 'legend',
name = 'no slope model',
breaks = c('#000000', '#E69F00', '#009E73'),
labels = c(expression(paste(italic('in situ'))), 'landsat', expression(paste(italic('in situ'), ' + landsat'))))+
theme(legend.key.width = unit(1, 'cm'))
leg_dash = get_legend(for_legdash)
#save title
y_axis_title = ggdraw() + draw_label('median lake surface temperature\n(degrees C)', size = 12, fontface = "bold", angle = 90)
x_axis_title = ggdraw() + draw_label('year', size = 12, fontface = 'bold')
Fig5 = plot_grid(jul, aug, sept,
labels = c('a', 'b', 'c'),
label_size = 10,
label_x = 0.05,
label_y = 0.97,
ncol = 3)
Fig5
Fig5_labels = plot_grid(y_axis_title, Fig5,
NULL, x_axis_title,
ncol = 2,
rel_widths = c(0.05, 0.95),
rel_heights = c(0.95, 0.05))
Fig5_labels
legend = plot_grid(NULL, leg, leg_line, leg_dash, NULL,
align = 'v',
ncol = 1)
Fig5_labels_leg = plot_grid(Fig5_labels, legend,
ncol = 2,
rel_widths = c(0.8, 0.2))
Fig5_labels_leg
ggsave(file.path(figdir, 'Fig5_application_monthly_median_temp_kurtosis_together.jpg'),
width=8,
height=3,
units = 'in',
dpi = 300)
Fig5_labels
legend = plot_grid(leg, leg_line, leg_dash,
align = 'v',
ncol = 1)
Fig5_labels_leg = plot_grid(Fig5_labels, legend,
ncol = 2,
rel_widths = c(0.8, 0.2))
Fig5_labels_leg
ggsave(file.path(figdir, 'Fig5_application_monthly_median_temp_kurtosis_together.jpg'),
width=8,
height=3,
units = 'in',
dpi = 300)
Fig5 = plot_grid(jul, aug, sept,
labels = c('a', 'b', 'c'),
label_size = 10,
label_x = 0.05,
label_y = 0.97,
ncol = 3)
Fig5
Fig5_labels = plot_grid(y_axis_title, Fig5,
NULL, x_axis_title,
ncol = 2,
rel_widths = c(0.1, 0.95),
rel_heights = c(0.95, 0.1))
Fig5_labels
legend = plot_grid(leg, leg_line, leg_dash,
align = 'v',
ncol = 1)
Fig5_labels_leg = plot_grid(Fig5_labels, legend,
ncol = 2,
rel_widths = c(0.8, 0.2))
Fig5_labels_leg
ggsave(file.path(figdir, 'Fig5_application_monthly_median_temp_kurtosis_together.jpg'),
width=8,
height=3,
units = 'in',
dpi = 300)
legend
forlegend <- temp_monthly_median %>%
filter(month == 9) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source, shape = source)) +
final_theme+
scale_color_colorblind(guide = 'legend',
name = 'data source',
labels = c(expression(paste(italic('in situ'))), 'landsat'))+
theme(legend.key.width = unit(1, 'cm'))
leg <- get_legend(forlegend)
legend = plot_grid(leg, leg_line, leg_dash,
align = 'v',
ncol = 1)
legend
forlegend <- temp_monthly_median %>%
filter(month == 9) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source, shape = source)) +
final_theme+
labs(color = 'data source', shape = 'data source') +
scale_color_colorblind(guide = 'legend',
name = 'data source',
labels = c(expression(paste(italic('in situ'))), 'landsat'))+
scale_shape_manual(guide = 'legend',
name = 'data source',
labels = c(expression(paste(italic('in situ'))), 'landsat'))+
theme(legend.key.width = unit(1, 'cm'))
leg <- get_legend(forlegend)
forlegend <- temp_monthly_median %>%
filter(month == 9) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source, shape = source)) +
final_theme+
labs(color = 'data source', shape = 'data source') +
scale_color_colorblind(guide = 'legend',
name = 'data source',
labels = c(expression(paste(italic('in situ'))), 'landsat'))+
scale_shape_manual(guide = 'legend',
name = 'data source',
breaks = c(1,2),
labels = c(expression(paste(italic('in situ'))), 'landsat'))+
theme(legend.key.width = unit(1, 'cm'))
leg <- get_legend(forlegend)
forlegend <- temp_monthly_median %>%
filter(month == 9) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source, shape = source)) +
final_theme+
labs(color = 'data source', shape = 'data source') +
scale_color_colorblind(guide = 'legend',
name = 'data source',
labels = c(expression(paste(italic('in situ'))), 'landsat'))+
scale_shape_manual(guide = 'legend',
name = 'data source',
values = c(1,2),
labels = c(expression(paste(italic('in situ'))), 'landsat'))+
theme(legend.key.width = unit(1, 'cm'))
leg <- get_legend(forlegend)
for_legline = temp_monthly_median %>%
filter(month == 9) %>%
ggplot(., aes(x = year, y = value))+
geom_point() +
geom_smooth(method = 'lm', se = F, aes(color = '#009E73')) +
geom_smooth(method = 'lm', se = F, aes(color = '#E69F00')) +
geom_smooth(method = 'lm', se = F, aes(color = '#000000')) +
theme_bw() +
scale_color_identity(guide = 'legend',
name = 'trend model',
breaks = c('#000000', '#E69F00', '#009E73'),
labels = c(expression(paste(italic('in situ'))), 'landsat', expression(paste(italic('in situ'), ' + landsat'))))+
theme(legend.key.width = unit(1, 'cm'))
leg_line = get_legend(for_legline)
for_legdash = temp_monthly_median %>%
filter(month == 9) %>%
ggplot(., aes(x = year, y = value))+
geom_point() +
geom_smooth(method = 'lm', se = F, linetype = 'dashed', aes(color = '#009E73')) +
geom_smooth(method = 'lm', se = F, linetype = 'dashed', aes(color = '#E69F00')) +
geom_smooth(method = 'lm', se = F, linetype = 'dashed', aes(color = '#000000')) +
theme_bw() +
scale_color_identity(guide = 'legend',
name = 'no slope model',
breaks = c('#000000', '#E69F00', '#009E73'),
labels = c(expression(paste(italic('in situ'))), 'landsat', expression(paste(italic('in situ'), ' + landsat'))))+
theme(legend.key.width = unit(1, 'cm'))
leg_dash = get_legend(for_legdash)
#save title
y_axis_title = ggdraw() + draw_label('median lake surface temperature\n(degrees C)', size = 12, fontface = "bold", angle = 90)
x_axis_title = ggdraw() + draw_label('year', size = 12, fontface = 'bold')
Fig5 = plot_grid(jul, aug, sept,
labels = c('a', 'b', 'c'),
label_size = 10,
label_x = 0.05,
label_y = 0.97,
ncol = 3)
Fig5
Fig5_labels = plot_grid(y_axis_title, Fig5,
NULL, x_axis_title,
ncol = 2,
rel_widths = c(0.1, 0.95),
rel_heights = c(0.95, 0.1))
Fig5_labels
legend = plot_grid(leg, leg_line, leg_dash,
align = 'v',
ncol = 1)
legend
forlegend <- temp_monthly_median %>%
filter(month == 9) %>%
ggplot(., aes(x = year, y = value))+
geom_point(aes(color = source, shape = source)) +
final_theme+
labs(color = 'data source', shape = 'data source') +
scale_color_colorblind(guide = 'legend',
name = 'data source',
labels = c(expression(paste(italic('in situ'))), 'landsat'))+
scale_shape_manual(guide = 'legend',
name = 'data source',
values = c(16,17),
labels = c(expression(paste(italic('in situ'))), 'landsat'))+
theme(legend.key.width = unit(1, 'cm'))
leg <- get_legend(forlegend)
legend = plot_grid(leg, leg_line, leg_dash,
align = 'v',
ncol = 1)
legend
Fig5_labels_leg = plot_grid(Fig5_labels, legend,
ncol = 2,
rel_widths = c(0.8, 0.2))
Fig5_labels_leg
ggsave(file.path(figdir, 'Fig5_application_monthly_median_temp_kurtosis_together.jpg'),
width=8,
height=3,
units = 'in',
dpi = 300)
