geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-6, 6)) +
labs(x = 'sun azimuth (degrees)',
y = 'Deming-optimized residual\n(deg C)') +
final_theme
# depth of sensor
ggplot(C2ST_maxIQR, aes(x = depth_avg, y = opt_resid)) +
geom_point() +
# geom_line(aes(group = date)) +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-6, 6)) +
labs(x = 'sun azimuth (degrees)',
y = 'Deming-optimized residual\n(deg C)') +
final_theme
# depth of sensor
ggplot(C2ST_maxIQR, aes(x = depth_avg, y = opt_resid)) +
geom_point() +
# geom_line(aes(group = date)) +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-6, 6)) +
labs(x = 'average depth of sensor (m)',
y = 'Deming-optimized residual\n(deg C)') +
final_theme
# std dev in-situ temp
ggplot(C2ST_maxIQR, aes(x = t_stdev, y = opt_resid)) +
geom_point() +
# geom_line(aes(group = date)) +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-6, 6)) +
labs(x = 'sun azimuth (degrees)',
y = 'Deming-optimized residual\n(deg C)') +
final_theme
# std dev in-situ temp
ggplot(C2ST_maxIQR, aes(x = t_stdev, y = opt_resid)) +
geom_point() +
# geom_line(aes(group = date)) +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-6, 6)) +
labs(x = 'standard deviation of temps contributing to median (deg C)',
y = 'Deming-optimized residual\n(deg C)') +
final_theme
#in-situ count
ggplot(C2ST_maxIQR, aes(x = insitu_count, y = opt_resid)) +
geom_point() +
# geom_line(aes(group = date)) +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-6, 6)) +
labs(x = 'number of insitu measurements attributing to median',
y = 'Deming-optimized residual\n(deg C)') +
final_theme
FigC_f <- ggplot(C2ST_maxIQR, aes(x = loon_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_maxIQR_deming$coefficients[1], slope = C2_maxIQR_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_maxIQR_deming$ci[1,1], slope = C2_maxIQR_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_maxIQR_deming$ci[1,2], slope = C2_maxIQR_deming$ci[2,2], linetype = 3, size = 0.75) +
labs(x = NULL,
y = 'median Landsat-derived\nsurface temperature (deg C)',
title = 'Collection 2\nfiltered for sub-zero and in-situ IQR') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_f
FigC_f <- ggplot(C2ST_maxIQR, aes(x = loon_median, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_maxIQR_deming$coefficients[1], slope = C2_maxIQR_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_maxIQR_deming$ci[1,1], slope = C2_maxIQR_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_maxIQR_deming$ci[1,2], slope = C2_maxIQR_deming$ci[2,2], linetype = 3, size = 0.75) +
labs(x = NULL,
y = 'median Landsat-derived\nsurface temperature (deg C)',
title = 'Collection 2\nfiltered for sub-zero and in-situ IQR') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_f
FigC_g <- C2ST_maxIQR %>%
filter(date>='2019-01-01') %>%
ggplot(., aes(x = loon_median, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_maxIQR_deming$coefficients[1], slope = C2_maxIQR_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_maxIQR_deming$ci[1,1], slope = C2_maxIQR_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_maxIQR_deming$ci[1,2], slope = C2_maxIQR_deming$ci[2,2], linetype = 3, size = 0.75) +
labs(x = NULL,
y = 'median Landsat-derived\nsurface temperature (deg C)',
title = 'Collection 2\nfiltered for sub-zero and in-situ IQR') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_g
# deming regression for C2 without freezing temps and within IQR and data from the buoy only
C2ST_maxIQR_buoy <- C2ST_maxIQR
# deming regression for C2 without freezing temps and within IQR and data from the buoy only
C2ST_maxIQR_buoy <- C2ST_maxIQR %>%
filter(!is.na(loon_median))
# deming regression for C2 without freezing temps and within IQR and data from the buoy only
C2ST_maxIQR_buoy <- C2ST_maxIQR %>%
filter(!is.na(loon_median))
C2_maxIQRbuoy_deming = deming::deming(C2ST_maxIQR_buoy$surface_temp_median ~
C2ST_maxIQR_buoy$loon_median)
C2_maxIQRbuoy_deming_forresid = mcreg(x = C2ST_maxIQR_buoy$loon_median,
y = C2ST_maxIQR_buoy$surface_temp_median,
method.reg = 'Deming')
C2ST_maxIQR_buoy$opt_resid = MCResult.getResiduals(C2_maxIQR_deming_forresid)$optimized
C2ST_maxIQR_buoy$opt_resid = MCResult.getResiduals(C2_maxIQRbuoy_deming_forresid)$optimized
C2ST_maxIQR_buoy$filter = '110% in-situ IQR buoy only'
FigC_f <- ggplot(C2ST_maxIQR_buoy, aes(x = loon_median, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_maxIQRbuoy_deming$coefficients[1], slope = C2_maxIQRbuoy_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_maxIQRbuoy_deming$ci[1,1], slope = C2_maxIQRbuoy_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_maxIQRbuoy_deming$ci[1,2], slope = C2_maxIQRbuoy_deming$ci[2,2], linetype = 3, size = 0.75) +
labs(x = NULL,
y = 'median Landsat-derived\nsurface temperature (deg C)',
title = 'Collection 2\nfiltered for sub-zero and in-situ IQR buoy only') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_f
# deming regression for C2 without freezing temps and within IQR and data from the 2ybuoy only
C2ST_maxIQR_2ybuoy <- C2ST_maxIQR %>%
filter(!is.na(loon_median) &
date >= '2019-01-01')
C2_maxIQR2ybuoy_deming = deming::deming(C2ST_maxIQR_2ybuoy$surface_temp_median ~
C2ST_maxIQR_2ybuoy$loon_median)
C2_maxIQR2ybuoy_deming_forresid = mcreg(x = C2ST_maxIQR_2ybuoy$loon_median,
y = C2ST_maxIQR_2ybuoy$surface_temp_median,
method.reg = 'Deming')
C2ST_maxIQR_2ybuoy$opt_resid = MCResult.getResiduals(C2_maxIQR2ybuoy_deming_forresid)$optimized
C2ST_maxIQR_2ybuoy$filter = '110% in-situ IQR buoy only'
C2ST_maxIQR_2ybuoy$filter = '110% in-situ IQR 2y buoy only'
FigC_g <- C2ST_maxIQR_2ybuoy %>%
filter(date>='2019-01-01') %>%
ggplot(., aes(x = loon_median, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_maxIQR2ybuoy_deming$coefficients[1], slope = C2_maxIQR2ybuoy_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_maxIQR2ybuoy_deming$ci[1,1], slope = C2_maxIQR2ybuoy_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_maxIQR2ybuoy_deming$ci[1,2], slope = C2_maxIQR2ybuoy_deming$ci[2,2], linetype = 3, size = 0.75) +
labs(x = NULL,
y = 'median Landsat-derived\nsurface temperature (deg C)',
title = 'Collection 2\nfiltered for sub-zero and in-situ IQR') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_g
FigC_f <- ggplot(C1SC, aes(x = temp_med, y = opt_resid)) +
geom_point() +
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = 'Deming-optimized residual\n(deg C)') +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-6, 6),
xlim = c(0, 27)) +
final_theme
FigC_f
FigC_g <- ggplot(C2ST, aes(x = temp_med, y = opt_resid)) +
geom_point() +
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = 'Deming-optimized residual\n(deg C)') +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-6, 6),
xlim = c(0, 27)) +
final_theme
FigC_g
FigC_h <- ggplot(C2ST_freeze, aes(x = temp_med, y = opt_resid)) +
geom_point() +
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = 'Deming-optimized residual\n(deg C)') +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-6, 6),
xlim = c(0, 27)) +
final_theme
FigC_h
plots <- plot_grid(FigC_a, FigC_b, FigC_c, FigC_d, FigC_e,
FigC_f, FigC_g, FigC_h, FigC_i, FigC_j,
ncol = 5,
labels = c('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'))
plots
FigC_d <- ggplot(C2ST_maxrange, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxrange
geom_abline(intercept = C2_maxrange_deming$coefficients[1], slope = C2_maxrange_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_maxrange_deming$ci[1,1], slope = C2_maxrange_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_maxrange_deming$ci[1,2], slope = C2_maxrange_deming$ci[2,2], linetype = 3, size = 0.75) +
labs(x = NULL,
y = '',
title = 'Collection 2',
subtitle = 'filtered for sub-ero and in-situ range') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_d
final_theme=theme_bw() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
plot.title=element_text(size=16, face='bold', hjust=0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5))
# Plot Deming regression for all filters ####
FigC_a <- ggplot(C1SC, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C1
geom_abline(intercept = C1_deming$coefficients[1], slope = C1_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C1_deming$ci[1,1], slope = C1_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C1_deming$ci[1,2], slope = C1_deming$ci[2,2], linetype = 3, size = 0.75) +
labs(x = NULL,
y = 'median Landsat-derived\nsurface temperature (deg C)',
title = 'Collection 1',
subtitle = '') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_a
FigC_b <- ggplot(C2ST, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2
geom_abline(intercept = C2_deming$coefficients[1], slope = C2_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_deming$ci[1,1], slope = C2_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_deming$ci[1,2], slope = C2_deming$ci[2,2], linetype = 3, size = 0.75) +
labs(x = NULL,
y = '',
title = 'Collection 2',
subtitle = '') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_b
FigC_c <- ggplot(C2ST_freeze, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for freezing mins
geom_abline(intercept = C2_freeze_deming$coefficients[1], slope = C2_freeze_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_freeze_deming$ci[1,1], slope = C2_freeze_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_freeze_deming$ci[1,2], slope = C2_freeze_deming$ci[2,2], linetype = 3, size = 0.75) +
labs(x = NULL,
y = '',
title = 'Collection 2',
subtitle = 'filtered for sub-zero temperatures') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_c
FigC_d <- ggplot(C2ST_maxrange, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxrange
geom_abline(intercept = C2_maxrange_deming$coefficients[1], slope = C2_maxrange_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_maxrange_deming$ci[1,1], slope = C2_maxrange_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_maxrange_deming$ci[1,2], slope = C2_maxrange_deming$ci[2,2], linetype = 3, size = 0.75) +
labs(x = NULL,
y = '',
title = 'Collection 2',
subtitle = 'filtered for sub-zero and in-situ range') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_d
FigC_e <- ggplot(C2ST_maxIQR, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_maxIQR_deming$coefficients[1], slope = C2_maxIQR_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_maxIQR_deming$ci[1,1], slope = C2_maxIQR_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_maxIQR_deming$ci[1,2], slope = C2_maxIQR_deming$ci[2,2], linetype = 3, size = 0.75) +
labs(x = NULL,
y = '',
title = 'Collection 2',
subtitle = 'filtered for sub-zero and in-situ IQR') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_e
FigC_f <- ggplot(C1SC, aes(x = temp_med, y = opt_resid)) +
geom_point() +
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = 'Deming-optimized residual\n(deg C)') +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-6, 6),
xlim = c(0, 27)) +
final_theme
FigC_f
FigC_g <- ggplot(C2ST, aes(x = temp_med, y = opt_resid)) +
geom_point() +
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = NULL) +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-6, 6),
xlim = c(0, 27)) +
final_theme
FigC_g
FigC_h <- ggplot(C2ST_freeze, aes(x = temp_med, y = opt_resid)) +
geom_point() +
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = NULL) +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-6, 6),
xlim = c(0, 27)) +
final_theme
FigC_h
FigC_i <- ggplot(C2ST_maxrange, aes(x = temp_med, y = opt_resid)) +
geom_point() +
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = NULL) +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-6, 6),
xlim = c(0, 27)) +
final_theme
FigC_i
FigC_j <- ggplot(C2ST_maxIQR, aes(x = temp_med, y = opt_resid)) +
geom_point() +
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = NULL) +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-6, 6),
xlim = c(0, 27)) +
final_theme
FigC_j
FigC_plot <- plot_grid(FigC_a, FigC_b, FigC_c, FigC_d, FigC_e,
FigC_f, FigC_g, FigC_h, FigC_i, FigC_j,
ncol = 5,
labels = c('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'))
FigC_plot
FigC_g <- ggplot(C2ST, aes(x = temp_med, y = opt_resid)) +
geom_point() +
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = '') +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-6, 6),
xlim = c(0, 27)) +
final_theme
FigC_g
FigC_h <- ggplot(C2ST_freeze, aes(x = temp_med, y = opt_resid)) +
geom_point() +
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = '') +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-6, 6),
xlim = c(0, 27)) +
final_theme
FigC_h
FigC_i <- ggplot(C2ST_maxrange, aes(x = temp_med, y = opt_resid)) +
geom_point() +
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = '') +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-6, 6),
xlim = c(0, 27)) +
final_theme
FigC_i
FigC_j <- ggplot(C2ST_maxIQR, aes(x = temp_med, y = opt_resid)) +
geom_point() +
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = '') +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-6, 6),
xlim = c(0, 27)) +
final_theme
FigC_j
FigC_plot <- plot_grid(FigC_a, FigC_b, FigC_c, FigC_d, FigC_e,
FigC_f, FigC_g, FigC_h, FigC_i, FigC_j,
ncol = 5,
labels = c('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'))
FigC_plot
FigC_plot
ggsave(file.path(fig_dir, 'FigureC_deming_residuals.jpg'),
dpi = 300,
height = 8,
width = 4,
units = 'in')
ggsave(file.path(fig_dir, 'FigureC_deming_residuals.jpg'),
dpi = 300,
height = 4,
width = 8,
units = 'in')
ggsave(file.path(fig_dir, 'FigureC_deming_residuals.jpg'),
dpi = 400,
height = 4,
width = 8,
units = 'in')
ggsave(file.path(fig_dir, 'FigureC_deming_residuals.jpg'),
dpi = 600,
height = 4,
width = 8,
units = 'in')
ggsave(file.path(fig_dir, 'FigureC_deming_residuals.jpg'),
dpi = 300,
height = 4\8,
width = 16,
units = 'in')
ggsave(file.path(fig_dir, 'FigureC_deming_residuals.jpg'),
dpi = 300,
height = 8,
width = 16,
units = 'in')
ggsave(file.path(fig_dir, 'FigureC_deming_residuals.jpg'),
dpi = 300,
height = 8,
width = 18,
units = 'in')
ggsave(file.path(fig_dir, 'FigureC_deming_residuals.jpg'),
dpi = 300,
height = 8,
width = 19,
units = 'in')
# Calculate error for various models ####
alldata_error <- all_surface_temp %>%
group_by(collection, filter) %>%
summarise(mse = round(sum((opt_resid^2))/n(), digits = 2),
rmse = round(sqrt(mse), digits = 2),
bias = round(sum(opt_resid)/n(), digits = 2),
mae = round(sum(abs(opt_resid))/n(), digits = 2),
n_obs = n())  %>%
mutate(month = 'All data',
LSmission = 'All missions') %>%
pivot_longer(cols = c(mse:n_obs), names_to = 'variable', values_to = 'values') %>%
mutate(variable = factor(variable, levels = c('n_obs', 'mae', 'rmse', 'mse', 'bias'))) %>%
arrange(month, variable) %>%
pivot_wider(names_from = c(LSmission),
values_from = values)
mission_error <- all_surface_temp %>%
group_by(collection, LSmission, filter) %>%
summarise(mse = round(sum((opt_resid^2))/n(), digits = 2),
rmse = round(sqrt(mse), digits = 2),
bias = round(sum(opt_resid)/n(), digits = 2),
mae = round(sum(abs(opt_resid))/n(), digits = 2),
n_obs = n())  %>%
mutate(month = 'All data') %>%
pivot_longer(cols = c(mse:n_obs), names_to = 'variable', values_to = 'values') %>%
mutate(variable = factor(variable, levels = c('n_obs', 'mae', 'rmse', 'mse', 'bias'))) %>%
arrange(month, variable) %>%
pivot_wider(names_from = c(LSmission),
values_from = values)
alldata_error <- full_join(alldata_error, mission_error)
alldata_error
month_mission_error <- all_surface_temp %>%
group_by(collection, month, LSmission, filter) %>%
summarise(mse = round(sum((opt_resid^2))/n(), digits = 2),
rmse = round(sqrt(mse), digits = 2),
bias = round(sum(opt_resid)/n(), digits = 2),
mae = round(sum(abs(opt_resid))/n(), digits = 2),
n_obs = n())  %>%
select(month, collection, LSmission, n_obs, mae, rmse, bias) %>%
pivot_longer(!c(month, LSmission, collection), names_to = 'variable', values_to = 'values') %>%
mutate(variable = factor(variable, levels = c('n_obs', 'mae', 'rmse', 'mse', 'bias'))) %>%
arrange(month, variable) %>%
pivot_wider(names_from = c(LSmission),
values_from = values)
month_mission_error <- all_surface_temp %>%
group_by(collection, month, LSmission, filter) %>%
summarise(mse = round(sum((opt_resid^2))/n(), digits = 2),
rmse = round(sqrt(mse), digits = 2),
bias = round(sum(opt_resid)/n(), digits = 2),
mae = round(sum(abs(opt_resid))/n(), digits = 2),
n_obs = n())  %>%
select(month, collection, LSmission, n_obs, mae, rmse, bias) %>%
pivot_longer(!c(month, LSmission, collection, filter), names_to = 'variable', values_to = 'values') %>%
mutate(variable = factor(variable, levels = c('n_obs', 'mae', 'rmse', 'mse', 'bias'))) %>%
arrange(month, variable) %>%
pivot_wider(names_from = c(LSmission),
values_from = values)
month_mission_error <- all_surface_temp %>%
group_by(collection, month, LSmission, filter) %>%
summarise(mse = round(sum((opt_resid^2))/n(), digits = 2),
rmse = round(sqrt(mse), digits = 2),
bias = round(sum(opt_resid)/n(), digits = 2),
mae = round(sum(abs(opt_resid))/n(), digits = 2),
n_obs = n())  %>%
select(month, collection, LSmission, filter,n_obs, mae, rmse, bias) %>%
pivot_longer(!c(month, LSmission, collection, filter), names_to = 'variable', values_to = 'values') %>%
mutate(variable = factor(variable, levels = c('n_obs', 'mae', 'rmse', 'mse', 'bias'))) %>%
arrange(month, variable) %>%
pivot_wider(names_from = c(LSmission),
values_from = values)
month_error <- all_surface_temp %>%
group_by(collection, month, filter) %>%
summarise(mse = round(sum((opt_resid^2))/n(), digits = 2),
rmse = round(sqrt(mse), digits = 2),
bias = round(sum(opt_resid)/n(), digits = 2),
mae = round(sum(abs(opt_resid))/n(), digits = 2),
n_obs = n())  %>%
mutate(LSmission = 'All missions') %>%
select(month, collection, LSmission, filter, n_obs, mae, rmse, bias) %>%
pivot_longer(!c(month, LSmission, filter collection), names_to = 'variable', values_to = 'values') %>%
mutate(variable = factor(variable, levels = c('n_obs', 'mae', 'rmse', 'mse', 'bias'))) %>%
arrange(month, variable) %>%
pivot_wider(names_from = c(LSmission),
values_from = values)
month_error <- all_surface_temp %>%
group_by(collection, month, filter) %>%
summarise(mse = round(sum((opt_resid^2))/n(), digits = 2),
rmse = round(sqrt(mse), digits = 2),
bias = round(sum(opt_resid)/n(), digits = 2),
mae = round(sum(abs(opt_resid))/n(), digits = 2),
n_obs = n())  %>%
mutate(LSmission = 'All missions') %>%
select(month, collection, LSmission, filter, n_obs, mae, rmse, bias) %>%
pivot_longer(!c(month, LSmission, filter, collection), names_to = 'variable', values_to = 'values') %>%
mutate(variable = factor(variable, levels = c('n_obs', 'mae', 'rmse', 'mse', 'bias'))) %>%
arrange(month, variable) %>%
pivot_wider(names_from = c(LSmission),
values_from = values)
month_error <- full_join(month_mission_error, month_error)
alldata_error <- full_join(alldata_error, month_error)
write.csv(alldata_error, file.path(C2_datadir, 'LS_deming_predictionerror_C1C2_stats_v07Oct2021.csv'))
