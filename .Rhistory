lm_C1 <- lm(C1SC$surface_temp_median ~ C1SC$temp_med)
C1_lm <- summary(lm_C1)
lm_C2 <- lm(C2ST$surface_temp_median ~ C2ST$temp_med)
C2_lm <- summary(lm_C2)
lm_C2_freeze <- lm(C2ST_freeze$surface_temp_median ~ C2ST_freeze$temp_med)
C2_freeze_lm <- summary(lm_C2_freeze)
lm_C2_maxrange <- lm(C2ST_maxrange$surface_temp_median ~ C2ST_maxrange$temp_med)
C2_maxrange_lm <- summary(lm_C2_maxrange)
lm_C2_maxIQR <- lm(C2ST_maxIQR$surface_temp_median ~ C2ST_maxIQR$temp_med)
C2_maxIQR_lm <- summary(lm_C2_maxIQR)
lm_C2_cloud <- lm(C2ST_cloud$surface_temp_median ~ C2ST_cloud$temp_med)
C2_cloud_lm <- summary(lm_C2_cloud)
lm_slope_int_table <- NULL
#make a table for lm
lm_slope_int_table$model = c('C1SC', 'C2ST', 'C2ST_freeze', 'C2ST_maxrange', 'C2ST_maxIQR', 'C2ST_cloud')
lm_slope_int_table$slope = c(C1_lm$coefficients[2],
C2_lm$coefficients[2],
C2_freeze_lm$coefficients[2],
C2_maxrange_lm$coefficients[2],
C2_maxIQR_lm$coefficients[2],
C2_cloud_lm$coefficients[2])
lm_slope_int_table$intercept = c(C1_lm$coefficients[1],
C2_lm$coefficients[1],
C2_freeze_lm$coefficients[1],
C2_maxrange_lm$coefficients[1],
C2_maxIQR_lm$coefficients[1],
C2_cloud_lm$coefficients[1])
lm_slope_int_table$slope_se = c(C1_lm$coefficients[2,2],
C2_lm$coefficients[2,2],
C2_freeze_lm$coefficients[2,2],
C2_maxrange_lm$coefficients[2,2],
C2_maxIQR_lm$coefficients[2,2],
C2_cloud_lm$coefficients[2,2])
lm_slope_int_table$int_se = c(C1_lm$coefficients[1,2],
C2_lm$coefficients[1,2],
C2_freeze_lm$coefficients[1,2],
C2_maxrange_lm$coefficients[1,2],
C2_maxIQR_lm$coefficients[1,2],
C2_cloud_lm$coefficients[1,2])
lm_slope_int_table <- as.data.frame(lm_slope_int_table)
lm_slope_int_table <- lm_slope_int_table %>%
pivot_longer(cols = c(slope, intercept), names_to = 'var', values_to = 'value') %>%
mutate(se = case_when(var == 'slope' ~ slope_se,
var == 'intercept' ~ int_se,
TRUE ~ NA_real_),
u95 = value + se,
l95 = value - se) %>%
select(-slope_se, -int_se) %>%
mutate(model = factor(model,
levels = c('C1SC', 'C2ST', 'C2ST_freeze', 'C2ST_maxIQR', 'C2ST_maxrange', 'C2ST_cloud'),
labels = c('Collection 1', 'Collection 2', 'Collection 2\nsub-zero', 'Collection 2\nin-situ IQR',
'Collection 2\nin-situ range', 'Collection 2\ncloud'))) %>%
mutate(regression = 'linear')
lmdem_slopeint <- full_join(lm_slope_int_table, slope_int_table)
int_fig <- lmdem_slopeint %>%
filter(var == 'intercept') %>%
ggplot(., aes(x = model, y = value, color = regression)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95), position =  'dodge')+
labs(x = NULL,
y = 'model intercept') +
coord_cartesian(ylim = c(-3.2, 0)) +
final_theme
slope_fig <- lmdem_slopeint %>%
filter(var == 'slope') %>%
ggplot(., aes(x = model, y = value, color = regression)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95), position =  'dodge')+
labs(x = NULL,
y = 'model slope') +
coord_cartesian(ylim = c(0.85, 1.15)) +
final_theme
SF_slope_int_fig <- plot_grid(slope_fig, int_fig,
ncol = 1,
labels = c('a', 'b'))
slope_fig <- lmdem_slopeint %>%
filter(var == 'slope') %>%
ggplot(., aes(x = model, y = value, color = regression)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'model slope') +
coord_cartesian(ylim = c(0.85, 1.15)) +
final_theme
int_fig <- lmdem_slopeint %>%
filter(var == 'intercept') %>%
ggplot(., aes(x = model, y = value, color = regression)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'model intercept') +
coord_cartesian(ylim = c(-3.2, 0)) +
final_theme
SF_slope_int_fig <- plot_grid(slope_fig, int_fig,
ncol = 1,
labels = c('a', 'b'))
SF_slope_int_fig
slope_fig <- lmdem_slopeint %>%
filter(var == 'slope') %>%
ggplot(., aes(x = model, y = value, color = regression)) +
geom_point(position = position_dodge(width = 0.2)) +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'model slope') +
coord_cartesian(ylim = c(0.85, 1.15)) +
final_theme
slope_fig <- lmdem_slopeint %>%
filter(var == 'slope') %>%
ggplot(., aes(x = model, y = value, color = regression)) +
geom_point(position = position_dodge(width = 0.2)) +
geom_pointrange(aes(ymin = l95, ymax = u95), position = position_dodge(width = 0.2))+
labs(x = NULL,
y = 'model slope') +
coord_cartesian(ylim = c(0.85, 1.15)) +
final_theme
int_fig <- lmdem_slopeint %>%
filter(var == 'intercept') %>%
ggplot(., aes(x = model, y = value, color = regression)) +
geom_point(position = position_dodge(width = 0.2)) +
geom_pointrange(aes(ymin = l95, ymax = u95),position = position_dodge(width = 0.2))+
labs(x = NULL,
y = 'model intercept') +
coord_cartesian(ylim = c(-3.2, 0)) +
final_theme
SF_slope_int_fig <- plot_grid(slope_fig, int_fig,
ncol = 1,
labels = c('a', 'b'))
SF_slope_int_fig
int_fig <- lmdem_slopeint %>%
filter(var == 'intercept') %>%
ggplot(., aes(x = model, y = value, color = regression)) +
geom_point(position = position_dodge(width = 0.2)) +
geom_pointrange(aes(ymin = l95, ymax = u95),position = position_dodge(width = 0.2))+
labs(x = NULL,
y = 'model intercept') +
coord_cartesian(ylim = c(-3.2, 0)) +
final_theme+
scale_color_colorblind()
slope_fig <- lmdem_slopeint %>%
filter(var == 'slope') %>%
ggplot(., aes(x = model, y = value, color = regression)) +
geom_point(position = position_dodge(width = 0.2)) +
geom_pointrange(aes(ymin = l95, ymax = u95), position = position_dodge(width = 0.2))+
labs(x = NULL,
y = 'model slope') +
coord_cartesian(ylim = c(0.85, 1.15)) +
final_theme +
scale_color_colorblind()
int_fig <- lmdem_slopeint %>%
filter(var == 'intercept') %>%
ggplot(., aes(x = model, y = value, color = regression)) +
geom_point(position = position_dodge(width = 0.2)) +
geom_pointrange(aes(ymin = l95, ymax = u95),position = position_dodge(width = 0.2))+
labs(x = NULL,
y = 'model intercept') +
coord_cartesian(ylim = c(-3.2, 0)) +
final_theme+
scale_color_colorblind()
SF_slope_int_fig <- plot_grid(slope_fig, int_fig,
ncol = 1,
labels = c('a', 'b'))
SF_slope_int_fig
ggsave(file.path(fig_dir, 'SFB_slopeintercept.jpg'),
dpi = 300,
height = 6,
width = 8,
units = 'in')
C2_cloud_lm$ci[1,1]
C2_cloud_lm$coefficients[1]
C1_lm$coefficients[1]
C1_lm$coefficients
# SFC plot lm like deming Fig C ####
SFC_a <- ggplot(C1SC, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add lm regression and prediction intervals for C1
geom_abline(intercept = C1_lm$coefficients[1], slope = C1_lm$coefficients[2], size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C1SC$surface_temp_median, C1SC$temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C1SC$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = '',
y = 'median Landsat-derived\nsurface temperature (deg C)',
title = 'Collection 1',
subtitle = '') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
# SFC plot lm like deming Fig C ####
SFC_a <- ggplot(C1SC, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add lm regression and prediction intervals for C1
geom_abline(intercept = C1_lm$coefficients[1], slope = C1_lm$coefficients[2], size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C1SC$surface_temp_median, C1SC$temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C1SC$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = '',
y = 'median Landsat-derived\nsurface temperature (deg C)',
title = 'Collection 1',
subtitle = '') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
SFC_a
SFC_b <- ggplot(C2ST, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add lm regression and prediction intervals for C2
geom_abline(intercept = C2_lm$coefficients[1], slope = C2_lm$coefficients[2], size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C2ST$surface_temp_median, C2ST$temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C2ST$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = '',
y = '\n',
title = 'Collection 2',
subtitle = '') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
SFC_b
SFC_c <- ggplot(C2ST_freeze, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add lm regression and prediction intervals for C2 filtered for freezing mins
geom_abline(intercept = C2_freeze_lm$coefficients[1], slope = C2_freeze_lm$coefficients[2], size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C2ST_freeze$surface_temp_median, C2ST_freeze$temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C2ST_freeze$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = '',
y = '\n',
title = 'Collection 2',
subtitle = 'filtered for sub-zero temperatures') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
SFC_c
SFC_d <- ggplot(C2ST_maxrange, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add lm regression and prediction intervals for C2 filtered for sub zero and maxrange
geom_abline(intercept = C2_maxrange_lm$coefficients[1], slope = C2_maxrange_lm$coefficients[2], size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C2ST_maxrange$surface_temp_median, C2ST_maxrange$temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C2ST_maxrange$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = 'median Landsat-derived\nsurface temperature (deg C)',
title = 'Collection 2',
subtitle = 'filtered for sub-zero and in-situ range') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
SFC_d
SFC_e <- ggplot(C2ST_maxIQR, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add lm regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_maxIQR_lm$coefficients[1], slope = C2_maxIQR_lm$coefficients[2], size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C2ST_maxIQR$surface_temp_median, C2ST_maxIQR$temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C2ST_maxIQR$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = '\n',
title = 'Collection 2',
subtitle = 'filtered for sub-zero and in-situ IQR') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
SFC_e
SFC_f <- ggplot(C2ST_cloud, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add lm regression and prediction intervals for C2 filtered for sub zero and cloud
geom_abline(intercept = C2_cloud_lm$coefficients[1], slope = C2_cloud_lm$coefficients[2], size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C2ST_cloud$surface_temp_median, C2ST_cloud$temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C2ST_cloud$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = '\n',
title = 'Collection 2',
subtitle = 'filtered for sub-zero and cloud cover') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
SFC_f
SFC_plot <- plot_grid(SFC_a, SFC_b, SFC_c, SFC_d, SFC_e,
SFC_f,
ncol = 3,
labels = c('a', 'b', 'c', 'd', 'e', 'f'),
label_x = 0.15)
SFC_plot
SFC_f <- ggplot(C2ST_cloud, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add lm regression and prediction intervals for C2 filtered for sub zero and cloud
geom_abline(intercept = C2_cloud_lm$coefficients[1], slope = C2_cloud_lm$coefficients[2], size = 0.75) +
geom_text(label = paste0('r-squared = ', round(C2_cloud_lm$r.squared, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C2ST_cloud$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = '\n',
title = 'Collection 2',
subtitle = 'filtered for sub-zero and cloud cover') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
SFC_f
SFC_plot <- plot_grid(SFC_a, SFC_b, SFC_c, SFC_d, SFC_e,
SFC_f,
ncol = 3,
labels = c('a', 'b', 'c', 'd', 'e', 'f'),
label_x = 0.15)
# SFC plot lm like deming Fig C ####
SFC_a <- ggplot(C1SC, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add lm regression and prediction intervals for C1
geom_abline(intercept = C1_lm$coefficients[1], slope = C1_lm$coefficients[2], size = 0.75) +
geom_text(label = paste0('r-squared = ', round(C1_lm$r.squared, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C1SC$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = '',
y = 'median Landsat-derived\nsurface temperature (deg C)',
title = 'Collection 1',
subtitle = '') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
SFC_a
SFC_b <- ggplot(C2ST, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add lm regression and prediction intervals for C2
geom_abline(intercept = C2_lm$coefficients[1], slope = C2_lm$coefficients[2], size = 0.75) +
geom_text(label = paste0('r-squared = ', round(C2_lm$r.squared, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C2ST$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = '',
y = '\n',
title = 'Collection 2',
subtitle = '') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
SFC_b
SFC_c <- ggplot(C2ST_freeze, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add lm regression and prediction intervals for C2 filtered for freezing mins
geom_abline(intercept = C2_freeze_lm$coefficients[1], slope = C2_freeze_lm$coefficients[2], size = 0.75) +
geom_text(label = paste0('r-squared = ', round(C2_freeze_lm$r.squared, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C2ST_freeze$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = '',
y = '\n',
title = 'Collection 2',
subtitle = 'filtered for sub-zero temperatures') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
SFC_c
SFC_d <- ggplot(C2ST_maxrange, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add lm regression and prediction intervals for C2 filtered for sub zero and maxrange
geom_abline(intercept = C2_maxrange_lm$coefficients[1], slope = C2_maxrange_lm$coefficients[2], size = 0.75) +
geom_text(label = paste0('r-squared = ', round(C2_maxrange_lm$r.squared, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C2ST_maxrange$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = 'median Landsat-derived\nsurface temperature (deg C)',
title = 'Collection 2',
subtitle = 'filtered for sub-zero and in-situ range') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
SFC_d
SFC_e <- ggplot(C2ST_maxIQR, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add lm regression and prediction intervals for C2 filtered for sub zero and maxIQR
geom_abline(intercept = C2_maxIQR_lm$coefficients[1], slope = C2_maxIQR_lm$coefficients[2], size = 0.75) +
geom_text(label = paste0('r-squared = ', round(C2_maxIQR_lm$r.squared, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C2ST_maxIQR$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = '\n',
title = 'Collection 2',
subtitle = 'filtered for sub-zero and in-situ IQR') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
SFC_e
SFC_f <- ggplot(C2ST_cloud, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = 'grey', size = 0.75) +
geom_point() +
#add lm regression and prediction intervals for C2 filtered for sub zero and cloud
geom_abline(intercept = C2_cloud_lm$coefficients[1], slope = C2_cloud_lm$coefficients[2], size = 0.75) +
geom_text(label = paste0('r-squared = ', round(C2_cloud_lm$r.squared, digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C2ST_cloud$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
y = '\n',
title = 'Collection 2',
subtitle = 'filtered for sub-zero and cloud cover') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
SFC_f
SFC_plot <- plot_grid(SFC_a, SFC_b, SFC_c, SFC_d, SFC_e,
SFC_f,
ncol = 3,
labels = c('a', 'b', 'c', 'd', 'e', 'f'),
label_x = 0.15)
SFC_plot
