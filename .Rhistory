temp_monthly_max %>%
group_by(month) %>%
ggplot(., aes(x = year, y = value)) +
geom_point() +
facet_grid(source~month) +
geom_smooth(method = 'lm', se = F) +
labs(y = 'lake surface temperature (degrees C)') +
final_theme
temp_monthly_max %>%
group_by(month) %>%
ggplot(., aes(x = year, y = value)) +
geom_point(aes(color = source)) +
facet_grid(.~month) +
labs(y = 'lake surface temperature\n(degrees C)') +
# geom_smooth(method = 'lm', se = F, inherit.aes = T) +
final_theme
#### whole lake min, median, max by month and year ####
lmp_temp_monthly_stats <- lmp_temp_deep %>%
mutate(month = as.numeric(format(as.Date(date), '%m')),
day = as.numeric(format(as.Date(date), '%d')),
year = as.numeric(format(as.Date(date), '%Y'))) %>%
group_by(year, month) %>%
summarise(is_summer_median_temp_degC = median(value),
is_summer_max_temp_degC = max(value),
is_summer_min_temp_degC = min(value),
is_n_obs = length(value),
day = min(day)) %>%
filter((month >=5 & month < 12)) %>%
mutate_at(vars(is_summer_max_temp_degC, is_summer_min_temp_degC),
~ case_when(is_n_obs <3 ~ NA_real_,
TRUE ~ .))
knitr::opts_chunk$set(echo = TRUE)
source('R_library.R')
dir = '~/GitHub/ids-ne-lakes/'
datadir = '~/GitHub/ids-ne-lakes/data/'
figdir = '~/GitHub/ids-ne-lakes/figures/'
#load in all high-frequency insitu data for historical data analysis
insitu <- read.csv(paste0(datadir, 'insitu_temp_data_v2021-05-17.csv')) %>%
filter(!is.na(lat_dd)) %>%
mutate(datetime = as.POSIXct(datetime, tz='Etc/GMT+5'))
#read in all skin temp data for whole lake
C2_lst_all <- read_csv(paste0(datadir, 'colab-output/C2/sunapee_1980_2020_C2_stats.csv'),
col_types = c('')) %>%
mutate(date =as.Date(substrRight(`system:index`, 8), '%Y%m%d'),
month = as.numeric(format(date, '%m')),
year = as.factor(format(date, '%Y')),
doy = as.numeric(format(date, '%j')),
LSmission = case_when(grepl('LT04', `system:index`) ~ 'LS 4',
grepl('LT05', `system:index`) ~ 'LS 5',
grepl('LE07', `system:index`) ~ 'LS 7',
grepl('LC08', `system:index`) ~ 'LS 8')) %>%
rowid_to_column()
C2_lst_all %>%
group_by(LSmission) %>%
summarize(count = length(LSmission))
# REPLACE WITH REAL FILE LATER
C2_lst_paired <- read_csv(paste0(datadir, 'colab-output/C2/temporary_sunapee_stats_paired_C2.csv'),
col_types = c(''))
#number of observations for total DB
insitu %>%
summarize(nobs = length(datetime),
ndays = length(unique(format(datetime, '%Y-%m-%d'))),
year_start = min(as.numeric(format(datetime, '%Y'))),
year_end = max(as.numeric(format(datetime, '%Y'))),
min_month = min(as.numeric(format(datetime, '%m'))),
max_month = max(as.numeric(format(datetime, '%m'))),
nsites = length(unique(location)))
#number of observations between time of 9 and 11
insitu %>%
mutate(hour = as.numeric(format(datetime, '%H'))) %>%
filter(hour >= 9 & hour < 11) %>%
summarize(nobs = length(datetime),
ndays = length(unique(format(datetime, '%Y-%m-%d'))),
year_start = min(as.numeric(format(datetime, '%Y'))),
year_end = max(as.numeric(format(datetime, '%Y'))),
min_month = min(as.numeric(format(datetime, '%m'))),
max_month = max(as.numeric(format(datetime, '%m'))),
nsites = length(unique(location)))
#number of sites
length(unique(insitu$location))
unique(insitu$location)
#document max spread and IQR for C2_lst filtering
range_per_date <- insitu %>%
mutate(hour = as.numeric(format(datetime, '%H')),
date = as.Date(datetime)) %>%
filter(hour >= 9 & hour < 11) %>%
group_by(date) %>%
summarize(temp_range = max(temp_degC) - min(temp_degC),
IQR = IQR(temp_degC, na.rm = T),
n_locs = length(unique(location)))
max_spread <- max(range_per_date$temp_range, na.rm = T)
max_IQR <- max(range_per_date$IQR, na.rm = T)
range_summary <- range_per_date %>%
mutate(month = as.numeric(format(date, '%m'))) %>%
group_by(month) %>%
summarise(min_range = min(temp_range, na.rm = T),
max_range = max(temp_range, na.rm = T),
min_IQR = min(IQR, na.rm = T),
max_IQR = max(IQR, na.rm = T))
val_med_ls <-deming::deming(C2_validation_range$surface_temp_max ~ C2_validation_range$temp_max)
C2_validation_range <- C2_lst_filt_maxrange %>%
select(date, LSmission) %>%
inner_join(., C2_lst_paired)
C2_lst_all_val <- C2_lst_all %>%
mutate(freeze_QAQC = case_when(temp_min < 0 ~ 'F', #pass/fail for freezing temps
TRUE ~ 'P')) %>%
# left_join(., modal_analysis) %>% #join with modal analysis
# mutate(unimodal_QAQC = case_when(unimodal == 'unimodal' ~ 'P',
#                                  TRUE ~ 'F')) %>%  # pass/fail for unimodality
mutate(temp_spread = round(temp_max, digits = 1) - round(temp_min, digits = 1)) %>% #calc temp spread; pass/fail for temp spread
mutate(spread_QAQC = case_when(temp_spread < max_spread*1.1 ~ 'P',
TRUE ~ 'F')) %>%
mutate(IQR = round(temp_p75, digits = 1) - round(temp_p25, digits = 1))  %>%  #calc IQR; pass/fail for temp IQR
mutate(IQR_QAQC = case_when(IQR < max_IQR*1.1 ~ 'P',
TRUE ~ 'F'))
C2_lst_filt_maxrange <- C2_lst_all_val %>%
filter(freeze_QAQC == 'P' &
# unimodal_QAQC == 'P' &
spread_QAQC == 'P')
C2_lst_filt_maxrange %>%
group_by(LSmission) %>%
summarize(count = length(LSmission))
C2_lst_filt_maxIQR <- C2_lst_all_val %>%
filter(freeze_QAQC == 'P' &
# unimodal_QAQC == 'P' &
IQR_QAQC == 'P')
C2_lst_filt_maxIQR %>%
group_by(LSmission) %>%
summarize(count = length(LSmission))
# ggplot(C2_lst_all_val, aes(x = pct_lake, y = (temp_max-temp_min))) +
#   geom_point(aes(color = month)) +
#   labs(y = 'temp_spread')+
#   geom_abline(intercept = 1.1 * max_spread, slope = 0, lty = 2) +
#   final_theme
# ggsave(file.path(figdir, 'C2 tempspread by pct lake by month summary.png'))
#
# ggplot(C2_lst_all_val, aes(x = pct_lake, y = (temp_p75-temp_p25))) +
#   geom_point(aes(color = month)) +
#   labs(y = 'temp_IQR')+
#     geom_abline(intercept = 1.1 * max_IQR, slope = 0, lty = 2) +
# final_theme
# ggsave(file.path(figdir, 'C2 temp IQR by pct lake by month summary.png'))
#
# ggplot(C2_lst_filt_maxrange, aes(x = pct_lake, y = temp_spread)) +
#   geom_point(aes(color = month)) +
#   final_theme
# ggsave(file.path(figdir, 'C2 filtered tempspread by pct lake by month summary.png'))
#
# ggplot(C2_lst_filt_maxIQR, aes(x = pct_lake, y = IQR)) +
#   geom_point(aes(color = month)) +
#   final_theme
# ggsave(file.path(figdir, 'C2 filtered temp IQR by pct lake by month summary.png'))
C2_validation_range <- C2_lst_filt_maxrange %>%
select(date, LSmission) %>%
inner_join(., C2_lst_paired)
C2_validation_IQR <- C2_lst_filt_maxIQR%>%
select(date, LSmission) %>%
inner_join(., C2_lst_paired)
val_med_ls <-deming::deming(C2_validation_range$surface_temp_max ~ C2_validation_range$temp_max)
View(C2_validation_range)
colnames(C2_validation_range)
is_minmax <- C2_validation_range %>%
select(date, LSmission, HerrickCoveSouth_median, Newbury_median, NorthSunapeeHarbor_median, SouthOfTheFells_median, loon_median) %>%
pivot_longer(cols = c(HerricCoveSouth_median:loon_median),
names_to = 'location',
values_to = 'value')
is_minmax <- C2_validation_range %>%
select(date, LSmission, HerrickCoveSouth_median, Newbury_median, NorthSunapeeHarbor_median, SouthOfTheFells_median, loon_median) %>%
pivot_longer(cols = c(HerrickCoveSouth_median:loon_median),
names_to = 'location',
values_to = 'value')
View(is_minmax)
is_minmax <- C2_validation_range %>%
select(date, LSmission, HerrickCoveSouth_median, Newbury_median, NorthSunapeeHarbor_median, SouthOfTheFells_median, loon_median) %>%
pivot_longer(cols = c(HerrickCoveSouth_median:loon_median),
names_to = 'location',
values_to = 'value') %>%
group_by(date, LSmission) %>%
summarise(min_temp = min(value, na.rm = T),
max_temp = max(value, na.rm = T),
n_locs = n(na.omit(value)))
is_minmax <- C2_validation_range %>%
select(date, LSmission, HerrickCoveSouth_median, Newbury_median, NorthSunapeeHarbor_median, SouthOfTheFells_median, loon_median) %>%
pivot_longer(cols = c(HerrickCoveSouth_median:loon_median),
names_to = 'location',
values_to = 'value') %>%
group_by(date, LSmission) %>%
summarise(min_temp = min(value, na.rm = T),
max_temp = max(value, na.rm = T),
n_locs = length(na.omit(value)))
is_minmax <- C2_validation_range %>%
select(date, LSmission, HerrickCoveSouth_median, Newbury_median, NorthSunapeeHarbor_median, SouthOfTheFells_median, loon_median) %>%
pivot_longer(cols = c(HerrickCoveSouth_median:loon_median),
names_to = 'location',
values_to = 'value') %>%
group_by(date, LSmission) %>%
summarise(min_temp = min(value, na.rm = T),
max_temp = max(value, na.rm = T),
n_locs = length(!is.na(value)))
is_minmax <- C2_validation_range %>%
select(date, LSmission, HerrickCoveSouth_median, Newbury_median, NorthSunapeeHarbor_median, SouthOfTheFells_median, loon_median) %>%
pivot_longer(cols = c(HerrickCoveSouth_median:loon_median),
names_to = 'location',
values_to = 'value') %>%
filter(!is.na(value)) %>%
group_by(date, LSmission) %>%
summarise(min_temp = min(value, na.rm = T),
max_temp = max(value, na.rm = T),
n_locs = n())
View(is_minmax)
is_minmax <- C2_validation_range %>%
select(date, LSmission, HerrickCoveSouth_median, Newbury_median, NorthSunapeeHarbor_median, SouthOfTheFells_median, loon_median) %>%
pivot_longer(cols = c(HerrickCoveSouth_median:loon_median),
names_to = 'location',
values_to = 'value') %>%
filter(!is.na(value)) %>%
group_by(date, LSmission) %>%
summarise(min_temp = min(value, na.rm = T),
max_temp = max(value, na.rm = T),
n_locs = n()) %>%
mutate_at(c(min_temp, max_temp),
~ case_when(n_locs < 3 ~ NA_real_,
TRUE ~ .))
is_minmax <- C2_validation_range %>%
select(date, LSmission, HerrickCoveSouth_median, Newbury_median, NorthSunapeeHarbor_median, SouthOfTheFells_median, loon_median) %>%
pivot_longer(cols = c(HerrickCoveSouth_median:loon_median),
names_to = 'location',
values_to = 'value') %>%
filter(!is.na(value)) %>%
group_by(date, LSmission) %>%
summarise(min_temp = min(value, na.rm = T),
max_temp = max(value, na.rm = T),
n_locs = n()) %>%
mutate_at(vars(min_temp, max_temp),
~ case_when(n_locs < 3 ~ NA_real_,
TRUE ~ .))
View(is_minmax)
m
is_range_minmax <- C2_validation_range %>%
select(date, LSmission, HerrickCoveSouth_median, Newbury_median, NorthSunapeeHarbor_median, SouthOfTheFells_median, loon_median) %>%
pivot_longer(cols = c(HerrickCoveSouth_median:loon_median),
names_to = 'location',
values_to = 'value') %>%
filter(!is.na(value)) %>%
group_by(date, LSmission) %>%
summarise(min_temp = min(value, na.rm = T),
max_temp = max(value, na.rm = T),
n_locs = n()) %>%
mutate_at(vars(min_temp, max_temp),
~ case_when(n_locs < 3 ~ NA_real_,
TRUE ~ .))
C2_validation_range <- full_join(C2_validation_range, is_range_minmax)
val_med_ls <-deming::deming(C2_validation_range$surface_temp_max ~ C2_validation_range$max_temp)
val_med_ls
cor(C2_validation_range$surface_temp_median, C2_validation_range$temp_med)
is_range_minmax <- C2_validation_range %>%
select(date, LSmission, HerrickCoveSouth_median, Newbury_median, NorthSunapeeHarbor_median, SouthOfTheFells_median, loon_median) %>%
pivot_longer(cols = c(HerrickCoveSouth_median:loon_median),
names_to = 'location',
values_to = 'value') %>%
filter(!is.na(value)) %>%
group_by(date, LSmission) %>%
summarise(min_temp = min(value, na.rm = T),
max_temp = max(value, na.rm = T),
n_locs = n()) %>%
mutate_at(vars(min_temp, max_temp),
~ case_when(n_locs < 3 ~ NA_real_,
TRUE ~ .))
C2_validation_range <- full_join(C2_validation_range, is_range_minmax)
val_max_ls <-deming::deming(C2_validation_range$surface_temp_max ~ C2_validation_range$max_temp)
val_max_ls
cor(C2_validation_range$surface_temp_median, C2_validation_range$temp_med)
ggplot(C2_validation_range, aes(x = max_temp, y = surface_temp_max)) +
geom_point() +
geom_abline(intercept = val_max_ls$coefficients[1], slope = val_max_ls$coefficients[2], color = 'blue') +
geom_abline(intercept = val_max_ls$ci[1,1], slope = val_max_ls$ci[2,1], color = 'blue', linetype = 2) +
geom_abline(intercept = val_max_ls$ci[1,2], slope = val_max_ls$ci[2,2], color = 'blue', linetype = 2) +
geom_abline(intercept = 0, slope = 1) +
coord_cartesian(xlim = c(5,27),
ylim = c(5,27)) +
labs(y = 'satellite-derived max\nskin temperature (deg C)',
x = expression(paste(italic('in-situ'), ' max water temp (deg C)'))) +
final_theme
ggplot(C2_validation_range, aes(x = max_temp, y = surface_temp_max)) +
geom_point() +
geom_abline(intercept = val_max_ls$coefficients[1], slope = val_max_ls$coefficients[2], color = 'blue') +
geom_abline(intercept = val_max_ls$ci[1,1], slope = val_max_ls$ci[2,1], color = 'blue', linetype = 2) +
geom_abline(intercept = val_max_ls$ci[1,2], slope = val_max_ls$ci[2,2], color = 'blue', linetype = 2) +
geom_abline(intercept = 0, slope = 1) +
# coord_cartesian(xlim = c(5,27),
#                 ylim = c(5,27)) +
labs(y = 'satellite-derived max\nskin temperature (deg C)',
x = expression(paste(italic('in-situ'), ' max water temp (deg C)'))) +
final_theme
val_min_ls <-deming::deming(C2_validation_range$surface_temp_min ~ C2_validation_range$min_temp)
val_min_ls
cor(C2_validation_range$surface_temp_median, C2_validation_range$temp_med)
ggplot(C2_validation_range, aes(x = min_temp, y = surface_temp_min)) +
geom_point() +
geom_abline(intercept = val_min_ls$coefficients[1], slope = val_min_ls$coefficients[2], color = 'blue') +
geom_abline(intercept = val_min_ls$ci[1,1], slope = val_min_ls$ci[2,1], color = 'blue', linetype = 2) +
geom_abline(intercept = val_min_ls$ci[1,2], slope = val_min_ls$ci[2,2], color = 'blue', linetype = 2) +
geom_abline(intercept = 0, slope = 1) +
# coord_cartesian(xlim = c(5,27),
#                 ylim = c(5,27)) +
labs(y = 'satellite-derived min\nskin temperature (deg C)',
x = expression(paste(italic('in-situ'), ' min water temp (deg C)'))) +
final_theme
val_max_ls <- deming::deming(val_max_ls$surface_temp_max ~ val_max_ls$max_temp)
val_max_ls <- C2_validataion_range %>%
filter(!is.na(max_temp))
C2_validation_range <- full_join(C2_validation_range, is_range_minmax)
val_max_ls <- C2_validataion_range %>%
filter(!is.na(max_temp))
val_max_ls <- C2_validation_range %>%
filter(!is.na(max_temp))
val_max_ls <- deming::deming(val_max_ls$surface_temp_max ~ val_max_ls$max_temp)
val_max_ls
cor(C2_validation_range$surface_temp_median, C2_validation_range$temp_med)
ggplot(C2_validation_range, aes(x = max_temp, y = surface_temp_max)) +
geom_point() +
geom_abline(intercept = val_max_ls$coefficients[1], slope = val_max_ls$coefficients[2], color = 'blue') +
geom_abline(intercept = val_max_ls$ci[1,1], slope = val_max_ls$ci[2,1], color = 'blue', linetype = 2) +
geom_abline(intercept = val_max_ls$ci[1,2], slope = val_max_ls$ci[2,2], color = 'blue', linetype = 2) +
geom_abline(intercept = 0, slope = 1) +
# coord_cartesian(xlim = c(5,27),
#                 ylim = c(5,27)) +
labs(y = 'satellite-derived max\nskin temperature (deg C)',
x = expression(paste(italic('in-situ'), ' max water temp (deg C)'))) +
final_theme
ggplot(C2_validation_range, aes(x = max_temp, y = surface_temp_max)) +
geom_point() +
geom_abline(intercept = val_max_ls$coefficients[1], slope = val_max_ls$coefficients[2], color = 'blue') +
geom_abline(intercept = val_max_ls$ci[1,1], slope = val_max_ls$ci[2,1], color = 'blue', linetype = 2) +
geom_abline(intercept = val_max_ls$ci[1,2], slope = val_max_ls$ci[2,2], color = 'blue', linetype = 2) +
geom_abline(intercept = 0, slope = 1) +
# coord_cartesian(xlim = c(5,27),
#                 ylim = c(5,27)) +
labs(y = 'satellite-derived max\nskin temperature (deg C)',
x = expression(paste(italic('in-situ'), ' max water temp (deg C)'))) +
final_theme
ggplot(C2_validation_range, aes(x = max_temp, y = surface_temp_max)) +
geom_point() +
geom_abline(intercept = val_max_ls$coefficients[1], slope = val_max_ls$coefficients[2], color = 'blue') +
geom_abline(intercept = val_max_ls$ci[1,1], slope = val_max_ls$ci[2,1], color = 'blue', linetype = 2) +
geom_abline(intercept = val_max_ls$ci[1,2], slope = val_max_ls$ci[2,2], color = 'blue', linetype = 2) +
geom_abline(intercept = 0, slope = 1) +
coord_cartesian(xlim = c(10,35),
ylim = c(10,35)) +
labs(y = 'satellite-derived max\nskin temperature (deg C)',
x = expression(paste(italic('in-situ'), ' max water temp (deg C)'))) +
final_theme
val_min_ls <- C2_validation_range %>%
filter(!is.na(max_temp))
val_min_ls <-deming::deming(val_min_ls$surface_temp_min ~ val_min_ls$min_temp)
val_min_ls
cor(C2_validation_range$surface_temp_median, C2_validation_range$temp_med)
ggplot(C2_validation_range, aes(x = min_temp, y = surface_temp_min)) +
geom_point() +
geom_abline(intercept = val_min_ls$coefficients[1], slope = val_min_ls$coefficients[2], color = 'blue') +
geom_abline(intercept = val_min_ls$ci[1,1], slope = val_min_ls$ci[2,1], color = 'blue', linetype = 2) +
geom_abline(intercept = val_min_ls$ci[1,2], slope = val_min_ls$ci[2,2], color = 'blue', linetype = 2) +
geom_abline(intercept = 0, slope = 1) +
# coord_cartesian(xlim = c(5,27),
#                 ylim = c(5,27)) +
labs(y = 'satellite-derived min\nskin temperature (deg C)',
x = expression(paste(italic('in-situ'), ' min water temp (deg C)'))) +
final_theme
ggplot(C2_validation_range, aes(x = min_temp, y = surface_temp_min)) +
geom_point() +
geom_abline(intercept = val_min_ls$coefficients[1], slope = val_min_ls$coefficients[2], color = 'blue') +
geom_abline(intercept = val_min_ls$ci[1,1], slope = val_min_ls$ci[2,1], color = 'blue', linetype = 2) +
geom_abline(intercept = val_min_ls$ci[1,2], slope = val_min_ls$ci[2,2], color = 'blue', linetype = 2) +
geom_abline(intercept = 0, slope = 1) +
coord_cartesian(xlim = c(10,25),
ylim = c(10,25)) +
labs(y = 'satellite-derived min\nskin temperature (deg C)',
x = expression(paste(italic('in-situ'), ' min water temp (deg C)'))) +
final_theme
is_IQR_minmax <- C2_validation_IQR %>%
select(date, LSmission, HerrickCoveSouth_median, Newbury_median, NorthSunapeeHarbor_median, SouthOfTheFells_median, loon_median) %>%
pivot_longer(cols = c(HerrickCoveSouth_median:loon_median),
names_to = 'location',
values_to = 'value') %>%
filter(!is.na(value)) %>%
group_by(date, LSmission) %>%
summarise(min_temp = min(value, na.rm = T),
max_temp = max(value, na.rm = T),
n_locs = n()) %>%
mutate_at(vars(min_temp, max_temp),
~ case_when(n_locs < 3 ~ NA_real_,
TRUE ~ .))
C2_validation_IQR <- full_join(C2_validation_IQR, is_IQR_minmax)
val_max_ls <- C2_validation_IQR %>%
filter(!is.na(max_temp))
val_max_ls <- deming::deming(val_max_ls$surface_temp_max ~ val_max_ls$max_temp)
val_max_ls
cor(C2_validation_IQR$surface_temp_median, C2_validation_IQR$temp_med)
ggplot(C2_validation_IQR, aes(x = max_temp, y = surface_temp_max)) +
geom_point() +
geom_abline(intercept = val_max_ls$coefficients[1], slope = val_max_ls$coefficients[2], color = 'blue') +
geom_abline(intercept = val_max_ls$ci[1,1], slope = val_max_ls$ci[2,1], color = 'blue', linetype = 2) +
geom_abline(intercept = val_max_ls$ci[1,2], slope = val_max_ls$ci[2,2], color = 'blue', linetype = 2) +
geom_abline(intercept = 0, slope = 1) +
coord_cartesian(xlim = c(10,35),
ylim = c(10,35)) +
labs(y = 'satellite-derived max\nskin temperature (deg C)',
x = expression(paste(italic('in-situ'), ' max water temp (deg C)'))) +
final_theme
ggsave(paste0(figdir, 'C2_deming_IQR_maxtemp_v11Oct2021.jpg'), height = 5, width = 5, units = 'in')
val_min_ls <- C2_validation_IQR %>%
filter(!is.na(max_temp))
val_min_ls <-deming::deming(val_min_ls$surface_temp_min ~ val_min_ls$min_temp)
val_min_ls
cor(C2_validation_IQR$surface_temp_median, C2_validation_IQR$temp_med)
ggplot(C2_validation_IQR, aes(x = min_temp, y = surface_temp_min)) +
geom_point() +
geom_abline(intercept = val_min_ls$coefficients[1], slope = val_min_ls$coefficients[2], color = 'blue') +
geom_abline(intercept = val_min_ls$ci[1,1], slope = val_min_ls$ci[2,1], color = 'blue', linetype = 2) +
geom_abline(intercept = val_min_ls$ci[1,2], slope = val_min_ls$ci[2,2], color = 'blue', linetype = 2) +
geom_abline(intercept = 0, slope = 1) +
coord_cartesian(xlim = c(10,25),
ylim = c(10,25)) +
labs(y = 'satellite-derived min\nskin temperature (deg C)',
x = expression(paste(italic('in-situ'), ' min water temp (deg C)'))) +
final_theme
cor(C2_validation_IQR$surface_temp_max, C2_validation_IQR$max_temp)
val_max_ls <- C2_validation_IQR %>%
filter(!is.na(max_temp))
cor(val_max_ls$surface_temp_max, val_max_ls$max_temp)
val_max_ls <- deming::deming(val_max_ls$surface_temp_max ~ val_max_ls$max_temp)
val_max_ls
is_IQR_minmax <- C2_validation_IQR %>%
select(date, LSmission, HerrickCoveSouth_median, Newbury_median, NorthSunapeeHarbor_median, SouthOfTheFells_median, loon_median) %>%
pivot_longer(cols = c(HerrickCoveSouth_median:loon_median),
names_to = 'location',
values_to = 'value') %>%
filter(!is.na(value)) %>%
group_by(date, LSmission) %>%
summarise(min_temp = min(value, na.rm = T),
max_temp = max(value, na.rm = T),
n_locs = n()) %>%
mutate_at(vars(min_temp, max_temp),
~ case_when(n_locs < 3 ~ NA_real_,
TRUE ~ .))
C2_validation_IQR <- full_join(C2_validation_IQR, is_IQR_minmax)
val_max_ls <- C2_validation_IQR %>%
filter(!is.na(max_temp))
cor(val_max_ls$surface_temp_max, val_max_ls$max_temp)
val_max_ls <- deming::deming(val_max_ls$surface_temp_max ~ val_max_ls$max_temp)
val_max_ls
ggplot(C2_validation_IQR, aes(x = max_temp, y = surface_temp_max)) +
geom_point() +
geom_abline(intercept = val_max_ls$coefficients[1], slope = val_max_ls$coefficients[2], color = 'blue') +
geom_abline(intercept = val_max_ls$ci[1,1], slope = val_max_ls$ci[2,1], color = 'blue', linetype = 2) +
geom_abline(intercept = val_max_ls$ci[1,2], slope = val_max_ls$ci[2,2], color = 'blue', linetype = 2) +
geom_abline(intercept = 0, slope = 1) +
coord_cartesian(xlim = c(10,35),
ylim = c(10,35)) +
labs(y = 'satellite-derived max\nskin temperature (deg C)',
x = expression(paste(italic('in-situ'), ' max water temp (deg C)'))) +
final_theme
val_min_ls <- C2_validation_IQR %>%
filter(!is.na(max_temp))
cor(val_min_ls$surface_temp_median, val_min_ls$temp_med)
cor(val_min_ls$surface_temp_median, val_min_ls$max_temp)
cor(val_min_ls$surface_temp_min, val_min_ls$min_temp)
val_min_ls <-deming::deming(val_min_ls$surface_temp_min ~ val_min_ls$min_temp)
val_min_ls
ggplot(C2_validation_IQR, aes(x = min_temp, y = surface_temp_min)) +
geom_point() +
geom_abline(intercept = val_min_ls$coefficients[1], slope = val_min_ls$coefficients[2], color = 'blue') +
geom_abline(intercept = val_min_ls$ci[1,1], slope = val_min_ls$ci[2,1], color = 'blue', linetype = 2) +
geom_abline(intercept = val_min_ls$ci[1,2], slope = val_min_ls$ci[2,2], color = 'blue', linetype = 2) +
geom_abline(intercept = 0, slope = 1) +
coord_cartesian(xlim = c(10,25),
ylim = c(10,25)) +
labs(y = 'satellite-derived min\nskin temperature (deg C)',
x = expression(paste(italic('in-situ'), ' min water temp (deg C)'))) +
final_theme
val_min_ls <- C2_validation_range %>%
filter(!is.na(max_temp))
cor(val_min_ls$surface_temp_min, val_min_ls$min_temp)
val_min_ls <-deming::deming(val_min_ls$surface_temp_min ~ val_min_ls$min_temp)
val_min_ls
ggplot(C2_validation_range, aes(x = min_temp, y = surface_temp_min)) +
geom_point() +
geom_abline(intercept = val_min_ls$coefficients[1], slope = val_min_ls$coefficients[2], color = 'blue') +
geom_abline(intercept = val_min_ls$ci[1,1], slope = val_min_ls$ci[2,1], color = 'blue', linetype = 2) +
geom_abline(intercept = val_min_ls$ci[1,2], slope = val_min_ls$ci[2,2], color = 'blue', linetype = 2) +
geom_abline(intercept = 0, slope = 1) +
coord_cartesian(xlim = c(10,25),
ylim = c(10,25)) +
labs(y = 'satellite-derived min\nskin temperature (deg C)',
x = expression(paste(italic('in-situ'), ' min water temp (deg C)'))) +
final_theme
val_max_ls <- C2_validation_range %>%
filter(!is.na(max_temp))
cor(val_max_ls$surface_temp_max, val_max_ls$max_temp)
val_max_ls <- deming::deming(val_max_ls$surface_temp_max ~ val_max_ls$max_temp)
val_max_ls
ggplot(C2_validation_range, aes(x = max_temp, y = surface_temp_max)) +
geom_point() +
geom_abline(intercept = val_max_ls$coefficients[1], slope = val_max_ls$coefficients[2], color = 'blue') +
geom_abline(intercept = val_max_ls$ci[1,1], slope = val_max_ls$ci[2,1], color = 'blue', linetype = 2) +
geom_abline(intercept = val_max_ls$ci[1,2], slope = val_max_ls$ci[2,2], color = 'blue', linetype = 2) +
geom_abline(intercept = 0, slope = 1) +
coord_cartesian(xlim = c(10,35),
ylim = c(10,35)) +
labs(y = 'satellite-derived max\nskin temperature (deg C)',
x = expression(paste(italic('in-situ'), ' max water temp (deg C)'))) +
final_theme
