bias = round(sum(opt_resid)/n(), digits = 2),
mae = round(sum(abs(opt_resid))/n(), digits = 2),
n_obs = n()) %>%
write.csv(., file.path(datadir, 'LS_deming_prediction_bymission_stats_v20Jul2021.csv'))
# by month
validation_range %>%
mutate(month = as.numeric(format(date, '%m'))) %>%
group_by(month) %>%
summarise(mse = round(sum((opt_resid^2))/n(), digits = 2),
rmse = round(sqrt(mse), digits = 2),
bias = round(sum(opt_resid)/n(), digits = 2),
mae = round(sum(abs(opt_resid))/n(), digits = 2),
n_obs = n()) %>%
select(month, n_obs, mae, rmse, bias) %>%
write.csv(., file.path(datadir, 'LS_deming_prediction_stats_allmissions_v29June2021.csv'))
#by month and mission
validation_range %>%
mutate(month = as.numeric(format(date, '%m'))) %>%
group_by(month, LSmission) %>%
summarise(mse = round(sum((opt_resid^2))/n(), digits = 2),
rmse = round(sqrt(mse), digits = 2),
bias = round(sum(opt_resid)/n(), digits = 2),
mae = round(sum(abs(opt_resid))/n(), digits = 2),
n_obs = n())  %>%
select(month, LSmission, n_obs, mae, rmse, bias) %>%
pivot_longer(!c(month, LSmission), names_to = 'variable', values_to = 'values') %>%
mutate(variable = factor(variable, levels = c('n_obs', 'mae', 'rmse', 'bias'))) %>%
arrange(month, variable) %>%
pivot_wider(id_cols = c(LSmission,  values, variable),
names_from = c(month, variable),
values_from = values) %>%
arrange(LSmission) %>%
write.csv(., file.path(datadir, 'LS_deming_prediction_stats_v29June2021.csv'))
lst_insitu_dem_forresid = mcreg(x = validation_range$temp_med, y = validation_range$surface_temp_median, method.reg = 'Deming')
ggplot(validation_range, aes(sample = opt_resid)) +
geom_qq() +
geom_qq_line()
ggplot(validation_range, aes (y = opt_resid, x = temp_med)) +
geom_point() +
labs(x = 'in-situ mean water temp (deg C)',
y = 'deming optimized residuals (deg C)') +
geom_hline(yintercept = 0, color = 'black') +
final_theme
ggsave(paste0(dir, 'figures/optresid_x_v28Jun2021.jpg'), height = 5, width = 8, units = 'in')
ggplot(validation_range, aes (y = opt_resid, x = temp_med, color = month)) +
geom_point(size = 2) +
labs(x = 'in-situ mean water temp (deg C)',
y = 'deming optimized residuals (deg C)') +
geom_hline(yintercept = 0, color = 'black') +
final_theme +
scale_color_colorblind()
ggsave(paste0(dir, 'figures/optresid_x_colorbymonth_v28Jun2021.jpg'), height = 5, width = 8, units = 'in')
ggplot(validation_range, aes (y = opt_resid, x = cloud_cover)) +
geom_point() +
labs(x = 'cloud cover (percent)',
y = 'deming optimized residuals (deg C)') +
geom_hline(yintercept = 0, color = 'black') +
final_theme
ggsave(paste0(dir, 'figures/optresid_cloudcover_v28Jun2021.jpg'), height = 5, width = 8, units = 'in')
ggplot(validation_range, aes (y = opt_resid, x = cloud_cover, color = month)) +
geom_point(size = 2) +
labs(x = 'cloud cover (percent)',
y = 'deming optimized residuals (deg C)') +
geom_hline(yintercept = 0, color = 'black') +
final_theme +
scale_color_colorblind()
ggsave(paste0(dir, 'figures/optresid_cloudcover_colorbymonth_v28Jun2021.jpg'), height = 5, width = 8, units = 'in')
ggplot(validation_range, aes (y = opt_resid, x = temp_med)) +
geom_point() +
labs(x = 'in-situ median water temp (deg C)',
y = 'deming optimized residuals (deg C)') +
geom_hline(yintercept = 0, color = 'black') +
final_theme
ggsave(paste0(dir, 'figures/optresid_x_v28Jun2021.jpg'), height = 5, width = 8, units = 'in')
ggplot(validation_range, aes (y = opt_resid, x = temp_med, color = month)) +
geom_point(size = 2) +
labs(x = 'in-situ median water temp (deg C)',
y = 'deming optimized residuals (deg C)') +
geom_hline(yintercept = 0, color = 'black') +
final_theme +
scale_color_colorblind()
ggsave(paste0(dir, 'figures/optresid_x_colorbymonth_v28Jun2021.jpg'), height = 5, width = 8, units = 'in')
ggplot(validation_range, aes (y = opt_resid, x = azimuth)) +
geom_point() +
labs(x = 'azimuth (degrees)',
y = 'deming optimized residuals (deg C)') +
geom_hline(yintercept = 0, color = 'black') +
final_theme
ggsave(paste0(dir, 'figures/optresid_azimuth_v28Jun2021.jpg'), height = 5, width = 8, units = 'in')
ggplot(validation_range, aes (y = opt_resid, x = elev)) +
geom_point() +
labs(x = 'azimuth (degrees)',
y = 'deming optimized residuals (deg C)') +
geom_hline(yintercept = 0, color = 'black') +
final_theme
ggplot(validation_range, aes (y = opt_resid, x = azimuth)) +
geom_point() +
labs(x = 'azimuth (degrees)',
y = 'deming optimized residuals (deg C)') +
geom_hline(yintercept = 0, color = 'black') +
final_theme
ggplot(validation_range, aes (y = opt_resid, x = azimuth)) +
geom_point() +
labs(x = 'azimuth (degrees)',
y = 'deming optimized residuals (deg C)') +
geom_hline(yintercept = 0, color = 'black') +
final_theme
View(validation_range)
ggplot(validation_range, aes (y = opt_resid, x = sza)) +
geom_point() +
labs(x = 'azimuth (degrees)',
y = 'deming optimized residuals (deg C)') +
geom_hline(yintercept = 0, color = 'black') +
final_theme
knitr::opts_chunk$set(echo = TRUE)
source('R_library.R')
install.packages('Metrics')
source('R_library.R')
dir = '~/GitHub/ids-ne-lakes/'
datadir = '~/GitHub/ids-ne-lakes/data/'
figdir = '~/GitHub/ids-ne-lakes/figures/'
#load in all high-frequency insitu data for historical data analysis
insitu <- read.csv(paste0(datadir, 'insitu_temp_data_v2021-05-17.csv')) %>%
filter(!is.na(lat_dd)) %>%
mutate(datetime = as.POSIXct(datetime, tz='Etc/GMT+5')) %>%
filter(format(datetime, '%m') < 11)
#read in all skin temp data for whole lake
lst_all <- read_csv(paste0(datadir, 'colab-output/2021-06-08/sunapee_temp_stats.csv'),
col_types = c('')) %>%
mutate(date =as.Date(substrRight(`system:index`, 8), '%Y%m%d'),
month = as.numeric(format(date, '%m')),
year = as.factor(format(date, '%Y')),
doy = as.numeric(format(date, '%j')),
LSmission = case_when(grepl('LT04', `system:index`) ~ 'LS 4',
grepl('LT05', `system:index`) ~ 'LS 5',
grepl('LE07', `system:index`) ~ 'LS 7',
grepl('LC08', `system:index`) ~ 'LS 8')) %>%
filter(month < 11 & month > 5) %>%
mutate(month = as.factor(month))
lst_all %>%
group_by(LSmission) %>%
summarize(count = length(LSmission))
lst_paired <- read_csv(paste0(datadir, 'colab-output/2021-06-08/sunapee_insitu_landsat_paired.csv'),
col_types = c('')) %>%
mutate(date =as.Date(substrRight(`system:index`, 8), '%Y%m%d')) %>%
filter(as.numeric(format(date, '%m')) < 11 & as.numeric(format(date, '%m')) >5)
#make a list of the file names in the folder
match_names <- list.files(paste0(datadir, 'colab-output/2021-06-08/ancillary'))
#iterate over the files into a dataframe
for(i in 1:length(match_names)) {
data <- read_csv(paste0(datadir, 'match-files/', match_names[i]),
col_types = c('')) %>%
mutate(source = paste0(match_names[i]))
if (i == 1) {
match_details <- data
} else {
match_details <- full_join(match_details, data)
}
}
# add columns for match_details
match_details <- match_details %>%
mutate(date =as.Date(datetime),
month = as.numeric(format(date, '%m')),
year = as.factor(format(date, '%Y')),
doy = as.numeric(format(date, '%j'))) %>%
filter(frequency == 'sub-daily') %>%
filter(month < 11 & month > 5) %>%
mutate(month = as.factor(month))
#read in the modal information
modal_analysis <- read.csv(file.path(datadir, 'colab-output/2021-06-08/date_modalanalysis.csv')) %>%
mutate(date = as.Date(date))
View(modal_analysis)
#read in binned data
lst_hist <- read.csv(file.path(datadir, 'colab-output/2021-06-08/sunapee_histograms_0p1bin_reformatted.csv')) %>%
mutate(date = as.Date(date))
#number of observations for total DB
insitu %>%
summarize(nobs = length(datetime),
ndays = length(unique(format(datetime, '%Y-%m-%d'))),
year_start = min(as.numeric(format(datetime, '%Y'))),
year_end = max(as.numeric(format(datetime, '%Y'))),
min_month = min(as.numeric(format(datetime, '%m'))),
max_month = max(as.numeric(format(datetime, '%m'))),
nsites = length(unique(location)))
#number of observations for total DB
insitu %>%
summarize(nobs = length(datetime),
ndays = length(unique(format(datetime, '%Y-%m-%d'))),
year_start = min(as.numeric(format(datetime, '%Y'))),
year_end = max(as.numeric(format(datetime, '%Y'))),
min_month = min(as.numeric(format(datetime, '%m'))),
max_month = max(as.numeric(format(datetime, '%m'))),
nsites = length(unique(location)))
#number of observations between time of 9 and 11
insitu %>%
mutate(hour = as.numeric(format(datetime, '%H'))) %>%
filter(hour >= 9 & hour < 11) %>%
summarize(nobs = length(datetime),
ndays = length(unique(format(datetime, '%Y-%m-%d'))),
year_start = min(as.numeric(format(datetime, '%Y'))),
year_end = max(as.numeric(format(datetime, '%Y'))),
min_month = min(as.numeric(format(datetime, '%m'))),
max_month = max(as.numeric(format(datetime, '%m'))),
nsites = length(unique(location)))
#number of sites
length(unique(insitu$location))
unique(insitu$location)
unique(insitu$location)
#document max spread for LST
range_per_date <- insitu %>%
mutate(hour = as.numeric(format(datetime, '%H')),
date = as.Date(datetime)) %>%
filter(hour >= 9 & hour < 11) %>%
group_by(date) %>%
summarize(temp_range = max(temp_degC) - min(temp_degC),
IQR = IQR(temp_degC, na.rm = T),
n_locs = length(unique(location)))
max_spread <- max(range_per_date$temp_range, na.rm = T)
max_IQR <- max(range_per_date$IQR, na.rm = T)
range_summary <- range_per_date %>%
mutate(month = as.numeric(format(date, '%m'))) %>%
group_by(month) %>%
filter(n_locs >3) %>%
summarise(min_range = min(temp_range, na.rm = T),
max_range = max(temp_range, na.rm = T))
View(range_summary)
View(insitu)
#load in all high-frequency insitu data for historical data analysis
insitu <- read.csv(paste0(datadir, 'insitu_temp_data_v2021-05-17.csv')) %>%
filter(!is.na(lat_dd)) %>%
mutate(datetime = as.POSIXct(datetime, tz='Etc/GMT+5')) %>%
filter(format(datetime, '%m') < 11 & format(datetime, '%m') > 5)
read.csv(paste0(datadir, 'insitu_temp_data_v2021-05-17.csv')) %>%
filter(!is.na(lat_dd)) %>%
mutate(datetime = as.POSIXct(datetime, tz='Etc/GMT+5'))
read.csv(paste0(datadir, 'insitu_temp_data_v2021-05-17.csv'))
insitu <- read.csv(paste0(datadir, 'insitu_temp_data_v2021-05-17.csv'))
insitu <- read.csv(paste0(datadir, 'insitu_temp_data_v2021-05-17.csv')) %>%
filter(!is.na(lat_dd))
insitu <- read.csv(paste0(datadir, 'insitu_temp_data_v2021-05-17.csv')) %>%
filter(!is.na(lat_dd)) %>%
mutate(datetime = as.POSIXct(datetime, tz='Etc/GMT+5'))
View(insitu)
filter(as.numeric(format(datetime, '%m')) < 11 & as.numeric(format(datetime, '%m') > 5)()
mutate(datetime = as.POSIXct(datetime, tz='Etc/GMT+5')) %>%
#load in all high-frequency insitu data for historical data analysis
insitu <- read.csv(paste0(datadir, 'insitu_temp_data_v2021-05-17.csv')) %>%
filter(!is.na(lat_dd)) %>%
mutate(datetime = as.POSIXct(datetime, tz='Etc/GMT+5')) %>%
filter(as.numeric(format(datetime, '%m')) < 11 & as.numeric(format(datetime, '%m')) > 5)
#load in all high-frequency insitu data for historical data analysis
insitu <- read.csv(paste0(datadir, 'insitu_temp_data_v2021-05-17.csv')) %>%
filter(!is.na(lat_dd)) %>%
mutate(datetime = as.POSIXct(datetime, tz='Etc/GMT+5')) %>%
filter(as.numeric(format(datetime, '%m')) < 11 & as.numeric(format(datetime, '%m')) > 5)
#number of observations for total DB
insitu %>%
summarize(nobs = length(datetime),
ndays = length(unique(format(datetime, '%Y-%m-%d'))),
year_start = min(as.numeric(format(datetime, '%Y'))),
year_end = max(as.numeric(format(datetime, '%Y'))),
min_month = min(as.numeric(format(datetime, '%m'))),
max_month = max(as.numeric(format(datetime, '%m'))),
nsites = length(unique(location)))
#number of observations between time of 9 and 11
insitu %>%
mutate(hour = as.numeric(format(datetime, '%H'))) %>%
filter(hour >= 9 & hour < 11) %>%
summarize(nobs = length(datetime),
ndays = length(unique(format(datetime, '%Y-%m-%d'))),
year_start = min(as.numeric(format(datetime, '%Y'))),
year_end = max(as.numeric(format(datetime, '%Y'))),
min_month = min(as.numeric(format(datetime, '%m'))),
max_month = max(as.numeric(format(datetime, '%m'))),
nsites = length(unique(location)))
#number of sites
length(unique(insitu$location))
unique(insitu$location)
#document max spread and IQR for LST filtering
range_per_date <- insitu %>%
mutate(hour = as.numeric(format(datetime, '%H')),
date = as.Date(datetime)) %>%
filter(hour >= 9 & hour < 11) %>%
group_by(date) %>%
summarize(temp_range = max(temp_degC) - min(temp_degC),
IQR = IQR(temp_degC, na.rm = T),
n_locs = length(unique(location)))
max_spread <- max(range_per_date$temp_range, na.rm = T)
max_IQR <- max(range_per_date$IQR, na.rm = T)
range_summary <- range_per_date %>%
mutate(month = as.numeric(format(date, '%m'))) %>%
group_by(month) %>%
filter(n_locs >3) %>%
summarise(min_range = min(temp_range, na.rm = T),
max_range = max(temp_range, na.rm = T))
insitu %>%
mutate(year = format(datetime, '%Y'),
month = as.numeric(format(datetime, '%m'))) %>%
group_by(year, location) %>%
summarise(min_depth_m = min(depth_m),
max_depth_m = max(depth_m),
min_month = min(month),
max_month = max(month)) %>%
pivot_longer(!c(year, location), names_to = 'variable', values_to = 'value') %>%
pivot_wider(id_cols = c(year, variable, value),
names_from = c(location, variable)) %>%
write.csv(., file.path(datadir, 'insitu_data_extent_summary.csv'), row.names = F)
lst_filt_freeze <- lst_all %>%
filter(surface_temp_min > 0)
lst_filt_mod <- lst_filt_freeze %>%
left_join(., modal_analysis) %>%
filter(unimodal == 'unimodal')
lst_filt_maxrange <- lst_filt_mod %>%
mutate(temp_spread = round(surface_temp_max, digits = 1) - round(surface_temp_min, digits = 1)) %>%
filter(temp_spread < max_spread*1.1)
lst_filt_maxIQR <- lst_filt_mod %>%
mutate(IQR = round(surface_temp_p75, digits = 1) - round(surface_temp_p25, digits = 1))  %>%
filter(IQR < IQR*1.1)
lst_filt_maxrange %>%
group_by(LSmission) %>%
summarize(count = length(LSmission))
lst_filt_maxIQR %>%
group_by(LSmission) %>%
summarize(count = length(LSmission))
ggplot(lst_all, aes(x = pct_lake, y = (surface_temp_max-surface_temp_min))) +
geom_point(aes(color = month)) +
labs(y = 'temp_spread')+
final_theme
ggplot(lst_all, aes(x = pct_lake, y = (surface_temp_p75-surface_temp_p25))) +
geom_point(aes(color = month)) +
labs(y = 'temp_spread')+
final_theme
ggplot(lst_all, aes(x = pct_lake, y = (surface_temp_p75-surface_temp_p25))) +
geom_point(aes(color = month)) +
labs(y = 'temp_IQR')+
final_theme
ggsave(file.path(figdir, 'temp IQR by pct lake by month summary.png'))
ggplot(lst_filt_maxrange, aes(x = pct_lake, y = temp_spread)) +
geom_point(aes(color = month)) +
final_theme
ggplot(lst_filt_maxIQR, aes(x = pct_lake, y = temp_spread)) +
geom_point(aes(color = month)) +
final_theme
ggplot(lst_filt_maxIQR, aes(x = pct_lake, y = IQR)) +
geom_point(aes(color = month)) +
final_theme
#inner join with unimodal data and 25% of lake
match_details_filtrange <- match_details %>%
mutate(date = as.Date(date)) %>%
inner_join(., modal_analysis) %>%
inner_join(., lst_filt_maxrange) %>%
filter(unimodal == 'unimodal' & perc_lake > 25)
match_details_filtIQR <- match_details %>%
mutate(date = as.Date(date)) %>%
inner_join(., modal_analysis) %>%
inner_join(., lst_filt_maxIQR) %>%
filter(unimodal == 'unimodal' & perc_lake > 25)
#number of observations where there is a match with LS data
match_details_filt %>%
summarize(nobs = length(datetime),
ndays = length(unique(format(datetime, '%Y-%m-%d'))),
year_start = min(as.numeric(format(datetime, '%Y'))),
year_end = max(as.numeric(format(datetime, '%Y'))))
#number of observations where there is a match with LS data
match_details_filtrange %>%
summarize(nobs = length(datetime),
ndays = length(unique(format(datetime, '%Y-%m-%d'))),
year_start = min(as.numeric(format(datetime, '%Y'))),
year_end = max(as.numeric(format(datetime, '%Y'))))
length(unique(match_details_filt$location))
length(unique(match_details_filtrange$location))
match_details_filtIQR %>%
summarize(nobs = length(datetime),
ndays = length(unique(format(datetime, '%Y-%m-%d'))),
year_start = min(as.numeric(format(datetime, '%Y'))),
year_end = max(as.numeric(format(datetime, '%Y'))))
length(unique(match_details_filtIQR$location))
lst_filt_mod_select_range <- lst_filt_maxrange %>%
select(date:temp_spread)
lst_filt_mod_select_IQR <- lst_filt_maxIQR %>%
select(date:IQR)
validation_range <- lst_paired %>%
mutate(date = as.Date(substrRight(scene, 8), '%Y%m%d')) %>%
inner_join(., lst_filt_mod_select_range)
validation_IQR <- lst_paired %>%
mutate(date = as.Date(substrRight(scene, 8), '%Y%m%d')) %>%
inner_join(., lst_filt_mod_select_IQR)
val_mean_ls <- lm(validation_range$surface_temp_median ~ validation_range$temp_med)
summary(val_mean_ls)
val_mean_dem <-deming::deming(validation_range$surface_temp_median ~ validation_range$temp_med)
val_mean_dem
cor(validation_range$surface_temp_median, validation_range$temp_med)
ggplot(validation_range, aes(x = temp_med, y = surface_temp_median)) +
geom_point() +
geom_abline(intercept = val_mean_dem$coefficients[1], slope = val_mean_dem$coefficients[2], color = 'blue') +
geom_abline(intercept = val_mean_dem$ci[1,1], slope = val_mean_dem$ci[2,1], color = 'blue', linetype = 2) +
geom_abline(intercept = val_mean_dem$ci[1,2], slope = val_mean_dem$ci[2,2], color = 'blue', linetype = 2) +
geom_abline(intercept = 0, slope = 1) +
coord_cartesian(xlim = c(7,27),
ylim = c(7,27)) +
labs(y = 'satellite-derived median\nskin temperature (deg C)',
x = expression(paste(italic('in-situ'), ' median water temp (deg C)'))) +
final_theme
ggsave(paste0(figdir, 'deming_reg_median_v24Sept2021.jpg'), height = 5, width = 5, units = 'in')
ggplot(validation_range, aes(x = temp_med, y = surface_temp_median)) +
geom_point() +
geom_abline(intercept = val_mean_dem$coefficients[1], slope = val_mean_dem$coefficients[2], color = 'blue') +
geom_abline(intercept = val_mean_dem$ci[1,1], slope = val_mean_dem$ci[2,1], color = 'blue', linetype = 2) +
geom_abline(intercept = val_mean_dem$ci[1,2], slope = val_mean_dem$ci[2,2], color = 'blue', linetype = 2) +
geom_abline(intercept = 0, slope = 1) +
coord_cartesian(xlim = c(7,27),
ylim = c(7,27)) +
labs(y = 'satellite-derived median\nskin temperature (deg C)',
x = expression(paste(italic('in-situ'), ' median water temp (deg C)'))) +
final_theme
validation_range$pred_temp = val_mean_dem$coefficients[1] + val_mean_dem$coefficients[2]*validation_range$temp_med
lst_insitu_dem_forresid = mcreg(x = validation_range$temp_med, y = validation_range$surface_temp_median, method.reg = 'Deming')
validation_range$opt_resid = MCResult.getResiduals(lst_insitu_dem_forresid)$optimized
#plot to make sure prediction is correct
ggplot(validation_range, aes(x = temp_med, y = pred_temp))+
geom_point(color = 'blue') +
geom_point(aes(x = temp_med, y = surface_temp_median))
lst_filt_maxrange <- lst_filt_maxrange %>%
mutate(calib_range_med_temp_degC = (surface_temp_median-val_mean_dem$coefficients[1])/val_mean_dem$coefficients[2])
lst_filt_maxrange %>%
select(date, LSmission, temp_spread, pct_lake, surface_temp_count:surface_temp_stdDev, calib_range_med_temp_degC) %>%
write.csv(file.path(datadir, 'LS_passQAQC_v24Sept2021.csv'), row.names = F)
#plot to make sure calibration is correct
lst_filt_mod_select_range_calib <- lst_filt_maxrange %>%
select(date:temp_spread, calib_range_med_temp_degC)
validation_range_calib <- lst_paired %>%
mutate(date = as.Date(substrRight(scene, 8), '%Y%m%d')) %>%
inner_join(., lst_filt_mod_select_range_calib)
ggplot(validation_range_calib, aes(x = temp_med, y = surface_temp_median)) +
geom_point() +
geom_point(aes(x = temp_med, y = calib_range_med_temp_degC), color = 'red')+
geom_abline(intercept = val_mean_dem$coefficients[1], slope = val_mean_dem$coefficients[2], color = 'blue') +
geom_abline(intercept = val_mean_dem$ci[1,1], slope = val_mean_dem$ci[2,1], color = 'blue', linetype = 2) +
geom_abline(intercept = val_mean_dem$ci[1,2], slope = val_mean_dem$ci[2,2], color = 'blue', linetype = 2) +
geom_abline(intercept = 0, slope = 1) +
coord_cartesian(xlim = c(7,27),
ylim = c(7,27)) +
labs(y = 'satellite-derived median\nskin temperature (deg C)',
x = expression(paste(italic('in-situ'), ' median water temp (deg C)'))) +
final_theme
val_mean_ls <- lm(validation_IQR$surface_temp_median ~ validation_IQR$temp_med)
summary(val_mean_ls)
val_mean_dem <-deming::deming(validation_IQR$surface_temp_median ~ validation_IQR$temp_med)
val_mean_dem
cor(validation_IQR$surface_temp_median, validation_IQR$temp_med)
ggplot(validation_IQR, aes(x = temp_med, y = surface_temp_median)) +
geom_point() +
geom_abline(intercept = val_mean_dem$coefficients[1], slope = val_mean_dem$coefficients[2], color = 'blue') +
geom_abline(intercept = val_mean_dem$ci[1,1], slope = val_mean_dem$ci[2,1], color = 'blue', linetype = 2) +
geom_abline(intercept = val_mean_dem$ci[1,2], slope = val_mean_dem$ci[2,2], color = 'blue', linetype = 2) +
geom_abline(intercept = 0, slope = 1) +
coord_cartesian(xlim = c(7,27),
ylim = c(7,27)) +
labs(y = 'satellite-derived median\nskin temperature (deg C)',
x = expression(paste(italic('in-situ'), ' median water temp (deg C)'))) +
final_theme
ggsave(paste0(figdir, 'deming_reg_median_IQR_v23Sept2021.jpg'), height = 5, width = 5, units = 'in')
validation_IQR$pred_temp = val_mean_dem$coefficients[1] + val_mean_dem$coefficients[2]*validation_IQR$temp_med
lst_insitu_dem_forresid = mcreg(x = validation_IQR$temp_med, y = validation_IQR$surface_temp_median, method.reg = 'Deming')
validation_IQR$opt_resid = MCResult.getResiduals(lst_insitu_dem_forresid)$optimized
#plot to make sure prediction is correct
ggplot(validation_IQR, aes(x = temp_med, y = pred_temp))+
geom_point(color = 'blue') +
geom_point(aes(x = temp_med, y = surface_temp_median))
lst_filt_maxIQR <- lst_filt_maxIQR %>%
mutate(calib_IQE_med_temp_degC = (surface_temp_median-val_mean_dem$coefficients[1])/val_mean_dem$coefficients[2])
lst_filt_maxIQR <- lst_filt_maxIQR %>%
mutate(calib_IQR_med_temp_degC = (surface_temp_median-val_mean_dem$coefficients[1])/val_mean_dem$coefficients[2])
lst_filt_maxrange %>%
select(date, LSmission, temp_spread, pct_lake, surface_temp_count:surface_temp_stdDev, calib_IQR_range_med_temp_degC) %>%
write.csv(file.path(datadir, 'LS_passQAQC_v24Sept2021.csv'), row.names = F)
lst_filt_maxIQR <- lst_filt_maxIQR %>%
mutate(calib_IQR_med_temp_degC = (surface_temp_median-val_mean_dem$coefficients[1])/val_mean_dem$coefficients[2])
lst_filt_maxrange %>%
select(date, LSmission, temp_spread, pct_lake, surface_temp_count:surface_temp_stdDev, calib_IQR_range_med_temp_degC) %>%
write.csv(file.path(datadir, 'LS_passQAQC_v24Sept2021.csv'), row.names = F)
lst_filt_maxIQR %>%
select(date, LSmission, temp_spread, pct_lake, surface_temp_count:surface_temp_stdDev, calib_IQR_range_med_temp_degC) %>%
write.csv(file.path(datadir, 'LS_IQR_passQAQC_v24Sept2021.csv'), row.names = F)
lst_filt_maxIQR %>%
select(date, LSmission, temp_spread, pct_lake, surface_temp_count:surface_temp_stdDev, calib_IQR_med_temp_degC) %>%
write.csv(file.path(datadir, 'LS_IQR_passQAQC_v24Sept2021.csv'), row.names = F)
lst_filt_maxIQR %>%
select(date, LSmission, IQR_spread, pct_lake, surface_temp_count:surface_temp_stdDev, calib_IQR_med_temp_degC) %>%
write.csv(file.path(datadir, 'LS_IQR_passQAQC_v24Sept2021.csv'), row.names = F)
View(lst_filt_maxIQR)
lst_filt_maxIQR %>%
select(date, LSmission, IQR, pct_lake, surface_temp_count:surface_temp_stdDev, calib_IQR_med_temp_degC) %>%
write.csv(file.path(datadir, 'LS_IQR_passQAQC_v24Sept2021.csv'), row.names = F)
#plot to make sure calibration is correct
lst_filt_mod_select_IQR_calib <- lst_filt_maxIQR %>%
select(date:IQR, calib_IQR_med_temp_degC)
validation_IQR_calib <- lst_paired %>%
mutate(date = as.Date(substrRight(scene, 8), '%Y%m%d')) %>%
inner_join(., lst_filt_mod_select_IQR_calib)
ggplot(validation_IQR_calib, aes(x = temp_med, y = surface_temp_median)) +
geom_point() +
geom_point(aes(x = temp_med, y = calib_IQR_med_temp_degC), color = 'red')+
geom_abline(intercept = val_mean_dem$coefficients[1], slope = val_mean_dem$coefficients[2], color = 'blue') +
geom_abline(intercept = val_mean_dem$ci[1,1], slope = val_mean_dem$ci[2,1], color = 'blue', linetype = 2) +
geom_abline(intercept = val_mean_dem$ci[1,2], slope = val_mean_dem$ci[2,2], color = 'blue', linetype = 2) +
geom_abline(intercept = 0, slope = 1) +
coord_cartesian(xlim = c(7,27),
ylim = c(7,27)) +
labs(y = 'satellite-derived median\nskin temperature (deg C)',
x = expression(paste(italic('in-situ'), ' median water temp (deg C)'))) +
final_theme
