slope = 0,
lty = 2) +
labs(y = 'mean absolute error\n(degrees C)',
x = NULL) +
final_theme+
theme(axis.title=element_text(size=10,face="bold")) +
theme(legend.position = 'none') +
scale_color_colorblind()
Fig4_b
forlegend <- kurtosis_biasmae %>%
filter(variable == 'mae') %>%
ggplot(., aes(x = month, y = value)) +
geom_point(aes(shape = mission), size =2) +
coord_cartesian(ylim = c(0, 2)) +
geom_abline(intercept = 0,
slope = 0,
lty = 2) +
theme(legend.position = 'bottom') +
labs(x = 'month',
y = '\n') +
final_theme+
scale_color_colorblind()
leg <- get_legend(forlegend)
leg
kurtosis <- plot_grid(Fig4_a, Fig4_b,
ncol = 1)
kurtosis
x_lab = ggdraw() + draw_label(label = 'month', fontface = 'bold', size = 10)
Fig4_label = plot_grid(kurtosis, x_lab,
rel_heights = c(1, 0.05),
ncol = 1)
Fig4_label
plot_grid(Fig4_label, leg, rel_widths = c(0.9,0.15))
ggsave(file.path(fig_dir, 'Fig4_errorbymission.jpg'),
height = 4, width = 6, units = 'in', dpi = 300)
library(tidyverse)
library(leaflet)
library(sf)
library(tmap)
library(tmaptools)
library(raster)
library(RColorBrewer)
data_dir = 'data/in-situ locs/'
nat_gis_dir = 'F:/GIS_data_general/North_America/political_bound/'
#point to directories
gis_dir = 'C:/Users/steeleb/Dropbox/travel/gis/project/Sunapee/'
fig_dir = 'figures/'
tmap_mode('plot')
#read in sampling csv
sampling <- read.csv(file.path(data_dir, 'temp_ms_insitu.csv'))
#make into simple feature; crs is WGS84
sampling_georef <- st_as_sf(sampling, coords = c('lon_dd', 'lat_dd'), crs = 'EPSG:4326')
# save layers
sun <- st_read(file.path(gis_dir, 'hydrography/LS_shore_WGS.shp'))
sun_bathy <- raster(file.path(gis_dir, 'Sunapee Bathymetry/raster_files/derivitives/sun_z_m'))
northamer = st_read(file.path(nat_gis_dir, 'countries/na_land_w_countries_NAD83.shp'))
NA_wstates = st_read(file.path(nat_gis_dir, 'states/na_land_w_states_NAD83.shp'))
#get bounding box of bathy
bbox_sunapee <- st_bbox(sun_bathy) # current bounding box
xrange <- bbox_sunapee$xmax - bbox_sunapee$xmin # range of x values
yrange <- bbox_sunapee$ymax - bbox_sunapee$ymin # range of y values
#create a new one and modify
bbox_sun_new <- st_bbox(sun_bathy)
bbox_sun_new[1] <- bbox_sun_new[1] - (0.25 * xrange) # xmin - left
bbox_sun_new[3] <- bbox_sun_new[3] + (0.25 * xrange) # xmax - right
bbox_sun_new[2] <- bbox_sun_new[2] - (0.075 * yrange) # ymin - bottom
bbox_sun_new[4] <- bbox_sun_new[4] + (0.025 * yrange) # ymax - top
#make sunapee basemap ----
#play with extent for legends to fit
sunbase = tm_shape(sun_bathy, bbox = bbox_sun_new) +
tm_raster(palette = 'Blues',
title = 'lake depth\n(meters)') +
tm_shape(sun) +
tm_borders() +
tm_shape(sampling_georef) +
tm_dots(col = 'frequency',
shape = 24,
size = 0.5,
title = 'sampling\nfrequency',
palette = c('black', 'yellow')) +
tm_compass(position = c('right', 'bottom')) +
tm_scale_bar(position = c('right', 'bottom')) +
tm_layout(frame.lwd = 3, frame = 'blue',
legend.position = c('left', 'bottom'))
sunbase
xrange <- bbox_existing$xmax - bbox_existing$xmin # range of x values
yrange <- bbox_existing$ymax - bbox_existing$ymin # range of y values
bbox_NE[1] <- bbox_NE[1] + (0.29 * xrange) # xmin - left
bbox_NE[3] <- bbox_NE[3] - (0.69 * xrange) # xmax - right
bbox_NE[2] <- bbox_NE[2] + (0.40 * yrange) # ymin - bottom
# NE focus
#adjust bounding to ~ new england
#get existing bounding box
bbox_existing <- st_bbox(northamer) # current bounding box
#create a new one and modify
bbox_NE <- st_bbox(northamer)
bbox_NE[4] <- bbox_NE[4] - (0.49 * yrange) # ymax - top
#transform into polygon
bbox_NE <- bbox_NE %>%
st_as_sfc()
# NA with better focus
NE_base = tm_shape(NA_wstates, bbox = bbox_NE) +
tm_polygons() +
tm_shape(northamer) +
tm_borders(lwd = 2)+
tm_scale_bar(position = c('right', 'bottom')) +
tm_shape(bbox_sunapee) +
tm_borders(lwd = 3, col = 'blue') +
tm_layout(frame.lwd = 3, frame = 'red')
NE_base
#adjust bounding to ~ mexico/west coast
bbox_NA <- st_bbox(northamer) # current bounding box
bbox_NA[1] <- bbox_NA[1] + (0.13 * xrange) # xmin - left
bbox_NA[3] <- bbox_NA[3] - (0.65 * xrange) # xmax - right
bbox_NA[2] <- bbox_NA[2] + (0.15 * yrange) # ymin - bottom
bbox_NA[4] <- bbox_NA[4] - (0.32 * yrange) # ymax - top
bbox_NA <- bbox_NA %>%  # take the bounding box ...
st_as_sfc() # ... and make it a sf polygon
# NA with better focus
NA_base = tm_shape(NA_wstates, bbox = bbox_new) +
tm_polygons() +
tm_shape(northamer) +
tm_borders(lwd = 2) +
tm_scale_bar(position = c('right', 'bottom')) +
tm_shape(bbox_NE) +
tm_borders(lwd = 3, col = 'red')
NA_base
library(tidyverse)
library(leaflet)
library(sf)
library(tmap)
library(tmaptools)
library(raster)
library(RColorBrewer)
#point to directories
gis_dir = 'C:/Users/steeleb/Dropbox/travel/gis/project/Sunapee/'
data_dir = 'data/in-situ locs/'
nat_gis_dir = 'F:/GIS_data_general/North_America/political_bound/'
fig_dir = 'figures/'
tmap_mode('plot')
#read in sampling csv
sampling <- read.csv(file.path(data_dir, 'temp_ms_insitu.csv'))
#make into simple feature; crs is WGS84
sampling_georef <- st_as_sf(sampling, coords = c('lon_dd', 'lat_dd'), crs = 'EPSG:4326')
# save layers
sun <- st_read(file.path(gis_dir, 'hydrography/LS_shore_WGS.shp'))
sun_bathy <- raster(file.path(gis_dir, 'Sunapee Bathymetry/raster_files/derivitives/sun_z_m'))
northamer = st_read(file.path(nat_gis_dir, 'countries/na_land_w_countries_NAD83.shp'))
NA_wstates = st_read(file.path(nat_gis_dir, 'states/na_land_w_states_NAD83.shp'))
#get bounding box of bathy
bbox_sunapee <- st_bbox(sun_bathy) # current bounding box
xrange <- bbox_sunapee$xmax - bbox_sunapee$xmin # range of x values
yrange <- bbox_sunapee$ymax - bbox_sunapee$ymin # range of y values
#create a new one and modify
bbox_sun_new <- st_bbox(sun_bathy)
bbox_sun_new[1] <- bbox_sun_new[1] - (0.25 * xrange) # xmin - left
bbox_sun_new[3] <- bbox_sun_new[3] + (0.25 * xrange) # xmax - right
bbox_sun_new[2] <- bbox_sun_new[2] - (0.075 * yrange) # ymin - bottom
bbox_sun_new[4] <- bbox_sun_new[4] + (0.025 * yrange) # ymax - top
#make sunapee basemap ----
#play with extent for legends to fit
sunbase = tm_shape(sun_bathy, bbox = bbox_sun_new) +
tm_raster(palette = 'Blues',
title = 'lake depth\n(meters)') +
tm_shape(sun) +
tm_borders() +
tm_shape(sampling_georef) +
tm_dots(col = 'frequency',
shape = 24,
size = 0.5,
title = 'sampling\nfrequency',
palette = c('black', 'yellow')) +
tm_compass(position = c('right', 'bottom')) +
tm_scale_bar(position = c('right', 'bottom')) +
tm_layout(frame.lwd = 3, frame = 'blue',
legend.position = c('left', 'bottom'))
sunbase
# NE focus
#adjust bounding to ~ new england
#get existing bounding box
bbox_existing <- st_bbox(northamer) # current bounding box
xrange <- bbox_existing$xmax - bbox_existing$xmin # range of x values
yrange <- bbox_existing$ymax - bbox_existing$ymin # range of y values
#create a new one and modify
bbox_NE <- st_bbox(northamer)
bbox_NE[1] <- bbox_NE[1] + (0.29 * xrange) # xmin - left
bbox_NE[3] <- bbox_NE[3] - (0.69 * xrange) # xmax - right
bbox_NE[2] <- bbox_NE[2] + (0.40 * yrange) # ymin - bottom
bbox_NE[4] <- bbox_NE[4] - (0.49 * yrange) # ymax - top
#transform into polygon
bbox_NE <- bbox_NE %>%
st_as_sfc()
# NA with better focus
NE_base = tm_shape(NA_wstates, bbox = bbox_NE) +
tm_polygons() +
tm_shape(northamer) +
tm_borders(lwd = 2)+
tm_scale_bar(position = c('right', 'bottom')) +
tm_shape(bbox_sunapee) +
tm_borders(lwd = 3, col = 'blue') +
tm_layout(frame.lwd = 3, frame = 'red')
NE_base
# NA with better focus
NE_base = tm_shape(NA_wstates, bbox = bbox_NE) +
tm_polygons() +
tm_shape(northamer) +
tm_borders(lwd = 2)+
tm_scale_bar(position = c('right', 'bottom')) +
tm_shape(sun_bathy) +
tm_borders(lwd = 3, col = 'blue') +
tm_layout(frame.lwd = 3, frame = 'red')
NE_base
# NA with better focus
NE_base = tm_shape(NA_wstates, bbox = bbox_NE) +
tm_polygons() +
tm_shape(northamer) +
tm_borders(lwd = 2)+
tm_scale_bar(position = c('right', 'bottom')) +
tm_shape(sun) +
tm_borders(lwd = 3, col = 'blue') +
tm_layout(frame.lwd = 3, frame = 'red')
NE_base
bbox_sunapee
st_as_sfc(bbox_sunapee)
# NA with better focus
NE_base = tm_shape(NA_wstates, bbox = bbox_NE) +
tm_polygons() +
tm_shape(northamer) +
tm_borders(lwd = 2)+
tm_scale_bar(position = c('right', 'bottom')) +
tm_shape(st_as_sfc(bbox_sunapee)) +
tm_borders(lwd = 3, col = 'blue') +
tm_layout(frame.lwd = 3, frame = 'red')
NE_base
#adjust bounding to ~ mexico/west coast
bbox_NA <- st_bbox(northamer) # current bounding box
bbox_NA[1] <- bbox_NA[1] + (0.13 * xrange) # xmin - left
bbox_NA[3] <- bbox_NA[3] - (0.65 * xrange) # xmax - right
bbox_NA[2] <- bbox_NA[2] + (0.15 * yrange) # ymin - bottom
bbox_NA[4] <- bbox_NA[4] - (0.32 * yrange) # ymax - top
bbox_NA <- bbox_NA %>%  # take the bounding box ...
st_as_sfc() # ... and make it a sf polygon
# NA with better focus
NA_base = tm_shape(NA_wstates, bbox = bbox_new) +
tm_polygons() +
tm_shape(northamer) +
tm_borders(lwd = 2) +
tm_scale_bar(position = c('right', 'bottom')) +
tm_shape(bbox_NE) +
tm_borders(lwd = 3, col = 'red')
# NA with better focus
NA_base = tm_shape(NA_wstates, bbox = bbox_sun_new) +
tm_polygons() +
tm_shape(northamer) +
tm_borders(lwd = 2) +
tm_scale_bar(position = c('right', 'bottom')) +
tm_shape(bbox_NE) +
tm_borders(lwd = 3, col = 'red')
NA_base
# NA with better focus
NA_base = tm_shape(NA_wstates, bbox_NA) +
tm_polygons() +
tm_shape(northamer) +
tm_borders(lwd = 2) +
tm_scale_bar(position = c('right', 'bottom')) +
tm_shape(bbox_NE) +
tm_borders(lwd = 3, col = 'red')
NA_base
# NA with better focus
NA_base = tm_shape(NA_wstates, bbox = bbox_NA) +
tm_polygons() +
tm_shape(northamer) +
tm_borders(lwd = 2) +
tm_scale_bar(position = c('right', 'bottom')) +
tm_shape(bbox_NE) +
tm_borders(lwd = 3, col = 'red')
NA_base
# NA with better focus
NA_base = tm_shape(NA_wstates, bbox = bbox_NA) +
tm_polygons() +
tm_shape(northamer) +
tm_borders(lwd = 2) +
tm_shape(bbox_NE) +
tm_borders(lwd = 3, col = 'red')
NA_base
# NA with better focus
NE_base = tm_shape(NA_wstates, bbox = bbox_NE) +
tm_polygons() +
tm_shape(northamer) +
tm_borders(lwd = 2)+
tm_shape(st_as_sfc(bbox_sunapee)) +
tm_borders(lwd = 3, col = 'blue') +
tm_layout(frame.lwd = 3, frame = 'red')
NE_base
print(NA_base, vp = grid::viewport(0.22, 0.847, width= 0.4))
print(NE_base, vp = grid::viewport(0.22, 0.342, width = 0.4))
print(sunbase, vp = grid::viewport(0.7, 0.5, height = 1))
print(NA_base, vp = grid::viewport(0.78, 0.847, width= 0.4))
print(NE_base, vp = grid::viewport(0.78, 0.342, width = 0.4))
print(sunbase, vp = grid::viewport(0.3, 0.5, height = 1))
#put it all together
png(file = file.path(fig_dir, 'Fig2_DataExtent.png'),
width = 6,
height = 6,
units = 'in',
res = 300)
print(NA_base, vp = grid::viewport(0.78, 0.847, width= 0.4))
print(NE_base, vp = grid::viewport(0.78, 0.342, width = 0.4))
print(sunbase, vp = grid::viewport(0.3, 0.5, height = 1))
dev.off()
northamer
NA_wstates
# NA with better focus
NE_base = tm_shape(NA_wstates, bbox = bbox_NE) +
tm_polygons() +
tm_text('NAME') +
tm_shape(northamer) +
tm_borders(lwd = 2)+
tm_shape(st_as_sfc(bbox_sunapee)) +
tm_borders(lwd = 3, col = 'blue') +
tm_layout(frame.lwd = 3, frame = 'red')
NE_base
# NA with better focus
NE_base = tm_shape(NA_wstates, bbox = bbox_NE) +
tm_polygons() +
tm_text('NAME', remove.overlap = TRUE) +
tm_shape(northamer) +
tm_borders(lwd = 2)+
tm_shape(st_as_sfc(bbox_sunapee)) +
tm_borders(lwd = 3, col = 'blue') +
tm_layout(frame.lwd = 3, frame = 'red')
NE_base
unique(NA_wstates$NAME)
unique(NA_wstates)
NA_wstates %>%
filter(first(NAME))
NA_wstates %>%
group_by(NAME) %>%
filter(first(NAME))
NA_wstates %>%
group_by(NAME)
NA_wstates %>%
group_by(NAME) %>%
summarize(first(NAME))
#get single label of states by getting uniqe states
states_onename = NA_wstates %>%
group_by(NAME) %>%
summarize(first(NAME))
NE_base
# NA with better focus
NE_base = tm_shape(NA_wstates, bbox = bbox_NE) +
tm_polygons() +
tm_shape(states_onename) +
tm_text('NAME', remove.overlap = TRUE) +
tm_shape(northamer) +
tm_borders(lwd = 2)+
tm_shape(st_as_sfc(bbox_sunapee)) +
tm_borders(lwd = 3, col = 'blue') +
tm_layout(frame.lwd = 3, frame = 'red')
#get single label of states by getting uniqe states
states_onename = NA_wstates %>%
group_by(NAME) %>%
summarize(first(NAME))
# NA with better focus
NE_base = tm_shape(NA_wstates, bbox = bbox_NE) +
tm_polygons() +
tm_shape(states_onename) +
tm_text('NAME', remove.overlap = TRUE) +
tm_shape(northamer) +
tm_borders(lwd = 2)+
tm_shape(st_as_sfc(bbox_sunapee)) +
tm_borders(lwd = 3, col = 'blue') +
tm_layout(frame.lwd = 3, frame = 'red')
NE_base
countries_onename = NA_wstates %>%
group_by(COUNTRY) %>%
summarize(first(COUNTRY))
# NA with better focus
NA_base = tm_shape(NA_wstates, bbox = bbox_NA) +
tm_polygons() +
tm_shape(countries_onename) +
tm_text('COUNTRY') +
tm_shape(northamer) +
tm_borders(lwd = 2) +
tm_shape(bbox_NE) +
tm_borders(lwd = 3, col = 'red')
NA_base
library(tidyverse)
library(leaflet)
library(sf)
library(tmap)
library(tmaptools)
library(raster)
library(RColorBrewer)
# library(usmap)
#point to directories
gis_dir = 'C:/Users/steeleb/Dropbox/travel/gis/project/Sunapee/'
data_dir = 'data/in-situ locs/'
nat_gis_dir = 'F:/GIS_data_general/North_America/political_bound/'
fig_dir = 'figures/'
tmap_mode('plot')
#read in sampling csv
sampling <- read.csv(file.path(data_dir, 'temp_ms_insitu.csv'))
#make into simple feature; crs is WGS84
sampling_georef <- st_as_sf(sampling, coords = c('lon_dd', 'lat_dd'), crs = 'EPSG:4326')
# save layers
sun <- st_read(file.path(gis_dir, 'hydrography/LS_shore_WGS.shp'))
sun_bathy <- raster(file.path(gis_dir, 'Sunapee Bathymetry/raster_files/derivitives/sun_z_m'))
northamer = st_read(file.path(nat_gis_dir, 'countries/na_land_w_countries_NAD83.shp'))
NA_wstates = st_read(file.path(nat_gis_dir, 'states/na_land_w_states_NAD83.shp'))
#get bounding box of bathy
bbox_sunapee <- st_bbox(sun_bathy) # current bounding box
xrange <- bbox_sunapee$xmax - bbox_sunapee$xmin # range of x values
yrange <- bbox_sunapee$ymax - bbox_sunapee$ymin # range of y values
#create a new one and modify
bbox_sun_new <- st_bbox(sun_bathy)
bbox_sun_new[1] <- bbox_sun_new[1] - (0.25 * xrange) # xmin - left
bbox_sun_new[3] <- bbox_sun_new[3] + (0.25 * xrange) # xmax - right
bbox_sun_new[2] <- bbox_sun_new[2] - (0.075 * yrange) # ymin - bottom
bbox_sun_new[4] <- bbox_sun_new[4] + (0.025 * yrange) # ymax - top
#make sunapee basemap ----
#play with extent for legends to fit
sunbase = tm_shape(sun_bathy, bbox = bbox_sun_new) +
tm_raster(palette = 'Blues',
title = 'lake depth\n(meters)') +
tm_shape(sun) +
tm_borders() +
tm_shape(sampling_georef) +
tm_dots(col = 'frequency',
shape = 24,
size = 0.5,
title = 'sampling\nfrequency',
palette = c('black', 'yellow')) +
tm_compass(position = c('right', 'bottom')) +
tm_scale_bar(position = c('right', 'bottom')) +
tm_layout(frame.lwd = 3, frame = 'blue',
legend.position = c('left', 'bottom'))
sunbase
#make North America
# NE focus
#adjust bounding to ~ new england
#get existing bounding box
bbox_existing <- st_bbox(northamer) # current bounding box
xrange <- bbox_existing$xmax - bbox_existing$xmin # range of x values
yrange <- bbox_existing$ymax - bbox_existing$ymin # range of y values
#create a new one and modify
bbox_NE <- st_bbox(northamer)
bbox_NE[1] <- bbox_NE[1] + (0.29 * xrange) # xmin - left
bbox_NE[3] <- bbox_NE[3] - (0.69 * xrange) # xmax - right
bbox_NE[2] <- bbox_NE[2] + (0.40 * yrange) # ymin - bottom
bbox_NE[4] <- bbox_NE[4] - (0.49 * yrange) # ymax - top
#transform into polygon
bbox_NE <- bbox_NE %>%
st_as_sfc()
# NA with better focus
NE_base = tm_shape(NA_wstates, bbox = bbox_NE) +
tm_polygons() +
tm_shape(northamer) +
tm_borders(lwd = 2)+
tm_shape(st_as_sfc(bbox_sunapee)) +
tm_borders(lwd = 3, col = 'blue') +
tm_layout(frame.lwd = 3, frame = 'red')
NE_base
#adjust bounding to ~ mexico/west coast
bbox_NA <- st_bbox(northamer) # current bounding box
bbox_NA[1] <- bbox_NA[1] + (0.13 * xrange) # xmin - left
bbox_NA[3] <- bbox_NA[3] - (0.65 * xrange) # xmax - right
bbox_NA[2] <- bbox_NA[2] + (0.15 * yrange) # ymin - bottom
bbox_NA[4] <- bbox_NA[4] - (0.32 * yrange) # ymax - top
bbox_NA <- bbox_NA %>%  # take the bounding box ...
st_as_sfc() # ... and make it a sf polygon
# NA with better focus
NA_base = tm_shape(NA_wstates, bbox = bbox_NA) +
tm_polygons() +
tm_shape(northamer) +
tm_borders(lwd = 2) +
tm_shape(bbox_NE) +
tm_borders(lwd = 3, col = 'red')
NA_base
print(NA_base, vp = grid::viewport(0.78, 0.847, width= 0.4))
print(NE_base, vp = grid::viewport(0.78, 0.342, width = 0.4))
print(sunbase, vp = grid::viewport(0.3, 0.5, height = 1))
#put it all together
png(file = file.path(fig_dir, 'Fig2_DataExtent.png'),
width = 4,
height = 4,
units = 'in',
res = 300)
print(NA_base, vp = grid::viewport(0.78, 0.847, width= 0.4))
print(NE_base, vp = grid::viewport(0.78, 0.342, width = 0.4))
print(sunbase, vp = grid::viewport(0.3, 0.5, height = 1))
dev.off()
#put it all together
png(file = file.path(fig_dir, 'Fig2_DataExtent.png'),
width = 5,
height = 5,
units = 'in',
res = 300)
print(NA_base, vp = grid::viewport(0.78, 0.847, width= 0.4))
print(NE_base, vp = grid::viewport(0.78, 0.342, width = 0.4))
print(sunbase, vp = grid::viewport(0.3, 0.5, height = 1))
dev.off()
#put it all together
png(file = file.path(fig_dir, 'Fig2_DataExtent.png'),
width = 5.5,
height = 5.5,
units = 'in',
res = 300)
print(NA_base, vp = grid::viewport(0.78, 0.847, width= 0.4))
print(NE_base, vp = grid::viewport(0.78, 0.342, width = 0.4))
print(sunbase, vp = grid::viewport(0.3, 0.5, height = 1))
dev.off()
