ls_sd_temp_degC = sd(median),
ls_n_obs = length(median)) %>%
mutate(WAYPOINT = as.factor(WAYPOINT)) %>%
filter(ls_n_obs >= 3)
ggplot(landsat_summer_mean, aes(x=year, y = ls_summer_mean_temp_degC, color = WAYPOINT)) +
geom_point()
ggplot(landsat_summer_mean, aes(x=year, y = ls_summer_mean_temp_degC)) +
geom_point() +
facet_grid(WAYPOINT ~ .) +
geom_smooth(method = 'lm', se = F)
ls_is_summer_mean <- landsat_summer_mean %>%
mutate(station = as.factor(WAYPOINT)) %>%
full_join(., lmp_temp_summer_mean)
ggplot(ls_is_summer_mean, aes(x = ls_summer_mean_temp_degC, y = is_summer_mean_temp_degC)) +
geom_point() +
facet_grid(station ~ .) +
geom_smooth(method = 'lm', se=F)
landsat_summer_mean <- landsat_station_deep %>%
mutate(date = as.Date(substr(uid, 15, 22), format = '%Y%m%d'),
month = as.numeric(format(date, '%m')),
year = as.numeric(format(date, '%Y'))) %>%
filter(month >= 6 & month <=8) %>%
filter(min > 0 & skew < 1 & skew >-1) %>%
group_by(WAYPOINT, year) %>%
summarise(ls_summer_mean_temp_degC = mean(median),
ls_sd_temp_degC = sd(median),
ls_n_obs = length(median)) %>%
mutate(WAYPOINT = as.factor(WAYPOINT)) %>%
filter(ls_n_obs >= 3)
ggplot(landsat_summer_mean, aes(x=year, y = ls_summer_mean_temp_degC, color = WAYPOINT)) +
geom_point()
ggplot(landsat_summer_mean, aes(x=year, y = ls_summer_mean_temp_degC)) +
geom_point() +
facet_grid(WAYPOINT ~ .) +
geom_smooth(method = 'lm', se = F)
ls_is_summer_mean <- landsat_summer_mean %>%
mutate(station = as.factor(WAYPOINT)) %>%
full_join(., lmp_temp_summer_mean)
ggplot(ls_is_summer_mean, aes(x = ls_summer_mean_temp_degC, y = is_summer_mean_temp_degC)) +
geom_point() +
facet_grid(station ~ .) +
geom_smooth(method = 'lm', se=F)
ggplot(lmp_temp_summer_mean, aes(x=year, y = is_summer_mean_temp_degC)) +
geom_point() +
facet_grid(station ~ .) +
geom_smooth(method = 'lm', se = F)
knitr::opts_chunk$set(echo = TRUE)
source('R_library.R')
dir = '~/GitHub/ids-ne-lakes/'
datadir = '~/GitHub/ids-ne-lakes/data/'
figdir = '~/GitHub/ids-ne-lakes/figures/'
#load in all insitu data for historical trend analysis
insitu <- read.csv(paste0(datadir, 'insitu_temp_data_v2021-05-17.csv')) %>%
filter(!is.na(lat_dd)) %>%
mutate(datetime = as.POSIXct(datetime, tz='Etc/GMT+5'))
View(insitu)
#read in all skin temp data for whole lake
lst_all <- read_csv(paste0(datadir, 'colab-output/2021-06-08/sunapee_temp_stats.csv'),
col_types = c('')) %>%
mutate(date =as.Date(substrRight(`system:index`, 8), '%Y%m%d'),
month = as.factor(format(date, '%m')),
year = as.factor(format(date, '%Y')),
doy = as.numeric(format(date, '%j')))
lst_paired <- read_csv(paste0(datadir, 'colab-output/2021-06-08/sunapee_insitu_landsat_paired.csv'),
col_types = c('')) %>%
mutate(date =as.Date(substrRight(`system:index`, 8), '%Y%m%d')) %>%
select(date, avg_temp:count)
lst_paired <- read_csv(paste0(datadir, 'colab-output/2021-06-08/sunapee_insitu_landsat_paired.csv'),
col_types = c('')) %>%
mutate(date =as.Date(substrRight(`system:index`, 8), '%Y%m%d'))
#make a list of the file namesin the folder
match_names <- list.files(paste0(datadir, 'colab-output/2021-06-08/ancillary'))
#iterate over the files into a dataframe
for(i in 1:length(match_names)) {
data <- read_csv(paste0(datadir, 'match-files/', match_names[i]),
col_types = c('')) %>%
mutate(source = paste0(match_names[i]))
if (i == 1) {
match_details <- data
} else {
match_details <- full_join(match_details, data)
}
}
# add columns for match_details
match_details <- match_details %>%
mutate(date =as.Date(datetime),
month = as.factor(format(date, '%m')),
year = as.factor(format(date, '%Y')),
doy = as.numeric(format(date, '%j'))) %>%
filter(frequency == 'sub-daily')
#number of observations for total DB
insitu %>%
summarize(nobs = length(datetime),
ndays = length(unique(format(datetime, '%Y-%m-%d'))),
year_start = min(as.numeric(format(datetime, '%Y'))),
year_end = max(as.numeric(format(datetime, '%Y'))))
#number of observations between time of 10 and 12
insitu %>%
mutate(hour = as.numeric(format(datetime, '%H'))) %>%
filter(hour >= 10 & hour < 12) %>%
summarize(nobs = length(datetime),
ndays = length(unique(format(datetime, '%Y-%m-%d'))),
year_start = min(as.numeric(format(datetime, '%Y'))),
year_end = max(as.numeric(format(datetime, '%Y'))),
min_month = min(as.numeric(format(datetime, '%m'))),
max_month = max(as.numeric(format(datetime, '%m'))))
#load in all insitu data for historical data analysis
insitu <- read.csv(paste0(datadir, 'insitu_temp_data_v2021-05-17.csv')) %>%
filter(!is.na(lat_dd)) %>%
mutate(datetime = as.POSIXct(datetime, tz='Etc/GMT+5')) %>%
filter(format(datetime, '%m') < 11)
#read in all skin temp data for whole lake
lst_all <- read_csv(paste0(datadir, 'colab-output/2021-06-08/sunapee_temp_stats.csv'),
col_types = c('')) %>%
mutate(date =as.Date(substrRight(`system:index`, 8), '%Y%m%d'),
month = as.factor(format(date, '%m')),
year = as.factor(format(date, '%Y')),
doy = as.numeric(format(date, '%j'))) %>%
filter(month < 11)
#read in all skin temp data for whole lake
lst_all <- read_csv(paste0(datadir, 'colab-output/2021-06-08/sunapee_temp_stats.csv'),
col_types = c('')) %>%
mutate(date =as.Date(substrRight(`system:index`, 8), '%Y%m%d'),
month = as.factor(format(date, '%m')),
year = as.factor(format(date, '%Y')),
doy = as.numeric(format(date, '%j'))) %>%
filter(month < 11)
lst_paired <- read_csv(paste0(datadir, 'colab-output/2021-06-08/sunapee_insitu_landsat_paired.csv'),
col_types = c('')) %>%
mutate(date =as.Date(substrRight(`system:index`, 8), '%Y%m%d')) %>%
filter(format(date, '%m') < 11)
#read in all skin temp data for whole lake
lst_all <- read_csv(paste0(datadir, 'colab-output/2021-06-08/sunapee_temp_stats.csv'),
col_types = c('')) %>%
mutate(date =as.Date(substrRight(`system:index`, 8), '%Y%m%d'),
month = as.factor(format(date, '%m')),
year = as.factor(format(date, '%Y')),
doy = as.numeric(format(date, '%j'))) %>%
filter(month < 11)
#read in all skin temp data for whole lake
lst_all <- read_csv(paste0(datadir, 'colab-output/2021-06-08/sunapee_temp_stats.csv'),
col_types = c('')) %>%
mutate(date =as.Date(substrRight(`system:index`, 8), '%Y%m%d'),
month = as.factor(format(date, '%m')),
year = as.factor(format(date, '%Y')),
doy = as.numeric(format(date, '%j'))) %>%
filter(as.numeric(month) < 11)
lst_paired <- read_csv(paste0(datadir, 'colab-output/2021-06-08/sunapee_insitu_landsat_paired.csv'),
col_types = c('')) %>%
mutate(date =as.Date(substrRight(`system:index`, 8), '%Y%m%d')) %>%
filter(format(date, '%m') < 11)
# add columns for match_details
match_details <- match_details %>%
mutate(date =as.Date(datetime),
month = as.factor(format(date, '%m')),
year = as.factor(format(date, '%Y')),
doy = as.numeric(format(date, '%j'))) %>%
filter(frequency == 'sub-daily') %>%
filter(month < 11)
# add columns for match_details
match_details <- match_details %>%
mutate(date =as.Date(datetime),
month = as.factor(format(date, '%m')),
year = as.factor(format(date, '%Y')),
doy = as.numeric(format(date, '%j'))) %>%
filter(frequency == 'sub-daily') %>%
filter(as.numeric(month) < 11)
#number of observations for total DB
insitu %>%
summarize(nobs = length(datetime),
ndays = length(unique(format(datetime, '%Y-%m-%d'))),
year_start = min(as.numeric(format(datetime, '%Y'))),
year_end = max(as.numeric(format(datetime, '%Y'))))
#number of observations for total DB
insitu %>%
summarize(nobs = length(datetime),
ndays = length(unique(format(datetime, '%Y-%m-%d'))),
year_start = min(as.numeric(format(datetime, '%Y'))),
year_end = max(as.numeric(format(datetime, '%Y'))),
min_month = min(as.numeric(format(datetime, '%m'))),
max_month = max(as.numeric(format(datetime, '%m'))))
#number of observations between time of 10 and 12
insitu %>%
mutate(hour = as.numeric(format(datetime, '%H'))) %>%
filter(hour >= 10 & hour < 12) %>%
summarize(nobs = length(datetime),
ndays = length(unique(format(datetime, '%Y-%m-%d'))),
year_start = min(as.numeric(format(datetime, '%Y'))),
year_end = max(as.numeric(format(datetime, '%Y'))),
min_month = min(as.numeric(format(datetime, '%m'))),
max_month = max(as.numeric(format(datetime, '%m'))))
#number of observations for total DB
insitu %>%
summarize(nobs = length(datetime),
ndays = length(unique(format(datetime, '%Y-%m-%d'))),
year_start = min(as.numeric(format(datetime, '%Y'))),
year_end = max(as.numeric(format(datetime, '%Y'))),
min_month = min(as.numeric(format(datetime, '%m'))),
max_month = max(as.numeric(format(datetime, '%m'))),
nsites = length(unique(location)))
#number of observations between time of 10 and 12
insitu %>%
mutate(hour = as.numeric(format(datetime, '%H'))) %>%
filter(hour >= 10 & hour < 12) %>%
summarize(nobs = length(datetime),
ndays = length(unique(format(datetime, '%Y-%m-%d'))),
year_start = min(as.numeric(format(datetime, '%Y'))),
year_end = max(as.numeric(format(datetime, '%Y'))),
min_month = min(as.numeric(format(datetime, '%m'))),
max_month = max(as.numeric(format(datetime, '%m')))),
#number of observations between time of 10 and 12
insitu %>%
mutate(hour = as.numeric(format(datetime, '%H'))) %>%
filter(hour >= 10 & hour < 12) %>%
summarize(nobs = length(datetime),
ndays = length(unique(format(datetime, '%Y-%m-%d'))),
year_start = min(as.numeric(format(datetime, '%Y'))),
year_end = max(as.numeric(format(datetime, '%Y'))),
min_month = min(as.numeric(format(datetime, '%m'))),
max_month = max(as.numeric(format(datetime, '%m'))),
nsites = length(unique(location)))
#number of sites
length(unique(insitu$location))
unique(insitu$location)
#number of observations
match_details %>%
summarize(nobs = length(datetime),
ndays = length(unique(format(datetime, '%Y-%m-%d'))),
year_start = min(as.numeric(format(datetime, '%Y'))),
year_end = max(as.numeric(format(datetime, '%Y'))))
#make a list of the file namesin the folder
match_names <- list.files(paste0(datadir, 'colab-output/2021-06-08/ancillary'))
#iterate over the files into a dataframe
for(i in 1:length(match_names)) {
data <- read_csv(paste0(datadir, 'match-files/', match_names[i]),
col_types = c('')) %>%
mutate(source = paste0(match_names[i]))
if (i == 1) {
match_details <- data
} else {
match_details <- full_join(match_details, data)
}
}
#iterate over the files into a dataframe
for(i in 1:length(match_names)) {
data <- read_csv(paste0(datadir, 'match-files/', match_names[i]),
col_types = c('')) %>%
mutate(source = paste0(match_names[i]))
if (i == 1) {
match_details <- data
} else {
match_details <- full_join(match_details, data)
}
}
# add columns for match_details
match_details <- match_details %>%
mutate(date =as.Date(datetime),
month = as.factor(format(date, '%m')),
year = as.factor(format(date, '%Y')),
doy = as.numeric(format(date, '%j'))) %>%
filter(frequency == 'sub-daily') %>%
filter(as.numeric(month) < 11)
#number of observations
match_details %>%
summarize(nobs = length(datetime),
ndays = length(unique(format(datetime, '%Y-%m-%d'))),
year_start = min(as.numeric(format(datetime, '%Y'))),
year_end = max(as.numeric(format(datetime, '%Y'))))
length(unique(match_details$location))
#number of observations
match_details %>%
summarize(nobs = length(datetime),
ndays = length(unique(format(datetime, '%Y-%m-%d'))),
year_start = min(as.numeric(format(datetime, '%Y'))),
year_end = max(as.numeric(format(datetime, '%Y'))))
buoy_data_summary_flyover <- insitu %>%
filter(location == 'loon') %>%
mutate(hour = as.numeric(format(datetime, '%H')),
year = as.factor(format(datetime, '%Y')),
day = as.factor(format(datetime, '%d'))) %>%
filter(hour >=10 & hour <12)
QC_check <- buoy_data_summary_flyover %>%
group_by(month, year) %>%
summarise(ndays = length(unique(day))) %>%
filter(ndays >= 15)
buoy_data_summary_flyover <- buoy_data_summary_flyover %>%
right_join(., QC_check)
ggplot(buoy_data_summary_flyover, aes(x = month, y = temp_degC, fill = year)) +
geom_boxplot(aes(group = paste(year, month))) +
final_theme +
scale_x_continuous(breaks = c(5, 6,7,8,9,10,11), labels = c('May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov')) +
scale_y_continuous(n.breaks = 8) +
labs(y = 'water temperature (deg C)')
ggsave(paste0(figdir, 'water_temp_buoy_interannual.png'), width = 8, height = 4, units = 'in')
insitu_2018 <- insitu %>%
mutate(year = as.numeric(format(datetime, '%Y'))) %>%
filter(year == 2018)%>%
mutate(hour = as.numeric(format(datetime, '%H')),
year = as.factor(format(datetime, '%Y')),
day = as.factor(format(datetime, '%d'))) %>%
filter(hour >=10 & hour <12)
insitu_2018 <- insitu %>%
mutate(year = as.numeric(format(datetime, '%Y'))) %>%
filter(year == 2018)%>%
mutate(hour = as.numeric(format(datetime, '%H')),
year = as.factor(format(datetime, '%Y')),
day = as.factor(format(datetime, '%d'))) %>%
filter(hour >=10 & hour <12)
QC_check_2018 <- insitu_2018 %>%
group_by(month, year, location) %>%
summarise(ndays = length(unique(day))) %>%
filter(ndays >= 15)
insitu_2018 <- insitu_2018 %>%
right_join(., QC_check_2018) %>%
mutate(location = as.factor(location)) %>%
filter(month >=6 & month <10) #filter for months that have multiple locations
insitu_2018 <- insitu_2018 %>%
right_join(., QC_check_2018) %>%
mutate(location = as.factor(location)) %>%
filter(month >=6 & month <10) #filter for months that have multiple locations
unique(insitu_2018$location)
ggplot(insitu_2018, aes(x = month, y = temp_degC, fill = location)) +
geom_boxplot(aes(group = paste(month, location))) +
final_theme +
scale_x_continuous(breaks = c(6,7,8,9), labels = c('Jun', 'Jul', 'Aug', 'Sept')) +
scale_y_continuous(n.breaks = 8) +
labs(y = 'water temperature (deg C)')
unique(insitu_2018$location)
View(insitu_2018)
insitu_2018 <- insitu_2018 %>%
mutate(location_long = case_when(location == 'loon' ~ 'primary (GLEON) buoy',
location == 'GeorgesMills' ~ 'Georges Mills buoy',
location == 'HerrickCove' ~ 'Herrick Cove buoy',
location == 'StateBeach' ~ 'State Beach buoy',
location == 'HerrickCoveSouth' ~ 'Herrick Cove near-shore',
location == 'Newbury' ~ 'Newbury near-shore',
location == 'NorthSunapeeHarbor' ~ 'North Sunapee Harbor near-shore',
location == 'SouthOfTheFells' ~ 'South of the Fells near-shore'))
ggplot(insitu_2018, aes(x = month, y = temp_degC, fill = location_long)) +
geom_boxplot(aes(group = paste(month, location_long))) +
final_theme +
scale_x_continuous(breaks = c(6,7,8,9), labels = c('Jun', 'Jul', 'Aug', 'Sept')) +
scale_y_continuous(n.breaks = 8) +
labs(y = 'water temperature (deg C)')
ggplot(insitu_2018, aes(x = month, y = temp_degC, fill = location_long)) +
geom_boxplot(aes(group = paste(month, location_long))) +
final_theme +
scale_x_continuous(breaks = c(6,7,8,9), labels = c('Jun', 'Jul', 'Aug', 'Sept')) +
scale_y_continuous(n.breaks = 8) +
labs(y = 'water temperature (deg C)') +
theme(legend.title = 'location')
ggplot(insitu_2018, aes(x = month, y = temp_degC, fill = location_long)) +
geom_boxplot(aes(group = paste(month, location_long))) +
final_theme +
scale_x_continuous(breaks = c(6,7,8,9), labels = c('Jun', 'Jul', 'Aug', 'Sept')) +
scale_y_continuous(n.breaks = 8) +
labs(y = 'water temperature (deg C)') +
labs(fill = 'location')
ggplot(insitu_2018, aes(x = month, y = temp_degC, fill = location_long)) +
geom_boxplot(aes(group = paste(month, location_long))) +
final_theme +
scale_x_continuous(breaks = c(6,7,8,9), labels = c('Jun', 'Jul', 'Aug', 'Sept')) +
scale_y_continuous(n.breaks = 8) +
labs(y = 'water temperature (deg C)') +
labs(fill = 'location') +
theme(legend.position = 'bottom', legend.direction = 'horizontal') +
guides(fill = guide_legend(nrow = 3, byrow = T))
ggplot(insitu_2018, aes(x = month, y = temp_degC, fill = location_long)) +
geom_boxplot(aes(group = paste(month, location_long))) +
final_theme +
scale_x_continuous(breaks = c(6,7,8,9), labels = c('Jun', 'Jul', 'Aug', 'Sept')) +
scale_y_continuous(n.breaks = 8) +
labs(y = 'water temperature (deg C)') +
labs(fill = 'location') +
theme(legend.position = 'bottom', legend.direction = 'horizontal') +
guides(fill = guide_legend(nrow = 3, byrow = T, title.position = 'top', title.hjust = 0.5))
ggsave(paste0(figdir, 'water_temp_2018_crosssite.png'), width = 8, height = 4, units = 'in')
ggplot(insitu_2018, aes(x = month, y = temp_degC, fill = location_long)) +
geom_boxplot(aes(group = paste(month, location_long))) +
final_theme +
scale_x_continuous(breaks = c(6,7,8,9), labels = c('Jun', 'Jul', 'Aug', 'Sept')) +
scale_y_continuous(n.breaks = 8) +
labs(y = 'water temperature (deg C)') +
labs(fill = 'location') +
theme(legend.position = 'bottom', legend.direction = 'horizontal') +
guides(fill = guide_legend(nrow = 3, byrow = T, title.position = 'top', title.hjust = 0.5))
ggsave(paste0(figdir, 'water_temp_2018_crosssite.png'), width = 8, height = 4, units = 'in')
ggplot(insitu_2018, aes(x = month, y = temp_degC, fill = location_long)) +
geom_boxplot(aes(group = paste(month, location_long))) +
final_theme +
scale_x_continuous(breaks = c(6,7,8,9), labels = c('Jun', 'Jul', 'Aug', 'Sept')) +
scale_y_continuous(n.breaks = 8) +
labs(y = 'water temperature (deg C)') +
labs(fill = 'location') +
theme(legend.position = 'bottom', legend.direction = 'horizontal', legend.spacing = unit(1, 'cm')) +
guides(fill = guide_legend(nrow = 3, byrow = T, title.position = 'top', title.hjust = 0.5))
ggplot(insitu_2018, aes(x = month, y = temp_degC, fill = location_long)) +
geom_boxplot(aes(group = paste(month, location_long))) +
final_theme +
scale_x_continuous(breaks = c(6,7,8,9), labels = c('Jun', 'Jul', 'Aug', 'Sept')) +
scale_y_continuous(n.breaks = 8) +
labs(y = 'water temperature (deg C)') +
labs(fill = 'location') +
theme(legend.position = 'bottom', legend.direction = 'horizontal', legend.spacing = unit(0.5, 'cm')) +
guides(fill = guide_legend(nrow = 3, byrow = T, title.position = 'top', title.hjust = 0.5))
ggplot(insitu_2018, aes(x = month, y = temp_degC, fill = location_long)) +
geom_boxplot(aes(group = paste(month, location_long))) +
final_theme +
scale_x_continuous(breaks = c(6,7,8,9), labels = c('Jun', 'Jul', 'Aug', 'Sept')) +
scale_y_continuous(n.breaks = 8) +
labs(y = 'water temperature (deg C)') +
labs(fill = 'location') +
theme(legend.position = 'bottom', legend.direction = 'horizontal', legend.spacing.y = unit(0.5, 'cm')) +
guides(fill = guide_legend(nrow = 3, byrow = T, title.position = 'top', title.hjust = 0.5))
ggplot(insitu_2018, aes(x = month, y = temp_degC, fill = location_long)) +
geom_boxplot(aes(group = paste(month, location_long))) +
final_theme +
scale_x_continuous(breaks = c(6,7,8,9), labels = c('Jun', 'Jul', 'Aug', 'Sept')) +
scale_y_continuous(n.breaks = 8) +
labs(y = 'water temperature (deg C)') +
labs(fill = 'location') +
theme(legend.position = 'bottom', legend.direction = 'horizontal', legend.spacing.y = unit(0.2, 'cm')) +
guides(fill = guide_legend(nrow = 3, byrow = T, title.position = 'top', title.hjust = 0.5))
ggplot(insitu_2018, aes(x = month, y = temp_degC, fill = location_long)) +
geom_boxplot(aes(group = paste(month, location_long))) +
final_theme +
scale_x_continuous(breaks = c(6,7,8,9), labels = c('Jun', 'Jul', 'Aug', 'Sept')) +
scale_y_continuous(n.breaks = 8) +
labs(y = 'water temperature (deg C)') +
labs(fill = 'location') +
theme(legend.position = 'bottom', legend.direction = 'horizontal', legend.spacing.y = unit(0.1, 'cm')) +
guides(fill = guide_legend(nrow = 3, byrow = T, title.position = 'top', title.hjust = 0.5))
ggplot(insitu_2018, aes(x = month, y = temp_degC, fill = location_long)) +
geom_boxplot(aes(group = paste(month, location_long))) +
final_theme +
scale_x_continuous(breaks = c(6,7,8,9), labels = c('Jun', 'Jul', 'Aug', 'Sept')) +
scale_y_continuous(n.breaks = 8) +
labs(y = 'water temperature (deg C)') +
labs(fill = 'location') +
theme(legend.position = 'bottom', legend.direction = 'horizontal', legend.spacing.y = unit(0.1, 'cm')) +
guides(fill = guide_legend(nrow = 3, byrow = T, title.position = 'top', title.hjust = 0.5))
ggsave(paste0(figdir, 'water_temp_2018_crosssite.png'), width = 8, height = 4, units = 'in')
ggplot(insitu_2018, aes(x = month, y = temp_degC, fill = location_long)) +
geom_boxplot(aes(group = paste(month, location_long))) +
final_theme +
scale_x_continuous(breaks = c(6,7,8,9), labels = c('Jun', 'Jul', 'Aug', 'Sept')) +
scale_y_continuous(n.breaks = 8) +
labs(y = 'water temperature (deg C)') +
labs(fill = 'location') +
theme(legend.spacing.y = unit(0.1, 'cm')) +
guides()
ggsave(paste0(figdir, 'water_temp_2018_crosssite.png'), width = 8, height = 4, units = 'in')
buoy_data_summary_flyover <- insitu %>%
filter(location == 'loon') %>%
mutate(hour = as.numeric(format(datetime, '%H')),
year = as.factor(format(datetime, '%Y')),
day = as.factor(format(datetime, '%d'))) %>%
filter(hour >=10 & hour <12)
buoy_data_summary_flyover <- insitu %>%
filter(location == 'loon') %>%
mutate(hour = as.numeric(format(datetime, '%H')),
year = as.factor(format(datetime, '%Y')),
day = as.factor(format(datetime, '%d'))) %>%
filter(hour >=10 & hour <12)
QC_check <- buoy_data_summary_flyover %>%
group_by(month, year) %>%
summarise(ndays = length(unique(day))) %>%
filter(ndays >= 15)
buoy_data_summary_flyover <- buoy_data_summary_flyover %>%
right_join(., QC_check)
ggplot(buoy_data_summary_flyover, aes(x = month, y = temp_degC, fill = year)) +
geom_boxplot(aes(group = paste(year, month))) +
final_theme +
scale_x_continuous(breaks = c(5, 6,7,8,9,10,11), labels = c('May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov')) +
scale_y_continuous(n.breaks = 8) +
labs(y = 'water temperature (deg C)')
buoy_data_summary_flyover <- insitu %>%
filter(location == 'loon') %>%
mutate(hour = as.numeric(format(datetime, '%H')),
year = as.factor(format(datetime, '%Y')),
day = as.factor(format(datetime, '%d'))) %>%
filter(hour >=10 & hour <12)
QC_check <- buoy_data_summary_flyover %>%
group_by(month, year) %>%
summarise(ndays = length(unique(day))) %>%
filter(ndays >= 15)
buoy_data_summary_flyover <- buoy_data_summary_flyover %>%
right_join(., QC_check)
ggplot(buoy_data_summary_flyover, aes(x = month, y = temp_degC, fill = year)) +
geom_boxplot(aes(group = paste(year, month))) +
final_theme +
scale_x_continuous(breaks = c(5, 6,7,8,9,10,11), labels = c('May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov')) +
scale_y_continuous(n.breaks = 8) +
labs(y = 'water temperature (deg C)')
ggsave(paste0(figdir, 'water_temp_buoy_interannual.png'), width = 8, height = 4, units = 'in')
lst_unimodal <- lst_all %>%
filter(surface_temp_min>0)
lst_unimodal <- lst_all %>%
filter(skew < 1 & skew >-1)
lst_unimodal <- lst_all %>%
filter(surface_temp_skew < 1 & surface_temp_skew >-1)
lst_unimodal <- lst_all %>%
filter(surface_temp_min>0)
lst_unimodal <- lst_unimodal %>%
filter(surface_temp_skew < 1 & surface_temp_skew >-1)
read.csv(file.path(datadir, 'temp_zonal_stats_sunapee_2018_06_16.csv')
read.csv(file.path(datadir, 'temp_zonal_stats_sunapee_2018_06_16.csv'))
read.delim(file.path(datadir, 'in-situ locs/2018_hg_locs.txt'))
read.delim(file.path(datadir, 'in-situ locs/2018_hf_locs.txt'))
read.delim(file.path(datadir, 'in-situ locs/2018_hf_locs.txt'), sep = ',')
ls2018 <- read.csv(file.path(datadir, 'temp_zonal_stats_sunapee_2018_06_16.csv'))
locs2018 <- read.delim(file.path(datadir, 'in-situ locs/2018_hf_locs.txt'), sep = ',')
