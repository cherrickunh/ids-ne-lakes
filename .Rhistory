FigGI_i
FigGI_j <- missionmonth_biasmae %>%
filter(variable == 'mae' & c_filter == 'C2 range') %>%
full_join(month_list) %>%
ggplot(., aes(x = month, y = value)) +
geom_point(aes(shape = mission), size =2) +
coord_cartesian(ylim = c(0, 2)) +
geom_abline(intercept = 0,
slope = 0,
lty = 2) +
labs(x = 'month',
y = '') +
final_theme+
theme(legend.position = 'none') +
scale_color_colorblind()
FigGI_j
plot_grid(FigGI_a, FigGI_f,
FigGI_b, FigGI_g,
FigGI_c, FigGI_h,
FigGI_d, FigGI_i,
FigGI_e, FigGI_j,
ncol =2)
FigGI_c <- missionmonth_biasmae %>%
filter(variable == 'bias' & c_filter == 'C2 IQR') %>%
ggplot(., aes(x = month, y = value)) +
geom_point(aes(shape = mission), size =2) +
labs(x = '',
y = 'temerature\ndegrees C') +
final_theme+
theme(legend.position = 'none') +
coord_cartesian(ylim = c(-2, 2)) +
geom_abline(intercept = 0,
slope = 0,
lty = 2) +
scale_color_colorblind()
FigGI_c
FigGI_d <- missionmonth_biasmae %>%
filter(variable == 'bias' & c_filter == 'C2 cloud') %>%
ggplot(., aes(x = month, y = value)) +
geom_point(aes(shape = mission), size =2) +
labs(x = '',
y = '') +
final_theme+
coord_cartesian(ylim = c(-2, 2)) +
geom_abline(intercept = 0,
slope = 0,
lty = 2) +
theme(legend.position = 'none') +
scale_color_colorblind()
FigGI_d
plot_grid(FigGI_a, FigGI_f,
FigGI_b, FigGI_g,
FigGI_c, FigGI_h,
FigGI_d, FigGI_i,
FigGI_e, FigGI_j,
ncol =2)
FigGI_a <- missionmonth_biasmae %>%
filter(variable == 'bias' & c_filter == 'C2') %>%
ggplot(., aes(x = month, y = value)) +
geom_point(aes(shape = mission), size =2) +
labs(x = '',
y = '\n') +
geom_abline(intercept = 0,
slope = 0,
lty = 2) +
coord_cartesian(ylim = c(-2, 2)) +
final_theme+
theme(legend.position = 'none') +
scale_color_colorblind()
FigGI_a
FigGI_b <- missionmonth_biasmae %>%
filter(variable == 'bias' & c_filter == 'C2 freeze') %>%
ggplot(., aes(x = month, y = value)) +
geom_point(aes(shape = mission), size =2) +
geom_abline(intercept = 0,
slope = 0,
lty = 2) +
coord_cartesian(ylim = c(-2, 2)) +
labs(x = '',
y = '\n') +
final_theme+
theme(legend.position = 'none') +
scale_color_colorblind()
FigGI_b
FigGI_c <- missionmonth_biasmae %>%
filter(variable == 'bias' & c_filter == 'C2 IQR') %>%
ggplot(., aes(x = month, y = value)) +
geom_point(aes(shape = mission), size =2) +
labs(x = '',
y = 'temerature\ndegrees C') +
final_theme+
theme(legend.position = 'none') +
coord_cartesian(ylim = c(-2, 2)) +
geom_abline(intercept = 0,
slope = 0,
lty = 2) +
scale_color_colorblind()
FigGI_c
FigGI_d <- missionmonth_biasmae %>%
filter(variable == 'bias' & c_filter == 'C2 cloud') %>%
ggplot(., aes(x = month, y = value)) +
geom_point(aes(shape = mission), size =2) +
labs(x = '',
y = '\n') +
final_theme+
coord_cartesian(ylim = c(-2, 2)) +
geom_abline(intercept = 0,
slope = 0,
lty = 2) +
theme(legend.position = 'none') +
scale_color_colorblind()
FigGI_d
FigGI_e <- missionmonth_biasmae %>%
filter(variable == 'bias' & c_filter == 'C2 range') %>%
full_join(month_list) %>%
ggplot(., aes(x = month, y = value)) +
geom_point(aes(shape = mission), size =2) +
coord_cartesian(ylim = c(-2, 2)) +
geom_abline(intercept = 0,
slope = 0,
lty = 2) +
labs(x = 'month',
y = '\n') +
final_theme+
theme(legend.position = 'none') +
scale_color_colorblind()
FigGI_e
FigGI_f <- missionmonth_biasmae %>%
filter(variable == 'mae' & c_filter == 'C2') %>%
ggplot(., aes(x = month, y = value)) +
geom_point(aes(shape = mission), size =2) +
coord_cartesian(ylim = c(0, 2)) +
geom_abline(intercept = 0,
slope = 0,
lty = 2) +
labs(x = '',
y = '\n') +
final_theme+
theme(legend.position = 'none') +
scale_color_colorblind()
FigGI_f
FigGI_g <- missionmonth_biasmae %>%
filter(variable == 'mae' & c_filter == 'C2 freeze') %>%
ggplot(., aes(x = month, y = value)) +
geom_point(aes(shape = mission), size =2) +
coord_cartesian(ylim = c(0, 2)) +
geom_abline(intercept = 0,
slope = 0,
lty = 2) +
labs(x = '',
y = '\n') +
final_theme+
theme(legend.position = 'none') +
scale_color_colorblind()
FigGI_g
FigGI_h <- missionmonth_biasmae %>%
filter(variable == 'mae' & c_filter == 'C2 IQR') %>%
ggplot(., aes(x = month, y = value)) +
geom_point(aes(shape = mission), size =2) +
coord_cartesian(ylim = c(0, 2)) +
geom_abline(intercept = 0,
slope = 0,
lty = 2) +
labs(x = '',
y = '\n') +
final_theme+
theme(legend.position = 'none') +
scale_color_colorblind()
FigGI_h
FigGI_i <- missionmonth_biasmae %>%
filter(variable == 'mae' & c_filter == 'C2 cloud') %>%
ggplot(., aes(x = month, y = value)) +
geom_point(aes(shape = mission), size =2) +
coord_cartesian(ylim = c(0, 2)) +
geom_abline(intercept = 0,
slope = 0,
lty = 2) +
labs(x = '',
y = '\n') +
final_theme+
theme(legend.position = 'none') +
scale_color_colorblind()
FigGI_i
FigGI_j <- missionmonth_biasmae %>%
filter(variable == 'mae' & c_filter == 'C2 range') %>%
full_join(month_list) %>%
ggplot(., aes(x = month, y = value)) +
geom_point(aes(shape = mission), size =2) +
coord_cartesian(ylim = c(0, 2)) +
geom_abline(intercept = 0,
slope = 0,
lty = 2) +
labs(x = 'month',
y = '\n') +
final_theme+
theme(legend.position = 'none') +
scale_color_colorblind()
FigGI_j
plot_grid(FigGI_a, FigGI_f,
FigGI_b, FigGI_g,
FigGI_c, FigGI_h,
FigGI_d, FigGI_i,
FigGI_e, FigGI_j,
ncol =2)
get_legend(FigGI_j)
get_legend(FigGI_a)
leg <- get_legend(FigGI_a)
leg
forlegend <- missionmonth_biasmae %>%
filter(variable == 'mae' & c_filter == 'C2 range') %>%
full_join(month_list) %>%
ggplot(., aes(x = month, y = value)) +
geom_point(aes(shape = mission), size =2) +
coord_cartesian(ylim = c(0, 2)) +
geom_abline(intercept = 0,
slope = 0,
lty = 2) +
labs(x = 'month',
y = '\n') +
final_theme+
scale_color_colorblind()
leg <- get_legend(forlegend)
leg
forlegend <- missionmonth_biasmae %>%
filter(variable == 'mae' & c_filter == 'C2 range') %>%
full_join(month_list) %>%
ggplot(., aes(x = month, y = value)) +
geom_point(aes(shape = mission), size =2) +
coord_cartesian(ylim = c(0, 2)) +
geom_abline(intercept = 0,
slope = 0,
lty = 2) +
theme(legend.position = 'bottom') +
labs(x = 'month',
y = '\n') +
final_theme+
scale_color_colorblind()
leg <- get_legend(forlegend)
leg
FigGI <- plot_grid(FigGI_a, FigGI_f,
FigGI_b, FigGI_g,
FigGI_c, FigGI_h,
FigGI_d, FigGI_i,
FigGI_e, FigGI_j,
ncol =2)
plot_grid(FigGI, leg, rel_heights = 0.1)
forlegend <- missionmonth_biasmae %>%
filter(variable == 'mae' & c_filter == 'C2 range') %>%
full_join(month_list) %>%
ggplot(., aes(x = month, y = value)) +
geom_point(aes(shape = mission), size =2) +
coord_cartesian(ylim = c(0, 2)) +
geom_abline(intercept = 0,
slope = 0,
lty = 2) +
theme(legend.position = 'bottom') +
labs(x = 'month',
y = '\n') +
final_theme+
scale_color_colorblind()
leg <- get_legend(forlegend)
forlegend <- missionmonth_biasmae %>%
filter(variable == 'mae' & c_filter == 'C2 freeze') %>%
full_join(month_list) %>%
ggplot(., aes(x = month, y = value)) +
geom_point(aes(shape = mission), size =2) +
coord_cartesian(ylim = c(0, 2)) +
geom_abline(intercept = 0,
slope = 0,
lty = 2) +
theme(legend.position = 'bottom') +
labs(x = 'month',
y = '\n') +
final_theme+
scale_color_colorblind()
leg <- get_legend(forlegend)
leg
FigGI <- plot_grid(FigGI_a, FigGI_f,
FigGI_b, FigGI_g,
FigGI_c, FigGI_h,
FigGI_d, FigGI_i,
FigGI_e, FigGI_j,
ncol =2)
plot_grid(FigGI, leg, rel_heights = 0.1)
plot_grid(FigGI, leg, rel_widths = 0.1)
plot_grid(FigGI, leg, rel_widths = c(0.9,0.1)
)
ggsave(file.path(fig_dir, 'FigGI_errorbymission.jpg'), height = 8, width = 8, units = 'in', dpi = 300)
# read in libraries and functions
source('scripts/R_library.R')
# point to directories
datadir = '~/GitHub/ids-ne-lakes/data/'
C1_datadir <- '~/GitHub/ids-ne-lakes/data/colab-output/C1/'
C2_datadir <- '~/GitHub/ids-ne-lakes/data/colab-output/C2/'
fig_dir <- '~/GitHub/ids-ne-lakes/figures/'
# read in C1 single-channel and C2 surface temperature data
C1SC <- read_csv(file.path(C1_datadir, 'C1_temp_landsat_paired.csv')) %>%
mutate(date = as.Date(substrRight(`system:index`, 8), format = '%Y%m%d')) %>%
mutate(LSmission = case_when(grepl('LT05', `system:index`) ~ 'LS 5',
grepl('LT04', `system:index`) ~ 'LS 4',
grepl('LE07', `system:index`) ~ 'LS 7',
grepl('LC08', `system:index`) ~ 'LS 8',
TRUE ~ NA_character_)) %>%
mutate(collection = 1,
month = format(date, '%m'),
doy = format(date, '%j')) %>%
select(-X1)
head(C1SC)
# rename LS-related columns
C1SC <- C1SC %>%
rename(earthsun_d = esd,
sunazi = azimuth,
sunelev = elev)
head(C1SC)
# Collection 2 data
C2ST <- read_csv(file.path(C2_datadir, 'C2_temp_landsat_paired.csv')) %>%
mutate(date = as.Date(substrRight(`system:index`, 8), format = '%Y%m%d')) %>%
mutate(LSmission = case_when(grepl('LT05', `system:index`) ~ 'LS 5',
grepl('LT04', `system:index`) ~ 'LS 4',
grepl('LE07', `system:index`) ~ 'LS 7',
grepl('LC08', `system:index`) ~ 'LS 8',
TRUE ~ NA_character_)) %>%
rename_at(vars('temp_max', 'temp_mean', 'temp_median', 'temp_min', 'temp_p25', 'temp_p75', 'temp_skew', 'temp_stdDev'),
~ paste('surface', ., sep = '_')) %>%
mutate(collection = 2,
month = format(date, '%m'),
doy = format(date, '%j'))
read_csv(file.path(C2_datadir, 'C2_temp_landsat_paired.csv'))
# Collection 2 data
C2ST <- read_csv(file.path(C2_datadir, 'C2_temp_landsat_paired.csv')) %>%
mutate(date = as.Date(substrRight(`system:index`, 8), format = '%Y%m%d')) %>%
mutate(LSmission = case_when(grepl('LT05', `system:index`) ~ 'LS 5',
grepl('LT04', `system:index`) ~ 'LS 4',
grepl('LE07', `system:index`) ~ 'LS 7',
grepl('LC08', `system:index`) ~ 'LS 8',
TRUE ~ NA_character_)) %>%
]  mutate(collection = 2,
month = format(date, '%m'),
doy = format(date, '%j'))
# Collection 2 data
C2ST <- read_csv(file.path(C2_datadir, 'C2_temp_landsat_paired.csv')) %>%
mutate(date = as.Date(substrRight(`system:index`, 8), format = '%Y%m%d')) %>%
mutate(LSmission = case_when(grepl('LT05', `system:index`) ~ 'LS 5',
grepl('LT04', `system:index`) ~ 'LS 4',
grepl('LE07', `system:index`) ~ 'LS 7',
grepl('LC08', `system:index`) ~ 'LS 8',
TRUE ~ NA_character_)) %>%
mutate(collection = 2,
month = format(date, '%m'),
doy = format(date, '%j'))
head(C2ST)
#load in all high-frequency insitu data for historical data analysis
insitu <- read.csv(paste0(datadir, 'insitu_temp_data_v2021-10-20.csv')) %>%
filter(!is.na(lat_dd)) %>%
mutate(datetime = as.POSIXct(datetime, tz='Etc/GMT+5'))
# get range per day during hours of flyover
range_per_date <- insitu %>%
mutate(hour = as.numeric(format(datetime, '%H')),
date = as.Date(datetime)) %>%
filter(hour >= 9 & hour < 11) %>%
group_by(date) %>%
summarize(temp_range = max(temp_degC) - min(temp_degC),
IQR = IQR(temp_degC, na.rm = T),
n_locs = length(unique(location)))
#save max observed spread and IQR for further filtering
max_spread <- max(range_per_date$temp_range, na.rm = T)
max_IQR <- max(range_per_date$IQR, na.rm = T)
# Flag C2 data for freezing temps, spread P/F, IQR P/F ####
C2ST <- C2ST %>%
mutate(freeze_QAQC = case_when(surface_temp_min < 0 ~ 'F', #pass/fail for freezing temps
TRUE ~ 'P')) %>%
mutate(temp_spread = round(surface_temp_max, digits = 1) - round(surface_temp_min, digits = 1)) %>% #calc temp spread; pass/fail for temp spread
mutate(spread_QAQC = case_when(temp_spread < max_spread*1.1 ~ 'P',
TRUE ~ 'F')) %>%
mutate(IQR = round(surface_temp_p75, digits = 1) - round(surface_temp_p25, digits = 1))  %>%  #calc IQR; pass/fail for temp IQR
mutate(IQR_QAQC = case_when(IQR < max_IQR*1.1 ~ 'P',
TRUE ~ 'F'))
write.csv(C2ST, file.path(C2_datadir,paste0('sunapee_paired_C2_QAQCflag_v', Sys.Date(), '.csv')), row.names = F)
C2ST_freeze <- C2ST %>%
filter(freeze_QAQC == 'P')
C2ST_freeze %>%
group_by(LSmission) %>%
summarize(count = length(LSmission))
C2ST_maxrange <- C2ST %>%
filter(freeze_QAQC == 'P' &
spread_QAQC == 'P')
C2ST_maxrange %>%
group_by(LSmission) %>%
summarize(count = length(LSmission))
C2ST_maxIQR <- C2ST %>%
filter(freeze_QAQC == 'P' &
IQR_QAQC == 'P')
C2ST_maxIQR %>%
group_by(LSmission) %>%
summarize(count = length(LSmission))
C2ST_cloud <- C2ST %>%
filter(freeze_QAQC == 'P' & cloud_cover <40)
C2ST_cloud %>%
group_by(LSmission) %>%
summarize(count = length(LSmission))
# deming regression for C1
C1_deming = deming::deming(C1SC$surface_temp_median ~ C1SC$temp_med)
C1_deming_forresid = mcreg(x = C1SC$temp_med, y = C1SC$surface_temp_median, method.reg = 'Deming')
C1SC$opt_resid = MCResult.getResiduals(C1_deming_forresid)$optimized
C1SC$filter = 'none'
# deming regression for C2
C2_deming = deming::deming(C2ST$surface_temp_median ~ C2ST$temp_med)
C2_deming_forresid = mcreg(x = C2ST$temp_med, y = C2ST$surface_temp_median, method.reg = 'Deming')
C2ST$opt_resid = MCResult.getResiduals(C2_deming_forresid)$optimized
C2ST$filter = 'none'
# deming regression for C2 without freezing temps
C2_freeze_deming = deming::deming(C2ST_freeze$surface_temp_median ~ C2ST_freeze$temp_med)
C2_freeze_deming_forresid = mcreg(x = C2ST_freeze$temp_med,
y = C2ST_freeze$surface_temp_median,
method.reg = 'Deming')
C2ST_freeze$opt_resid = MCResult.getResiduals(C2_freeze_deming_forresid)$optimized
C2ST_freeze$filter = 'freeze'
# deming regression for C2 without freezing temps and within range
C2_maxrange_deming = deming::deming(C2ST_maxrange$surface_temp_median ~ C2ST_maxrange$temp_med)
C2_maxrange_deming_forresid = mcreg(x = C2ST_maxrange$temp_med,
y = C2ST_maxrange$surface_temp_median,
method.reg = 'Deming')
C2ST_maxrange$opt_resid = MCResult.getResiduals(C2_maxrange_deming_forresid)$optimized
C2ST_maxrange$filter = 'range'
# deming regression for C2 without freezing temps and within IQR
C2_maxIQR_deming = deming::deming(C2ST_maxIQR$surface_temp_median ~ C2ST_maxIQR$temp_med)
C2_maxIQR_deming_forresid = mcreg(x = C2ST_maxIQR$temp_med,
y = C2ST_maxIQR$surface_temp_median,
method.reg = 'Deming')
C2ST_maxIQR$opt_resid = MCResult.getResiduals(C2_maxIQR_deming_forresid)$optimized
C2ST_maxIQR$filter = 'IQR'
# deming regression for C2 without freezing temps and within IQR and data from the buoy only
C2_cloud_deming = deming::deming(C2ST_cloud$surface_temp_median ~
C2ST_cloud$temp_med)
C2_cloud_deming_forresid = mcreg(x = C2ST_cloud$temp_med,
y = C2ST_cloud$surface_temp_median,
method.reg = 'Deming')
C2ST_cloud$opt_resid = MCResult.getResiduals(C2_cloud_deming_forresid)$optimized
C2ST_cloud$filter = 'cloud'
C1_deming
cor(C1SC$surface_temp_median, C1SC$temp_med)
C2_deming
cor(C2ST$surface_temp_median, C2ST$temp_med)
C2_freeze_deming
cor(C2ST_freeze$surface_temp_median, C2ST_freeze$temp_med)
C2_maxrange_deming
cor(C2ST_maxrange$surface_temp_median, C2ST_maxrange$temp_med)
C2_maxIQR_deming
cor(C2ST_maxIQR$surface_temp_median, C2ST_maxIQR$temp_med)
C2_cloud_deming
cor(C2ST_cloud$surface_temp_median, C2ST_cloud$temp_med)
# Join all Deming data ####
all_surface_temp <- full_join(C1SC, C2ST) %>%
full_join(., C2ST_freeze) %>%
full_join(., C2ST_maxrange) %>%
full_join(., C2ST_maxIQR) %>%
full_join(., C2ST_cloud) %>%
mutate(collection = as.factor(collection),
filter = as.factor(filter))
# Plot Deming regression for all filters ####
FigC_a <- ggplot(C1SC, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = '#006cd1', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C1
geom_abline(intercept = C1_deming$coefficients[1], slope = C1_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C1_deming$ci[1,1], slope = C1_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C1_deming$ci[1,2], slope = C1_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C1SC$surface_temp_median, C1SC$temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C1SC$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = '',
y = 'median Landsat-derived\nsurface temperature (deg C)',
title = 'Collection 1',
subtitle = 'single-channel algorithm') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_a
FigC_b <- ggplot(C2ST, aes(x = temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = '#006cd1', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2
geom_abline(intercept = C2_deming$coefficients[1], slope = C2_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_deming$ci[1,1], slope = C2_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_deming$ci[1,2], slope = C2_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C2ST$surface_temp_median, C2ST$temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C2ST$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = '',
y = '\n',
title = 'Collection 2',
subtitle = '') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_b
View(C1_deming)
View(C1SC)
