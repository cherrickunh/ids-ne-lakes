# C1SC_kurtosis$filter = 'kurtosis'
#
# C1_kurtosis_deming
# cor(C1SC_kurtosis$surface_temp_median, C1SC_kurtosis$is_temp_med)
# deming regression for C2
C2_deming = deming::deming(C2ST$surface_temp_median ~ C2ST$is_temp_med)
C2_deming_forresid = mcreg(x = C2ST$is_temp_med, y = C2ST$surface_temp_median, method.reg = 'Deming')
C2ST$opt_resid = MCResult.getResiduals(C2_deming_forresid)$optimized
C2ST$filter = 'none'
C2_deming
cor(C2ST$surface_temp_median, C2ST$is_temp_med)
#deming regress for C2 with kurtosis >= 2
C2_kurtosis_deming = deming::deming(C2ST_kurtosis$surface_temp_median ~
C2ST_kurtosis$is_temp_med)
C2_kurtosis_deming_forresid = mcreg(x = C2ST_kurtosis$is_temp_med,
y = C2ST_kurtosis$surface_temp_median,
method.reg = 'Deming')
C2ST_kurtosis$opt_resid = MCResult.getResiduals(C2_kurtosis_deming_forresid)$optimized
C2ST_kurtosis$filter = 'kurtosis'
C2_kurtosis_deming
cor(C2ST_kurtosis$surface_temp_median, C2ST_kurtosis$is_temp_med)
# Join all Deming data ####
all_surface_temp <- full_join(C1SC, C2ST) %>%
# full_join(., C1SC_kurtosis) %>%
full_join(., C2ST_kurtosis) %>%
mutate(collection = as.factor(collection),
filter = as.factor(filter))
# Figure C: Plot Deming regression for all filters ####
FigC_a <- ggplot(C1SC, aes(x = is_temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = '#006cd1', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C1
geom_abline(intercept = C1_deming$coefficients[1], slope = C1_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C1_deming$ci[1,1], slope = C1_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C1_deming$ci[1,2], slope = C1_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C1SC$surface_temp_median, C1SC$is_temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C1SC$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
geom_text(label = paste0('y = ',
round(C1_deming$coefficients[1], digits = 2),
' + ',
round(C1_deming$coefficients[2], digits = 2),
' * x'),
x = 2,
y = 27,
size = 4,
hjust = 0) +
labs(x = NULL,
y = NULL,
title = 'Collection 1',
subtitle = 'single-channel algorithm') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_a
FigC_b <- ggplot(C2ST, aes(x = is_temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = '#006cd1', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2
geom_abline(intercept = C2_deming$coefficients[1], slope = C2_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_deming$ci[1,1], slope = C2_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_deming$ci[1,2], slope = C2_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C2ST$surface_temp_median, C2ST$is_temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C2ST$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
geom_text(label = paste0('y = ',
round(C2_deming$coefficients[1], digits = 2),
' + ',
round(C2_deming$coefficients[2], digits = 2),
' * x'),
x = 2,
y = 27,
size = 4,
hjust = 0) +
labs(x = NULL,
y = NULL,
title = 'Collection 2',
subtitle = 'surface temperature product') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_b
# FigC_c <- ggplot(C1SC_kurtosis, aes(x = is_temp_med, y = surface_temp_median)) +
#   geom_abline(slope = 1, intercept = 0, color = '#006cd1', size = 0.75) +
#   geom_point() +
#   #add deming regression and prediction intervals for C2 filtered for sub zero and kurtosis
#   geom_abline(intercept = C1_kurtosis_deming$coefficients[1], slope = C1_kurtosis_deming$coefficients[2], size = 0.75) +
#   geom_abline(intercept = C1_kurtosis_deming$ci[1,1], slope = C1_kurtosis_deming$ci[2,1], linetype = 3, size = 0.75) +
#   geom_abline(intercept = C1_kurtosis_deming$ci[1,2], slope = C1_kurtosis_deming$ci[2,2], linetype = 3, size = 0.75) +
#   geom_text(label = paste0('r = ', round(cor(C1SC_kurtosis$surface_temp_median, C1SC_kurtosis$is_temp_med), digits = 3)),
#             x = 2,
#             y = 25,
#             size = 4,
#             hjust = 0)+
#   geom_text(label = paste0('n = ', length(C1SC_kurtosis$date)),
#             x = 2,
#             y = 23,
#             size = 4,
#             hjust = 0)+
#   labs(x = '',
#        y = '\n',
#        title = 'Collection 1',
#        subtitle = 'kurtosis filter') +
#   final_theme +
#   coord_cartesian(xlim = c(0, 27),
#                   ylim = c(0, 27))
# FigC_c
FigC_d <- ggplot(C2ST_kurtosis, aes(x = is_temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = '#006cd1', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and kurtosis
geom_abline(intercept = C2_kurtosis_deming$coefficients[1], slope = C2_kurtosis_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_kurtosis_deming$ci[1,1], slope = C2_kurtosis_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_kurtosis_deming$ci[1,2], slope = C2_kurtosis_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C2ST_kurtosis$surface_temp_median, C2ST_kurtosis$is_temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C2ST_kurtosis$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
geom_text(label = paste0('y = ',
round(C2_kurtosis_deming$coefficients[1], digits = 2),
' + ',
round(C2_kurtosis_deming$coefficients[2], digits = 2),
' * x'),
x = 2,
y = 27,
size = 4,
hjust = 0) +
labs(x = NULL,
y = NULL,
title = 'Collection 2',
subtitle = 'kurtosis filter') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_d
FigC_plot <- plot_grid(FigC_a, FigC_b,
#FigC_c,
FigC_d,
# ncol = 2,
ncol = 3,
labels = c('a', 'b',
'c'
#, 'd'
),
label_y = 0.9)
FigC_plot
x_lab = ggdraw() + draw_label(label = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
fontface = 'bold')
y_lab = ggdraw() + draw_label(label = 'Landsat median water temp (deg C)',
fontface = 'bold',
angle =90)
FigC_label = plot_grid(y_lab, FigC_plot,
NULL, x_lab,
ncol = 2,
rel_widths = c(0.05, 1.1),
rel_heights = c(1.1, 0.05))
FigC_label
ggsave(file.path(fig_dir, 'FigureC_deming_filters.jpg'),
dpi = 300,
height = 4,
width = 10,
units = 'in')
# Supplemental Figure A: Look at C2 kurtosis data set residuals against other variables ####
# by insitu temp
istemp <- ggplot(C2ST_kurtosis, aes(x = is_temp_med, y = opt_resid)) +
geom_point() +
# geom_line(aes(group = date)) +
labs(x = 'in-situ median water temp\n(deg C)',
y = '\n') +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-5, 5)) +
final_theme
istemp
# by doy
doy <- ggplot(C2ST_kurtosis, aes(x = as.numeric(doy), y = opt_resid)) +
geom_point() +
# geom_line(aes(group = date)) +
labs(x = 'day of year\n',
y = '\n') +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-5, 5)) +
final_theme
doy
# by pixel count
perclake <- ggplot(C2ST_kurtosis, aes(x = (pixel_count/17134)*100, y = opt_resid)) +
geom_point() +
# geom_line(aes(group = date)) +
labs(x = 'percent of lake\n',
y = '\n') +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-5, 5)) +
final_theme
perclake
# by kurtosis cover
cloud <- ggplot(C2ST_kurtosis, aes(x = cloud_cover, y = opt_resid)) +
geom_point() +
# geom_line(aes(group = date)) +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-5, 5)) +
labs(x = 'cloud cover (percent)\n',
y = '\n') +
final_theme
cloud
# by sun elevation
sunelev <- ggplot(C2ST_kurtosis, aes(x = elev, y = opt_resid)) +
geom_point() +
# geom_line(aes(group = date)) +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-5, 5)) +
labs(x = 'sun elevation (UNITS)\n',
y = 'Deming-optimized residual\n(deg C)') +
final_theme
sunelev
# by earth sun distance
esd <- ggplot(C2ST_kurtosis, aes(x = esd, y = opt_resid)) +
geom_point() +
# geom_line(aes(group = date)) +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-5, 5)) +
labs(x = 'earth sun distance (UNITS)\n',
y = '\n') +
final_theme
esd
# by azimuth
azi <- ggplot(C2ST_kurtosis, aes(x = azimuth, y = opt_resid)) +
geom_point() +
# geom_line(aes(group = date)) +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-5, 5)) +
labs(x = 'sun azimuth (degrees)\n',
y = '\n') +
final_theme
azi
# depth of sensor
depth <- ggplot(C2ST_kurtosis, aes(x = is_depth_avg, y = opt_resid)) +
geom_point() +
# geom_line(aes(group = date)) +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-5, 5)) +
labs(x = 'average depth of sensor (m)\n',
y = '\n') +
final_theme
depth
# std dev in-situ temp
sd <- ggplot(C2ST_kurtosis, aes(x = is_temp_stdev, y = opt_resid)) +
geom_point() +
# geom_line(aes(group = date)) +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-5, 5)) +
labs(x = 'standard deviation of temps\ncontributing to median (deg C)',
y = '\n') +
final_theme
sd
#in-situ count
count <- ggplot(C2ST_kurtosis, aes(x = insitu_count, y = opt_resid)) +
geom_point() +
# geom_line(aes(group = date)) +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-5, 5)) +
labs(x = 'number of insitu measurements\ncontributing to median',
y = '\n') +
final_theme
count
plot_grid(istemp, doy, perclake, cloud, sunelev, esd, azi, depth, sd, count,
labels = c('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'),
ncol = 2,
label_x = 0.07,
label_y = 1)
ggsave(file.path(fig_dir, 'SFA_resid_summary_C2kurtosis_v12Nov2021.jpg'),
height = 12, width = 8, units = 'in', dpi = 300)
# Supplemental Table C and D Calculate error for various models ####
alldata_error <- all_surface_temp %>%
group_by(collection, filter) %>%
summarise(mse = round(sum((opt_resid^2))/n(), digits = 2),
rmse = round(sqrt(mse), digits = 2),
bias = round(sum(opt_resid)/n(), digits = 2),
mae = round(sum(abs(opt_resid))/n(), digits = 2),
n_obs = n())  %>%
mutate(month = 'All data',
LSmission = 'All missions') %>%
pivot_longer(cols = c(mse:n_obs), names_to = 'variable', values_to = 'values') %>%
mutate(variable = factor(variable, levels = c('n_obs', 'mae', 'rmse', 'mse', 'bias'))) %>%
arrange(month, variable) %>%
pivot_wider(names_from = c(LSmission),
values_from = values)
mission_error <- all_surface_temp %>%
group_by(collection, LSmission, filter) %>%
summarise(mse = round(sum((opt_resid^2))/n(), digits = 2),
rmse = round(sqrt(mse), digits = 2),
bias = round(sum(opt_resid)/n(), digits = 2),
mae = round(sum(abs(opt_resid))/n(), digits = 2),
n_obs = n())  %>%
mutate(month = 'All data') %>%
pivot_longer(cols = c(mse:n_obs), names_to = 'variable', values_to = 'values') %>%
mutate(variable = factor(variable, levels = c('n_obs', 'mae', 'rmse', 'mse', 'bias'))) %>%
arrange(month, variable) %>%
pivot_wider(names_from = c(LSmission),
values_from = values)
alldata_error <- full_join(alldata_error, mission_error)
alldata_error
alldata_error %>%
arrange(collection, variable, filter)
alldata_error <- full_join(alldata_error, mission_error) %>%
mutate(filter = factor(filter, levels = ('none', 'kurtosis')))
alldata_error <- full_join(alldata_error, mission_error) %>%
mutate(filter = factor(filter, levels = c('none', 'kurtosis')))
alldata_error %>%
arrange(collection, variable, filter)
alldata_error %>%
arrange(collection, filter, variable)
alldata_error %>%
arrange(collection, filter, variable) %>%
select(-month)
alldata_error <- full_join(alldata_error, mission_error) %>%
mutate(filter = factor(filter, levels = c('none', 'kurtosis'))) %>%
arrange(collection, filter, variable)
alldata_error %>%
select(-month) %>%
write.csv(., file.path(figdir, 'STC_deming_performance_bymission.csv'), row.names = F)
month_mission_error <- all_surface_temp %>%
group_by(collection, month, LSmission, filter) %>%
summarise(mse = round(sum((opt_resid^2))/n(), digits = 2),
rmse = round(sqrt(mse), digits = 2),
bias = round(sum(opt_resid)/n(), digits = 2),
mae = round(sum(abs(opt_resid))/n(), digits = 2),
n_obs = n())  %>%
select(month, collection, LSmission, filter,n_obs, mae, rmse, bias) %>%
pivot_longer(!c(month, LSmission, collection, filter), names_to = 'variable', values_to = 'values') %>%
mutate(variable = factor(variable, levels = c('n_obs', 'mae', 'rmse', 'mse', 'bias'))) %>%
arrange(month, variable) %>%
pivot_wider(names_from = c(LSmission),
values_from = values)
month_error <- all_surface_temp %>%
group_by(collection, month, filter) %>%
summarise(mse = round(sum((opt_resid^2))/n(), digits = 2),
rmse = round(sqrt(mse), digits = 2),
bias = round(sum(opt_resid)/n(), digits = 2),
mae = round(sum(abs(opt_resid))/n(), digits = 2),
n_obs = n())  %>%
mutate(LSmission = 'All missions') %>%
select(month, collection, LSmission, filter, n_obs, mae, rmse, bias) %>%
pivot_longer(!c(month, LSmission, filter, collection), names_to = 'variable', values_to = 'values') %>%
mutate(variable = factor(variable, levels = c('n_obs', 'mae', 'rmse', 'mse', 'bias'))) %>%
arrange(month, variable) %>%
pivot_wider(names_from = c(LSmission),
values_from = values)
month_error <- full_join(month_mission_error, month_error)
month_error
month_error <- full_join(month_mission_error, month_error) %>%
mutate(filter = factor(filter, levels = c('none', 'kurtosis'))) %>%
arrange(month, collection, filter, variable)
month_error <- all_surface_temp %>%
group_by(collection, month, filter) %>%
summarise(mse = round(sum((opt_resid^2))/n(), digits = 2),
rmse = round(sqrt(mse), digits = 2),
bias = round(sum(opt_resid)/n(), digits = 2),
mae = round(sum(abs(opt_resid))/n(), digits = 2),
n_obs = n())  %>%
mutate(LSmission = 'All missions') %>%
select(month, collection, LSmission, filter, n_obs, mae, rmse, bias) %>%
pivot_longer(!c(month, LSmission, filter, collection), names_to = 'variable', values_to = 'values') %>%
mutate(variable = factor(variable, levels = c('n_obs', 'mae', 'rmse', 'mse', 'bias'))) %>%
arrange(month, variable) %>%
pivot_wider(names_from = c(LSmission),
values_from = values)
month_error <- full_join(month_mission_error, month_error) %>%
mutate(filter = factor(filter, levels = c('none', 'kurtosis'))) %>%
arrange(month, collection, filter, variable)
month_error
month_error <- full_join(month_mission_error, month_error) %>%
mutate(filter = factor(filter, levels = c('none', 'kurtosis'))) %>%
arrange(month, collection, filter, variable) %>%
filter(filter == 'kurtosis')
month_error
month_error <- full_join(month_mission_error, month_error) %>%
mutate(filter = factor(filter, levels = c('none', 'kurtosis'))) %>%
arrange(month, collection, filter, variable) %>%
filter(filter == 'kurtosis') %>%
select(-collection, -filter)
month_error
month_error <- full_join(month_mission_error, month_error) %>%
mutate(filter = factor(filter, levels = c('none', 'kurtosis'))) %>%
arrange(month, collection, filter, variable) %>%
filter(filter == 'kurtosis') %>%
select(month, variable, `All missions`, `LS 5`, `LS 7`, `LS 8`)
month_error <- all_surface_temp %>%
group_by(collection, month, filter) %>%
summarise(mse = round(sum((opt_resid^2))/n(), digits = 2),
rmse = round(sqrt(mse), digits = 2),
bias = round(sum(opt_resid)/n(), digits = 2),
mae = round(sum(abs(opt_resid))/n(), digits = 2),
n_obs = n())  %>%
mutate(LSmission = 'All missions') %>%
select(month, collection, LSmission, filter, n_obs, mae, rmse, bias) %>%
pivot_longer(!c(month, LSmission, filter, collection), names_to = 'variable', values_to = 'values') %>%
mutate(variable = factor(variable, levels = c('n_obs', 'mae', 'rmse', 'mse', 'bias'))) %>%
arrange(month, variable) %>%
pivot_wider(names_from = c(LSmission),
values_from = values)
month_error <- full_join(month_mission_error, month_error) %>%
mutate(filter = factor(filter, levels = c('none', 'kurtosis'))) %>%
arrange(month, collection, filter, variable) %>%
filter(filter == 'kurtosis') %>%
select(month, variable, `All missions`, `LS 5`, `LS 7`, `LS 8`)
month_error
month_error <- all_surface_temp %>%
group_by(collection, month, filter) %>%
summarise(mse = round(sum((opt_resid^2))/n(), digits = 2),
rmse = round(sqrt(mse), digits = 2),
bias = round(sum(opt_resid)/n(), digits = 2),
mae = round(sum(abs(opt_resid))/n(), digits = 2),
n_obs = n())  %>%
mutate(LSmission = 'All missions') %>%
select(month, collection, LSmission, filter, n_obs, mae, rmse, bias) %>%
pivot_longer(!c(month, LSmission, filter, collection), names_to = 'variable', values_to = 'values') %>%
mutate(variable = factor(variable, levels = c('n_obs', 'mae', 'rmse', 'mse', 'bias'))) %>%
arrange(month, variable) %>%
pivot_wider(names_from = c(LSmission),
values_from = values)
month_error <- full_join(month_mission_error, month_error) %>%
ungroup() %>%
mutate(filter = factor(filter, levels = c('none', 'kurtosis'))) %>%
arrange(month, collection, filter, variable) %>%
filter(filter == 'kurtosis') %>%
select(month, variable, `All missions`, `LS 5`, `LS 7`, `LS 8`)
month_error
write.csv(month_error, file.path(figdir, 'STD_deming_kurtosis_performancebymonth.csv'), row.names = F)
source('scripts/R_library.R')
figdir = 'figures/'
datadir = 'data/'
lmp <- read.csv('https://raw.githubusercontent.com/Lake-Sunapee-Protective-Association/LMP/main/master%20files/LSPALMP_1986-2020_v2021-03-29.csv')
# load all LS data, filter for freeze and cloud cover
ls <- read.csv(file.path(datadir, 'colab-output/C2/C2_v2_temp_stats.csv')) %>%
mutate(date = substrRight(`system.index`, 8),
date = as.Date(date, format = '%Y%m%d')) %>%
mutate(LSmission = case_when(grepl('LT05', `system.index`) ~ 'LS 5',
grepl('LT04', `system.index`) ~ 'LS 4',
grepl('LE07', `system.index`) ~ 'LS 7',
grepl('LC08', `system.index`) ~ 'LS 8',
TRUE ~ NA_character_))
#### whole lake median by month and year ####
lmp_temp_monthly_stats <- lmp_temp_deep %>%
mutate(month = as.numeric(format(as.Date(date), '%m')),
day = as.numeric(format(as.Date(date), '%d')),
year = as.numeric(format(as.Date(date), '%Y'))) %>%
group_by(year, month) %>%
summarise(is_summer_median_temp_degC = median(value),
is_summer_max_temp_degC = max(value),
is_summer_min_temp_degC = min(value),
is_n_obs = length(value),
day = min(day)) %>%
filter((month >=5 & month < 12))
lmp_temp_deep <- lmp %>%
filter(parameter == 'temp_C') %>%
filter(station == 200 | station ==210 | station == 220| station==230) %>%
filter(depth_m == 0.5)
ls_kurtosis <- ls %>%
filter(surface_temp_kurtosis >2 )
# load all LS data, filter for freeze and cloud cover
ls <- read.csv(file.path(datadir, 'colab-output/C2/C2_v2_temp_stats.csv')) %>%
mutate(date = substrRight(`system.index`, 8),
date = as.Date(date, format = '%Y%m%d')) %>%
mutate(LSmission = case_when(grepl('LT05', `system.index`) ~ 'LS 5',
grepl('LT04', `system.index`) ~ 'LS 4',
grepl('LE07', `system.index`) ~ 'LS 7',
grepl('LC08', `system.index`) ~ 'LS 8',
TRUE ~ NA_character_))
ls_kurtosis <- ls %>%
filter(surface_temp_kurtosis >2 )
View(ls_kurtosis)
ls_temp_summer_monthly_median_kurtosis <- ls_kurtosis %>%
mutate(month = as.numeric(format((date), '%m')),
year = as.numeric(format((date), '%Y'))) %>%
group_by(year, month) %>%
summarise(ls_summer_median_temp_degC = median(surface_temp_median),
ls_n_obs = length(surface_temp_median))  %>%
filter(!is.na(month))
View(ls_temp_summer_monthly_median_kurtosis)
november <- ls_temp_summer_monthly_median_kurtosis %>%
filter(month == 11)
View(november)
november <- ls_kurtosis %>%
filter(month == 11)
november <- ls_kurtosis %>%
mutate(month - as.numeric(format(date, '%m'))) %>%
filter(month == 11)
november <- ls_kurtosis %>%
mutate(month - as.numeric(format(date, '%m'))) %>%
filter(month == 11)
november <- ls_kurtosis %>%
mutate(month = as.numeric(format(date, '%m'))) %>%
filter(month == 11)
