var == 'intercept' ~ int_se,
TRUE ~ NA_real_))
slope_int_table <- slope_int_table %>%
pivot_longer(cols = c(slope, intercept), names_to = 'var', values_to = 'value') %>%
mutate(se = case_when(var == 'slope' ~ slope_se,
var == 'intercept' ~ int_se,
TRUE ~ NA_real_))
View(slope_int_table)
# Plot slope and intercept with 95%ci ####
slope_int_table <- NULL
slope_int_table$model = c('C1SC', 'C2ST', 'C2ST_freeze', 'C2ST_maxrange', 'C2ST_maxIQR', 'C2ST_cloud')
slope_int_table$slope = c(C1_deming$coefficients[2],
C2_deming$coefficients[2],
C2_freeze_deming$coefficients[2],
C2_maxrange_deming$coefficients[2],
C2_maxIQR_deming$coefficients[2],
C2_cloud_deming$coefficients[2])
slope_int_table$intercept = c(C1_deming$coefficients[1],
C2_deming$coefficients[1],
C2_freeze_deming$coefficients[1],
C2_maxrange_deming$coefficients[1],
C2_maxIQR_deming$coefficients[1],
C2_cloud_deming$coefficients[1])
slope_int_table$slope_se = c(C1_deming$se[2],
C2_deming$se[2],
C2_freeze_deming$se[2],
C2_maxrange_deming$se[2],
C2_maxIQR_deming$se[2],
C2_cloud_deming$se[2])
slope_int_table$int_se = c(C1_deming$se[1],
C2_deming$se[1],
C2_freeze_deming$se[1],
C2_maxrange_deming$se[1],
C2_maxIQR_deming$se[1],
C2_cloud_deming$se[1])
slope_int_table <- as.data.frame(slope_int_table)
slope_int_table <- slope_int_table %>%
pivot_longer(cols = c(slope, intercept), names_to = 'var', values_to = 'value') %>%
mutate(se = case_when(var == 'slope' ~ slope_se,
var == 'intercept' ~ int_se,
TRUE ~ NA_real_),
u95 = value + se,
l95 = value - se) %>%
select(-slope_se, -int_se)
View(sd)
ggplot(slope_int_table, aes(x = var, y = value)) +
geom_point()
ggplot(slope_int_table, aes(x = model, y = value)) +
geom_point()
ggplot(slope_int_table, aes(x = model, y = value)) +
geom_point() +
final_theme
ggplot(slope_int_table, aes(x = model, y = value)) +
facet_grid(var~ .) +
geom_point() +
final_theme
ggplot(slope_int_table, aes(x = model, y = value)) +
facet_grid(var~ ., scales = 'free_y') +
geom_point() +
geom_pointrange(y = se)+
final_theme
ggplot(slope_int_table, aes(x = model, y = value)) +
facet_grid(var~ ., scales = 'free_y') +
geom_point() +
geom_pointrange(aes(y = se))+
final_theme
ggplot(slope_int_table, aes(x = model, y = value)) +
facet_grid(var~ ., scales = 'free_y') +
geom_point() +
geom_pointrange(aes(ymin = se))+
final_theme
ggplot(slope_int_table, aes(x = model, y = value)) +
facet_grid(var~ ., scales = 'free_y') +
geom_point() +
geom_pointrange((ymin = se))+
final_theme
ggplot(slope_int_table, aes(x = model, y = value)) +
facet_grid(var~ ., scales = 'free_y') +
geom_point() +
geom_pointrange(ymin = se)+
final_theme
ggplot(slope_int_table, aes(x = model, y = value)) +
facet_grid(var~ ., scales = 'free_y') +
geom_point() +
geom_pointrange(ymin = se, ymax = se)+
final_theme
ggplot(slope_int_table, aes(x = model, y = value)) +
facet_grid(var~ ., scales = 'free_y') +
geom_point() +
geom_pointrange(ymin = l95, ymax = u95)+
final_theme
ggplot(slope_int_table, aes(x = model, y = value)) +
facet_grid(var~ ., scales = 'free_y') +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
final_theme
slope_int_table %>%
filter(var == 'slope') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
final_theme
slope_int_table %>%
filter(var == 'slope') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
coord_cartesian(ylim = c(0.85, 1.15))
slope_int_table %>%
filter(var == 'slope') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
coord_cartesian(ylim = c(0.85, 1.15)) +
final_theme
slope_int_table %>%
filter(var == 'slope') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'intercept') +
coord_cartesian(ylim = c(0.85, 1.15)) +
final_theme
slope_int_table %>%
filter(var == 'slope') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'model slope') +
coord_cartesian(ylim = c(0.85, 1.15)) +
final_theme
slope_int_table %>%
filter(var == 'intercept') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'model intercept') +
coord_cartesian(ylim = c(0.85, 1.15)) +
final_theme
# coord_cartesian(ylim = c(0.85, 1.15)) +
slope_int_table %>%
filter(var == 'intercept') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'model intercept') +
# coord_cartesian(ylim = c(0.85, 1.15)) +
final_theme
slope_int_table %>%
filter(var == 'intercept') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'model intercept') +
coord_cartesian(ylim = c(0, -3)) +
final_theme
slope_int_table %>%
filter(var == 'intercept') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'model intercept') +
coord_cartesian(ylim = c(-3, 0)) +
final_theme
slope_int_table %>%
filter(var == 'intercept') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'model intercept') +
coord_cartesian(ylim = c(-3.1, 0)) +
final_theme
slope_int_table %>%
filter(var == 'intercept') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'model intercept') +
coord_cartesian(ylim = c(-3.2, 0)) +
final_theme
slope_int_table <- slope_int_table %>%
pivot_longer(cols = c(slope, intercept), names_to = 'var', values_to = 'value') %>%
mutate(se = case_when(var == 'slope' ~ slope_se,
var == 'intercept' ~ int_se,
TRUE ~ NA_real_),
u95 = value + se,
l95 = value - se) %>%
select(-slope_se, -int_se) %>%
mutate(model = as.factor(model, levels = c('C1SC', 'C2ST', 'c2ST_freeze', 'C2ST_maxIQR', 'C2ST_maxrange', 'C2ST_cloud') ))
# Plot slope and intercept with 95%ci ####
slope_int_table <- NULL
slope_int_table$model = c('C1SC', 'C2ST', 'C2ST_freeze', 'C2ST_maxrange', 'C2ST_maxIQR', 'C2ST_cloud')
slope_int_table$slope = c(C1_deming$coefficients[2],
C2_deming$coefficients[2],
C2_freeze_deming$coefficients[2],
C2_maxrange_deming$coefficients[2],
C2_maxIQR_deming$coefficients[2],
C2_cloud_deming$coefficients[2])
slope_int_table$intercept = c(C1_deming$coefficients[1],
C2_deming$coefficients[1],
C2_freeze_deming$coefficients[1],
C2_maxrange_deming$coefficients[1],
C2_maxIQR_deming$coefficients[1],
C2_cloud_deming$coefficients[1])
slope_int_table$slope_se = c(C1_deming$se[2],
C2_deming$se[2],
C2_freeze_deming$se[2],
C2_maxrange_deming$se[2],
C2_maxIQR_deming$se[2],
C2_cloud_deming$se[2])
slope_int_table$int_se = c(C1_deming$se[1],
C2_deming$se[1],
C2_freeze_deming$se[1],
C2_maxrange_deming$se[1],
C2_maxIQR_deming$se[1],
C2_cloud_deming$se[1])
slope_int_table <- as.data.frame(slope_int_table)
slope_int_table <- slope_int_table %>%
pivot_longer(cols = c(slope, intercept), names_to = 'var', values_to = 'value') %>%
mutate(se = case_when(var == 'slope' ~ slope_se,
var == 'intercept' ~ int_se,
TRUE ~ NA_real_),
u95 = value + se,
l95 = value - se) %>%
select(-slope_se, -int_se) %>%
mutate(model = as.factor(model, levels = c('C1SC', 'C2ST', 'c2ST_freeze', 'C2ST_maxIQR', 'C2ST_maxrange', 'C2ST_cloud') ))
slope_int_table %>%
filter(var == 'slope') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'model slope') +
coord_cartesian(ylim = c(0.85, 1.15)) +
final_theme
slope_int_table <- slope_int_table %>%
pivot_longer(cols = c(slope, intercept), names_to = 'var', values_to = 'value') %>%
mutate(se = case_when(var == 'slope' ~ slope_se,
var == 'intercept' ~ int_se,
TRUE ~ NA_real_),
u95 = value + se,
l95 = value - se) %>%
select(-slope_se, -int_se) %>%
mutate(model = as.factor(model, levels('C1SC', 'C2ST', 'c2ST_freeze', 'C2ST_maxIQR', 'C2ST_maxrange', 'C2ST_cloud') ))
slope_int_table <- slope_int_table %>%
pivot_longer(cols = c(slope, intercept), names_to = 'var', values_to = 'value') %>%
mutate(se = case_when(var == 'slope' ~ slope_se,
var == 'intercept' ~ int_se,
TRUE ~ NA_real_),
u95 = value + se,
l95 = value - se) %>%
select(-slope_se, -int_se) %>%
mutate(model = factor(model, levels = c('C1SC', 'C2ST', 'c2ST_freeze', 'C2ST_maxIQR', 'C2ST_maxrange', 'C2ST_cloud') ))
slope_int_table %>%
filter(var == 'slope') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'model slope') +
coord_cartesian(ylim = c(0.85, 1.15)) +
final_theme
slope_int_table %>%
filter(var == 'intercept') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'model intercept') +
coord_cartesian(ylim = c(-3.2, 0)) +
final_theme
# by insitu temp
istemp <- ggplot(C2ST_cloud, aes(x = temp_med, y = opt_resid)) +
geom_point() +
# geom_line(aes(group = date)) +
labs(x = 'in-situ median water temp\n(deg C)',
y = '\n') +
geom_abline(intercept =  0, slope = 0) +
coord_cartesian(ylim = c(-5, 5)) +
final_theme
slope_fig <- slope_int_table %>%
filter(var == 'slope') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'model slope') +
coord_cartesian(ylim = c(0.85, 1.15)) +
final_theme
int_fig <- slope_int_table %>%
filter(var == 'intercept') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'model intercept') +
coord_cartesian(ylim = c(-3.2, 0)) +
final_theme
slope_int_fig <- plot_grid(slope_fig, int_fig)
slope_int_fig
slope_int_fig <- plot_grid(slope_fig, int_fig,
ncol = 1)
slope_int_fig
# Plot slope and intercept with 95%ci ####
slope_int_table <- NULL
slope_int_table$model = c('C1SC', 'C2ST', 'C2ST_freeze', 'C2ST_maxrange', 'C2ST_maxIQR', 'C2ST_cloud')
slope_int_table$slope = c(C1_deming$coefficients[2],
C2_deming$coefficients[2],
C2_freeze_deming$coefficients[2],
C2_maxrange_deming$coefficients[2],
C2_maxIQR_deming$coefficients[2],
C2_cloud_deming$coefficients[2])
slope_int_table$intercept = c(C1_deming$coefficients[1],
C2_deming$coefficients[1],
C2_freeze_deming$coefficients[1],
C2_maxrange_deming$coefficients[1],
C2_maxIQR_deming$coefficients[1],
C2_cloud_deming$coefficients[1])
slope_int_table$slope_se = c(C1_deming$se[2],
C2_deming$se[2],
C2_freeze_deming$se[2],
C2_maxrange_deming$se[2],
C2_maxIQR_deming$se[2],
C2_cloud_deming$se[2])
slope_int_table$int_se = c(C1_deming$se[1],
C2_deming$se[1],
C2_freeze_deming$se[1],
C2_maxrange_deming$se[1],
C2_maxIQR_deming$se[1],
C2_cloud_deming$se[1])
slope_int_table <- as.data.frame(slope_int_table)
slope_int_table <- slope_int_table %>%
pivot_longer(cols = c(slope, intercept), names_to = 'var', values_to = 'value') %>%
mutate(se = case_when(var == 'slope' ~ slope_se,
var == 'intercept' ~ int_se,
TRUE ~ NA_real_),
u95 = value + se,
l95 = value - se) %>%
select(-slope_se, -int_se) %>%
mutate(model = factor(model, levels = c('C1SC', 'C2ST', 'CST_freeze', 'C2ST_maxIQR', 'C2ST_maxrange', 'C2ST_cloud') ))
slope_fig <- slope_int_table %>%
filter(var == 'slope') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'model slope') +
coord_cartesian(ylim = c(0.85, 1.15)) +
final_theme
int_fig <- slope_int_table %>%
filter(var == 'intercept') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'model intercept') +
coord_cartesian(ylim = c(-3.2, 0)) +
final_theme
slope_int_fig <- plot_grid(slope_fig, int_fig,
ncol = 1)
slope_int_fig
slope_int_table <- NULL
slope_int_table$model = c('C1SC', 'C2ST', 'C2ST_freeze', 'C2ST_maxrange', 'C2ST_maxIQR', 'C2ST_cloud')
slope_int_table$slope = c(C1_deming$coefficients[2],
C2_deming$coefficients[2],
C2_freeze_deming$coefficients[2],
C2_maxrange_deming$coefficients[2],
C2_maxIQR_deming$coefficients[2],
C2_cloud_deming$coefficients[2])
slope_int_table$intercept = c(C1_deming$coefficients[1],
C2_deming$coefficients[1],
C2_freeze_deming$coefficients[1],
C2_maxrange_deming$coefficients[1],
C2_maxIQR_deming$coefficients[1],
C2_cloud_deming$coefficients[1])
slope_int_table$slope_se = c(C1_deming$se[2],
C2_deming$se[2],
C2_freeze_deming$se[2],
C2_maxrange_deming$se[2],
C2_maxIQR_deming$se[2],
C2_cloud_deming$se[2])
slope_int_table$int_se = c(C1_deming$se[1],
C2_deming$se[1],
C2_freeze_deming$se[1],
C2_maxrange_deming$se[1],
C2_maxIQR_deming$se[1],
C2_cloud_deming$se[1])
slope_int_table <- as.data.frame(slope_int_table)
slope_int_table <- slope_int_table %>%
pivot_longer(cols = c(slope, intercept), names_to = 'var', values_to = 'value') %>%
mutate(se = case_when(var == 'slope' ~ slope_se,
var == 'intercept' ~ int_se,
TRUE ~ NA_real_),
u95 = value + se,
l95 = value - se) %>%
select(-slope_se, -int_se) %>%
mutate(model = factor(model, levels = c('C1SC', 'C2ST', 'C2ST_freeze', 'C2ST_maxIQR', 'C2ST_maxrange', 'C2ST_cloud') ))
slope_fig <- slope_int_table %>%
filter(var == 'slope') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'model slope') +
coord_cartesian(ylim = c(0.85, 1.15)) +
final_theme
int_fig <- slope_int_table %>%
filter(var == 'intercept') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'model intercept') +
coord_cartesian(ylim = c(-3.2, 0)) +
final_theme
slope_int_fig <- plot_grid(slope_fig, int_fig,
ncol = 1)
slope_int_fig
slope_int_table <- slope_int_table %>%
pivot_longer(cols = c(slope, intercept), names_to = 'var', values_to = 'value') %>%
mutate(se = case_when(var == 'slope' ~ slope_se,
var == 'intercept' ~ int_se,
TRUE ~ NA_real_),
u95 = value + se,
l95 = value - se) %>%
select(-slope_se, -int_se) %>%
mutate(model = factor(model,
levels = c('C1SC', 'C2ST', 'C2ST_freeze', 'C2ST_maxIQR', 'C2ST_maxrange', 'C2ST_cloud'),
labels = c('Collection 1', 'Collection 2', 'Collection 2\nsub-zero', 'Collection 2\nin-situ IQR',
'Collection 2\nin-situ range', 'Collection 2\ncloud')))
slope_int_table <- NULL
slope_int_table$model = c('C1SC', 'C2ST', 'C2ST_freeze', 'C2ST_maxrange', 'C2ST_maxIQR', 'C2ST_cloud')
slope_int_table$slope = c(C1_deming$coefficients[2],
C2_deming$coefficients[2],
C2_freeze_deming$coefficients[2],
C2_maxrange_deming$coefficients[2],
C2_maxIQR_deming$coefficients[2],
C2_cloud_deming$coefficients[2])
slope_int_table$intercept = c(C1_deming$coefficients[1],
C2_deming$coefficients[1],
C2_freeze_deming$coefficients[1],
C2_maxrange_deming$coefficients[1],
C2_maxIQR_deming$coefficients[1],
C2_cloud_deming$coefficients[1])
slope_int_table$slope_se = c(C1_deming$se[2],
C2_deming$se[2],
C2_freeze_deming$se[2],
C2_maxrange_deming$se[2],
C2_maxIQR_deming$se[2],
C2_cloud_deming$se[2])
slope_int_table$int_se = c(C1_deming$se[1],
C2_deming$se[1],
C2_freeze_deming$se[1],
C2_maxrange_deming$se[1],
C2_maxIQR_deming$se[1],
C2_cloud_deming$se[1])
slope_int_table <- as.data.frame(slope_int_table)
slope_int_table <- slope_int_table %>%
pivot_longer(cols = c(slope, intercept), names_to = 'var', values_to = 'value') %>%
mutate(se = case_when(var == 'slope' ~ slope_se,
var == 'intercept' ~ int_se,
TRUE ~ NA_real_),
u95 = value + se,
l95 = value - se) %>%
select(-slope_se, -int_se) %>%
mutate(model = factor(model,
levels = c('C1SC', 'C2ST', 'C2ST_freeze', 'C2ST_maxIQR', 'C2ST_maxrange', 'C2ST_cloud'),
labels = c('Collection 1', 'Collection 2', 'Collection 2\nsub-zero', 'Collection 2\nin-situ IQR',
'Collection 2\nin-situ range', 'Collection 2\ncloud')))
slope_fig <- slope_int_table %>%
filter(var == 'slope') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'model slope') +
coord_cartesian(ylim = c(0.85, 1.15)) +
final_theme
int_fig <- slope_int_table %>%
filter(var == 'intercept') %>%
ggplot(., aes(x = model, y = value)) +
geom_point() +
geom_pointrange(aes(ymin = l95, ymax = u95))+
labs(x = NULL,
y = 'model intercept') +
coord_cartesian(ylim = c(-3.2, 0)) +
final_theme
slope_int_fig <- plot_grid(slope_fig, int_fig,
ncol = 1)
slope_int_fig
ggsave(file.path(fig_dir, 'FigureF_slopeintercept.jpg'),
dpi = 300,
height = 6,
width = 8,
units = 'in')
slope_int_fig <- plot_grid(slope_fig, int_fig,
ncol = 1,
labels = c('a', 'b'))
slope_int_fig
ggsave(file.path(fig_dir, 'FigureF_slopeintercept.jpg'),
dpi = 300,
height = 6,
width = 8,
units = 'in')
