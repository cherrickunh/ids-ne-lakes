y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C2ST_kurtosis$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = '',
y = '\n',
title = 'Collection 2',
subtitle = 'kurtosis filter') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_d
FigC_plot <- plot_grid(FigC_a, FigC_b,
#FigC_c,
FigC_d,
# ncol = 2,
ncol = 3,
labels = c('a', 'b',
'c'
#, 'd'
),
label_y = 0.9,
label_x = 0.1)
FigC_plot
FigC_plot <- plot_grid(FigC_a, FigC_b,
#FigC_c,
FigC_d,
# ncol = 2,
ncol = 3,
labels = c('a', 'b',
'c'
#, 'd'
),
label_y = 0.9,
label_x = 0.1)
# Figure C: Plot Deming regression for all filters ####
FigC_a <- ggplot(C1SC, aes(x = is_temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = '#006cd1', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C1
geom_abline(intercept = C1_deming$coefficients[1], slope = C1_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C1_deming$ci[1,1], slope = C1_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C1_deming$ci[1,2], slope = C1_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C1SC$surface_temp_median, C1SC$is_temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C1SC$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = '',
y = '\n',
title = 'Collection 1',
subtitle = 'single-channel algorithm') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_a
FigC_b <- ggplot(C2ST, aes(x = is_temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = '#006cd1', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2
geom_abline(intercept = C2_deming$coefficients[1], slope = C2_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_deming$ci[1,1], slope = C2_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_deming$ci[1,2], slope = C2_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C2ST$surface_temp_median, C2ST$is_temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C2ST$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
labs(x = '',
y = '\n',
title = 'Collection 2',
subtitle = 'surface temperature product') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_b
# Figure C: Plot Deming regression for all filters ####
FigC_a <- ggplot(C1SC, aes(x = is_temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = '#006cd1', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C1
geom_abline(intercept = C1_deming$coefficients[1], slope = C1_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C1_deming$ci[1,1], slope = C1_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C1_deming$ci[1,2], slope = C1_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C1SC$surface_temp_median, C1SC$is_temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C1SC$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
geom_text(label = paste0('y = ', C1_deming$coefficients[1], ' + ', C1_deming$coefficients[2], 'x')) +
labs(x = NULL,
y = NULL,
title = 'Collection 1',
subtitle = 'single-channel algorithm') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_a
# Figure C: Plot Deming regression for all filters ####
FigC_a <- ggplot(C1SC, aes(x = is_temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = '#006cd1', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C1
geom_abline(intercept = C1_deming$coefficients[1], slope = C1_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C1_deming$ci[1,1], slope = C1_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C1_deming$ci[1,2], slope = C1_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C1SC$surface_temp_median, C1SC$is_temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C1SC$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
geom_text(label = paste0('y = ', C1_deming$coefficients[1], ' + ', C1_deming$coefficients[2], 'x'),
x = 2,
y = 27,
size = 4,
hjust = 0) +
labs(x = NULL,
y = NULL,
title = 'Collection 1',
subtitle = 'single-channel algorithm') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_a
# Figure C: Plot Deming regression for all filters ####
FigC_a <- ggplot(C1SC, aes(x = is_temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = '#006cd1', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C1
geom_abline(intercept = C1_deming$coefficients[1], slope = C1_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C1_deming$ci[1,1], slope = C1_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C1_deming$ci[1,2], slope = C1_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C1SC$surface_temp_median, C1SC$is_temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C1SC$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
geom_text(label = paste0('y = ', round(C1_deming$coefficients[1], digits = 2), ' + ', round(C1_deming$coefficients[2], digits = 2), 'x'),
x = 2,
y = 27,
size = 4,
hjust = 0) +
labs(x = NULL,
y = NULL,
title = 'Collection 1',
subtitle = 'single-channel algorithm') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_a
# Figure C: Plot Deming regression for all filters ####
FigC_a <- ggplot(C1SC, aes(x = is_temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = '#006cd1', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C1
geom_abline(intercept = C1_deming$coefficients[1], slope = C1_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C1_deming$ci[1,1], slope = C1_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C1_deming$ci[1,2], slope = C1_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C1SC$surface_temp_median, C1SC$is_temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C1SC$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
geom_text(label = paste0('y = ',
round(C1_deming$coefficients[1], digits = 2),
' + ',
round(C1_deming$coefficients[2], digits = 2),
' * x'),
x = 2,
y = 27,
size = 4,
hjust = 0) +
labs(x = NULL,
y = NULL,
title = 'Collection 1',
subtitle = 'single-channel algorithm') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_a
round(C2_deming$coefficients[2], digits = 2),
FigC_b <- ggplot(C2ST, aes(x = is_temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = '#006cd1', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2
geom_abline(intercept = C2_deming$coefficients[1], slope = C2_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_deming$ci[1,1], slope = C2_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_deming$ci[1,2], slope = C2_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C2ST$surface_temp_median, C2ST$is_temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C2ST$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
geom_text(label = paste0('y = ',
round(C2_deming$coefficients[1], digits = 2),
' + ',
round(C2_deming$coefficients[2], digits = 2),
' * x')) +
labs(x = '',
y = '\n',
title = 'Collection 2',
subtitle = 'surface temperature product') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_b
FigC_b <- ggplot(C2ST, aes(x = is_temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = '#006cd1', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2
geom_abline(intercept = C2_deming$coefficients[1], slope = C2_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_deming$ci[1,1], slope = C2_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_deming$ci[1,2], slope = C2_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C2ST$surface_temp_median, C2ST$is_temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C2ST$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
geom_text(label = paste0('y = ',
round(C2_deming$coefficients[1], digits = 2),
' + ',
round(C2_deming$coefficients[2], digits = 2),
' * x'),
x = 2,
y = 27,
size = 4,
hjust = 0) +
labs(x = '',
y = '\n',
title = 'Collection 2',
subtitle = 'surface temperature product') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_b
FigC_d <- ggplot(C2ST_kurtosis, aes(x = is_temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = '#006cd1', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and kurtosis
geom_abline(intercept = C2_kurtosis_deming$coefficients[1], slope = C2_kurtosis_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_kurtosis_deming$ci[1,1], slope = C2_kurtosis_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_kurtosis_deming$ci[1,2], slope = C2_kurtosis_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C2ST_kurtosis$surface_temp_median, C2ST_kurtosis$is_temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C2ST_kurtosis$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
geom_text(label = paste0('y = ',
round(C2_kurtosis_deming$coefficients[1], digits = 2),
' + ',
round(C2_kurtosis_deming$coefficients[2], digits = 2),
' * x'),
x = 2,
y = 27,
size = 4,
hjust = 0) +
labs(x = '',
y = '\n',
title = 'Collection 2',
subtitle = 'kurtosis filter') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_d
FigC_plot <- plot_grid(FigC_a, FigC_b,
#FigC_c,
FigC_d,
# ncol = 2,
ncol = 3,
labels = c('a', 'b',
'c'
#, 'd'
),
label_y = 0.9,
label_x = 0.1)
FigC_plot
FigC_b <- ggplot(C2ST, aes(x = is_temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = '#006cd1', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2
geom_abline(intercept = C2_deming$coefficients[1], slope = C2_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_deming$ci[1,1], slope = C2_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_deming$ci[1,2], slope = C2_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C2ST$surface_temp_median, C2ST$is_temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C2ST$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
geom_text(label = paste0('y = ',
round(C2_deming$coefficients[1], digits = 2),
' + ',
round(C2_deming$coefficients[2], digits = 2),
' * x'),
x = 2,
y = 27,
size = 4,
hjust = 0) +
labs(x = NULL,
y = NULL,
title = 'Collection 2',
subtitle = 'surface temperature product') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_b
FigC_d <- ggplot(C2ST_kurtosis, aes(x = is_temp_med, y = surface_temp_median)) +
geom_abline(slope = 1, intercept = 0, color = '#006cd1', size = 0.75) +
geom_point() +
#add deming regression and prediction intervals for C2 filtered for sub zero and kurtosis
geom_abline(intercept = C2_kurtosis_deming$coefficients[1], slope = C2_kurtosis_deming$coefficients[2], size = 0.75) +
geom_abline(intercept = C2_kurtosis_deming$ci[1,1], slope = C2_kurtosis_deming$ci[2,1], linetype = 3, size = 0.75) +
geom_abline(intercept = C2_kurtosis_deming$ci[1,2], slope = C2_kurtosis_deming$ci[2,2], linetype = 3, size = 0.75) +
geom_text(label = paste0('r = ', round(cor(C2ST_kurtosis$surface_temp_median, C2ST_kurtosis$is_temp_med), digits = 3)),
x = 2,
y = 25,
size = 4,
hjust = 0)+
geom_text(label = paste0('n = ', length(C2ST_kurtosis$date)),
x = 2,
y = 23,
size = 4,
hjust = 0)+
geom_text(label = paste0('y = ',
round(C2_kurtosis_deming$coefficients[1], digits = 2),
' + ',
round(C2_kurtosis_deming$coefficients[2], digits = 2),
' * x'),
x = 2,
y = 27,
size = 4,
hjust = 0) +
labs(x = NULL,
y = NULL,
title = 'Collection 2',
subtitle = 'kurtosis filter') +
final_theme +
coord_cartesian(xlim = c(0, 27),
ylim = c(0, 27))
FigC_d
FigC_plot <- plot_grid(FigC_a, FigC_b,
#FigC_c,
FigC_d,
# ncol = 2,
ncol = 3,
labels = c('a', 'b',
'c'
#, 'd'
),
label_y = 0.9,
label_x = 0.1)
FigC_plot
FigC_plot <- plot_grid(FigC_a, FigC_b,
#FigC_c,
FigC_d,
# ncol = 2,
ncol = 3,
labels = c('a', 'b',
'c'
#, 'd'
))
FigC_plot
FigC_plot <- plot_grid(FigC_a, FigC_b,
#FigC_c,
FigC_d,
# ncol = 2,
ncol = 3,
labels = c('a', 'b',
'c'
#, 'd'
),
label_y = 0.9)
FigC_plot
x_lab = ggdraw() + draw_label(label = expression(bold(paste(italic('in-situ'), ' median water temp (deg C)'))),
fontface = 'bold')
y_lab = ggdraw() + draw_label(label = 'Landsat median water temp (deg C)',
fontface = 'bold',
angle =90)
FigC_label = plot_grid(y_lab, FigC_plot,
NULL, x_lab,
ncol = 2,
rel_widths = c(0.05, 1.1),
rel_heights = c(1.1, 0.05))
FigC_label
ggsave(file.path(fig_dir, 'FigureC_deming_filters.jpg'),
dpi = 300,
height = 10,
width = 10,
units = 'in')
ggsave(file.path(fig_dir, 'FigureC_deming_filters.jpg'),
dpi = 300,
height = 5,
width = 10,
units = 'in')
ggsave(file.path(fig_dir, 'FigureC_deming_filters.jpg'),
dpi = 300,
height = 4,
width = 10,
units = 'in')
# Calculate error for various models ####
alldata_error <- all_surface_temp %>%
group_by(collection, filter) %>%
summarise(mse = round(sum((opt_resid^2))/n(), digits = 2),
rmse = round(sqrt(mse), digits = 2),
bias = round(sum(opt_resid)/n(), digits = 2),
mae = round(sum(abs(opt_resid))/n(), digits = 2),
n_obs = n())  %>%
mutate(month = 'All data',
LSmission = 'All missions') %>%
pivot_longer(cols = c(mse:n_obs), names_to = 'variable', values_to = 'values') %>%
mutate(variable = factor(variable, levels = c('n_obs', 'mae', 'rmse', 'mse', 'bias'))) %>%
arrange(month, variable) %>%
pivot_wider(names_from = c(LSmission),
values_from = values)
mission_error <- all_surface_temp %>%
group_by(collection, LSmission, filter) %>%
summarise(mse = round(sum((opt_resid^2))/n(), digits = 2),
rmse = round(sqrt(mse), digits = 2),
bias = round(sum(opt_resid)/n(), digits = 2),
mae = round(sum(abs(opt_resid))/n(), digits = 2),
n_obs = n())  %>%
mutate(month = 'All data') %>%
pivot_longer(cols = c(mse:n_obs), names_to = 'variable', values_to = 'values') %>%
mutate(variable = factor(variable, levels = c('n_obs', 'mae', 'rmse', 'mse', 'bias'))) %>%
arrange(month, variable) %>%
pivot_wider(names_from = c(LSmission),
values_from = values)
alldata_error <- full_join(alldata_error, mission_error)
alldata_error
month_mission_error <- all_surface_temp %>%
group_by(collection, month, LSmission, filter) %>%
summarise(mse = round(sum((opt_resid^2))/n(), digits = 2),
rmse = round(sqrt(mse), digits = 2),
bias = round(sum(opt_resid)/n(), digits = 2),
mae = round(sum(abs(opt_resid))/n(), digits = 2),
n_obs = n())  %>%
select(month, collection, LSmission, filter,n_obs, mae, rmse, bias) %>%
pivot_longer(!c(month, LSmission, collection, filter), names_to = 'variable', values_to = 'values') %>%
mutate(variable = factor(variable, levels = c('n_obs', 'mae', 'rmse', 'mse', 'bias'))) %>%
arrange(month, variable) %>%
pivot_wider(names_from = c(LSmission),
values_from = values)
month_error <- all_surface_temp %>%
group_by(collection, month, filter) %>%
summarise(mse = round(sum((opt_resid^2))/n(), digits = 2),
rmse = round(sqrt(mse), digits = 2),
bias = round(sum(opt_resid)/n(), digits = 2),
mae = round(sum(abs(opt_resid))/n(), digits = 2),
n_obs = n())  %>%
mutate(LSmission = 'All missions') %>%
select(month, collection, LSmission, filter, n_obs, mae, rmse, bias) %>%
pivot_longer(!c(month, LSmission, filter, collection), names_to = 'variable', values_to = 'values') %>%
mutate(variable = factor(variable, levels = c('n_obs', 'mae', 'rmse', 'mse', 'bias'))) %>%
arrange(month, variable) %>%
pivot_wider(names_from = c(LSmission),
values_from = values)
month_error <- full_join(month_mission_error, month_error)
alldata_error <- full_join(alldata_error, month_error)
write.csv(alldata_error, file.path(C2_datadir, 'LS_deming_predictionerror_C1C2_stats_v22Nov2021.csv'))
